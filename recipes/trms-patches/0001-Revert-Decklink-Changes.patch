From a0435cbcda60d12c042fb2f52f48e3f6e7c18de7 Mon Sep 17 00:00:00 2001
From: Ray Tiley <ray.tiley@trms.com>
Date: Mon, 9 Nov 2020 14:01:02 -0500
Subject: [PATCH 1/4] Revert decklink changes

---
 sys/decklink/gstdecklink.cpp                  |   328 +-
 sys/decklink/gstdecklink.h                    |    36 +-
 sys/decklink/gstdecklinkaudiosink.cpp         |    14 +-
 sys/decklink/gstdecklinkaudiosrc.cpp          |    39 +-
 sys/decklink/gstdecklinkaudiosrc.h            |     4 -
 sys/decklink/gstdecklinkvideosink.cpp         |    52 +-
 sys/decklink/gstdecklinkvideosink.h           |     2 +-
 sys/decklink/gstdecklinkvideosrc.cpp          |    83 +-
 sys/decklink/gstdecklinkvideosrc.h            |     6 +-
 sys/decklink/linux/DeckLinkAPI.h              |   176 +-
 sys/decklink/linux/DeckLinkAPIConfiguration.h |     8 +-
 sys/decklink/linux/DeckLinkAPIDeckControl.h   |     2 +-
 sys/decklink/linux/DeckLinkAPIDiscovery.h     |     2 +-
 sys/decklink/linux/DeckLinkAPIDispatch.cpp    |    33 +-
 sys/decklink/linux/DeckLinkAPIModes.h         |    54 +-
 sys/decklink/linux/DeckLinkAPITypes.h         |     7 +-
 sys/decklink/linux/DeckLinkAPIVersion.h       |     4 +-
 sys/decklink/osx/DeckLinkAPI.h                |   176 +-
 sys/decklink/osx/DeckLinkAPIConfiguration.h   |     8 +-
 sys/decklink/osx/DeckLinkAPIDeckControl.h     |     2 +-
 sys/decklink/osx/DeckLinkAPIDiscovery.h       |     2 +-
 sys/decklink/osx/DeckLinkAPIDispatch.cpp      |    38 +-
 sys/decklink/osx/DeckLinkAPIModes.h           |    54 +-
 sys/decklink/osx/DeckLinkAPIStreaming.h       |     2 +-
 sys/decklink/osx/DeckLinkAPITypes.h           |     7 +-
 sys/decklink/osx/DeckLinkAPIVersion.h         |     4 +-
 sys/decklink/win/DeckLinkAPI.h                | 12177 +++++++---------
 sys/decklink/win/DeckLinkAPI_i.c              |    67 +-
 28 files changed, 5577 insertions(+), 7810 deletions(-)

diff --git a/sys/decklink/gstdecklink.cpp b/sys/decklink/gstdecklink.cpp
index 257fbbae1..0f0e45fe3 100644
--- a/sys/decklink/gstdecklink.cpp
+++ b/sys/decklink/gstdecklink.cpp
@@ -48,6 +48,12 @@ gst_decklink_mode_get_type (void)
     {GST_DECKLINK_MODE_NTSC_P, "NTSC SD 60p", "ntsc-p"},
     {GST_DECKLINK_MODE_PAL_P, "PAL SD 50p", "pal-p"},
 
+    {GST_DECKLINK_MODE_NTSC_WIDESCREEN, "NTSC SD 60i Widescreen", "ntsc-widescreen"},
+    {GST_DECKLINK_MODE_NTSC2398_WIDESCREEN, "NTSC SD 60i Widescreen (24 fps)", "ntsc2398-widescreen"},
+    {GST_DECKLINK_MODE_PAL_WIDESCREEN, "PAL SD 50i Widescreen", "pal-widescreen"},
+    {GST_DECKLINK_MODE_NTSC_P_WIDESCREEN, "NTSC SD 60p Widescreen", "ntsc-p-widescreen"},
+    {GST_DECKLINK_MODE_PAL_P_WIDESCREEN, "PAL SD 50p Widescreen", "pal-p-widescreen"},
+
     {GST_DECKLINK_MODE_1080p2398, "HD1080 23.98p", "1080p2398"},
     {GST_DECKLINK_MODE_1080p24, "HD1080 24p", "1080p24"},
     {GST_DECKLINK_MODE_1080p25, "HD1080 25p", "1080p25"},
@@ -88,17 +94,6 @@ gst_decklink_mode_get_type (void)
     {GST_DECKLINK_MODE_2160p5994, "4k 59.94p", "2160p5994"},
     {GST_DECKLINK_MODE_2160p60, "4k 60p", "2160p60"},
 
-    {GST_DECKLINK_MODE_NTSC_WIDESCREEN, "NTSC SD 60i Widescreen",
-        "ntsc-widescreen"},
-    {GST_DECKLINK_MODE_NTSC2398_WIDESCREEN, "NTSC SD 60i Widescreen (24 fps)",
-        "ntsc2398-widescreen"},
-    {GST_DECKLINK_MODE_PAL_WIDESCREEN, "PAL SD 50i Widescreen",
-        "pal-widescreen"},
-    {GST_DECKLINK_MODE_NTSC_P_WIDESCREEN, "NTSC SD 60p Widescreen",
-        "ntsc-p-widescreen"},
-    {GST_DECKLINK_MODE_PAL_P_WIDESCREEN, "PAL SD 50p Widescreen",
-        "pal-p-widescreen"},
-
     {0, NULL, NULL}
   };
 
@@ -161,41 +156,18 @@ gst_decklink_video_format_get_type (void)
   return (GType) id;
 }
 
-/**
- * GstDecklinkProfileId:
- * @GST_DECKLINK_PROFILE_ID_DEFAULT: Don't change the profile
- * @GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_FULL_DUPLEX: Equivalent to bmdProfileOneSubDeviceFullDuplex
- * @GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_HALF_DUPLEX: Equivalent to bmdProfileOneSubDeviceHalfDuplex
- * @GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_FULL_DUPLEX: Equivalent to bmdProfileTwoSubDevicesFullDuplex
- * @GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_HALF_DUPLEX: Equivalent to bmdProfileTwoSubDevicesHalfDuplex
- * @GST_DECKLINK_PROFILE_ID_FOUR_SUB_DEVICES_HALF_DUPLEX: Equivalent to bmdProfileFourSubDevicesHalfDuplex
- *
- * Decklink Profile ID
- *
- * Since: 1.20
- */
 GType
-gst_decklink_profile_id_get_type (void)
+gst_decklink_duplex_mode_get_type (void)
 {
   static gsize id = 0;
   static const GEnumValue types[] = {
-    {GST_DECKLINK_PROFILE_ID_DEFAULT, "Default, don't change profile",
-        "default"},
-    {GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_FULL_DUPLEX,
-        "One sub-device, Full-Duplex", "one-sub-device-full"},
-    {GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_HALF_DUPLEX,
-        "One sub-device, Half-Duplex", "one-sub-device-half"},
-    {GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_FULL_DUPLEX,
-        "Two sub-devices, Full-Duplex", "two-sub-devices-full"},
-    {GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_HALF_DUPLEX,
-        "Two sub-devices, Half-Duplex", "two-sub-devices-half"},
-    {GST_DECKLINK_PROFILE_ID_FOUR_SUB_DEVICES_HALF_DUPLEX,
-        "Four sub-devices, Half-Duplex", "four-sub-devices-half"},
+    {GST_DECKLINK_DUPLEX_MODE_HALF, "Half-Duplex", "half"},
+    {GST_DECKLINK_DUPLEX_MODE_FULL, "Full-Duplex", "full"},
     {0, NULL, NULL}
   };
 
   if (g_once_init_enter (&id)) {
-    GType tmp = g_enum_register_static ("GstDecklinkProfileId", types);
+    GType tmp = g_enum_register_static ("GstDecklinkDuplexMode", types);
     g_once_init_leave (&id, tmp);
   }
 
@@ -311,6 +283,12 @@ static const GstDecklinkMode modes[] = {
   {bmdModeNTSCp, 720, 486, 30000, 1001, false, NTSC},
   {bmdModePALp, 720, 576, 25, 1, false, PAL},
 
+  {bmdModeNTSC, 720, 486, 30000, 1001, true, NTSC_WS},
+  {bmdModeNTSC2398, 720, 486, 24000, 1001, true, NTSC_WS},
+  {bmdModePAL, 720, 576, 25, 1, true, PAL_WS},
+  {bmdModeNTSCp, 720, 486, 30000, 1001, false, NTSC_WS},
+  {bmdModePALp, 720, 576, 25, 1, false, PAL_WS},
+
   {bmdModeHD1080p2398, 1920, 1080, 24000, 1001, false, HD},
   {bmdModeHD1080p24, 1920, 1080, 24, 1, false, HD},
   {bmdModeHD1080p25, 1920, 1080, 25, 1, false, HD},
@@ -333,7 +311,7 @@ static const GstDecklinkMode modes[] = {
   {bmdMode2k24, 2048, 1556, 24, 1, false, HD},
   {bmdMode2k25, 2048, 1556, 25, 1, false, HD},
 
-  {bmdMode2kDCI2398, 2048, 1080, 24000, 1001, false, HD},
+  {bmdMode2kDCI2398, 2048, 1080, 2400, 1001, false, HD},
   {bmdMode2kDCI24, 2048, 1080, 24, 1, false, HD},
   {bmdMode2kDCI25, 2048, 1080, 25, 1, false, HD},
   {bmdMode2kDCI2997, 2048, 1080, 30000, 1001, false, HD},
@@ -349,13 +327,7 @@ static const GstDecklinkMode modes[] = {
   {bmdMode4K2160p30, 3840, 2160, 30, 1, false, UHD},
   {bmdMode4K2160p50, 3840, 2160, 50, 1, false, UHD},
   {bmdMode4K2160p5994, 3840, 2160, 60000, 1001, false, UHD},
-  {bmdMode4K2160p60, 3840, 2160, 60, 1, false, UHD},
-
-  {bmdModeNTSC, 720, 486, 30000, 1001, true, NTSC_WS},
-  {bmdModeNTSC2398, 720, 486, 24000, 1001, true, NTSC_WS},
-  {bmdModePAL, 720, 576, 25, 1, true, PAL_WS},
-  {bmdModeNTSCp, 720, 486, 30000, 1001, false, NTSC_WS},
-  {bmdModePALp, 720, 576, 25, 1, false, PAL_WS}
+  {bmdMode4K2160p60, 3840, 2160, 60, 1, false, UHD}
 };
 
 static const struct
@@ -379,11 +351,15 @@ static const struct
   /* *INDENT-ON* */
 };
 
-enum ProfileSetOperationResult
+static const struct
 {
-  PROFILE_SET_UNSUPPORTED,
-  PROFILE_SET_SUCCESS,
-  PROFILE_SET_FAILURE
+  BMDDuplexMode mode;
+  GstDecklinkDuplexMode gstmode;
+} duplex_modes[] = {
+  /* *INDENT-OFF* */
+  {bmdDuplexModeHalf, GST_DECKLINK_DUPLEX_MODE_HALF},
+  {bmdDuplexModeFull, GST_DECKLINK_DUPLEX_MODE_FULL},
+  /* *INDENT-ON* */
 };
 
 enum DuplexModeSetOperationResult
@@ -424,7 +400,7 @@ static const struct
 const GstDecklinkMode *
 gst_decklink_get_mode (GstDecklinkModeEnum e)
 {
-  if (e < GST_DECKLINK_MODE_AUTO || e > GST_DECKLINK_MODE_PAL_P_WIDESCREEN)
+  if (e < GST_DECKLINK_MODE_AUTO || e > GST_DECKLINK_MODE_2160p60)
     return NULL;
   return &modes[e];
 }
@@ -613,6 +589,25 @@ gst_decklink_timecode_format_to_enum (BMDTimecodeFormat f)
   return GST_DECKLINK_TIMECODE_FORMAT_RP188ANY;
 }
 
+const BMDDuplexMode
+gst_decklink_duplex_mode_from_enum (GstDecklinkDuplexMode m)
+{
+  return duplex_modes[m].mode;
+}
+
+const GstDecklinkDuplexMode
+gst_decklink_duplex_mode_to_enum (BMDDuplexMode m)
+{
+  guint i;
+
+  for (i = 0; i < G_N_ELEMENTS (duplex_modes); i++) {
+    if (duplex_modes[i].mode == m)
+      return duplex_modes[i].gstmode;
+  }
+  g_assert_not_reached ();
+  return GST_DECKLINK_DUPLEX_MODE_HALF;
+}
+
 const BMDKeyerMode
 gst_decklink_keyer_mode_from_enum (GstDecklinkKeyerMode m)
 {
@@ -864,8 +859,14 @@ struct _Device
   GstDecklinkDevice *devices[4];
 };
 
-static ProfileSetOperationResult gst_decklink_configure_profile (Device *
-    device, GstDecklinkProfileId profile_id);
+DuplexModeSetOperationResult gst_decklink_configure_duplex_mode (Device *
+    device, BMDDuplexMode duplex_mode);
+DuplexModeSetOperationResult
+gst_decklink_configure_duplex_mode_pair_device (Device * device,
+    BMDDuplexMode duplex_mode);
+Device *gst_decklink_find_device_by_persistent_id (int64_t persistent_id);
+gboolean gst_decklink_device_has_persistent_id (Device * device,
+    int64_t persistent_id);
 
 class GStreamerDecklinkInputCallback:public IDeckLinkInputCallback
 {
@@ -945,8 +946,7 @@ public:
 
     /* Reset any timestamp observations we might've made */
     if (m_input->videosrc) {
-      GstDecklinkVideoSrc *videosrc =
-          GST_DECKLINK_VIDEO_SRC (m_input->videosrc);
+      GstDecklinkVideoSrc *videosrc = GST_DECKLINK_VIDEO_SRC (m_input->videosrc);
 
       g_mutex_lock (&videosrc->lock);
       videosrc->window_fill = 0;
@@ -1116,7 +1116,7 @@ private:
     while ((buf = (uint8_t *) gst_queue_array_pop_head (m_buffers))) {
       uint8_t offset = *(buf - 1);
       void *alloc_buf = buf - 128 + offset;
-        g_free (alloc_buf);
+      g_free (alloc_buf);
     }
   }
 
@@ -1546,7 +1546,7 @@ init_devices (gpointer data)
       }
     }
 
-    ret = decklink->QueryInterface (IID_IDeckLinkProfileAttributes,
+    ret = decklink->QueryInterface (IID_IDeckLinkAttributes,
         (void **) &dev->input.attributes);
     dev->output.attributes = dev->input.attributes;
     if (ret != S_OK) {
@@ -1556,7 +1556,8 @@ init_devices (gpointer data)
       bool tmp_bool = false;
       int64_t tmp_int = 2;
 
-      dev->input.attributes->GetInt (BMDDeckLinkMaximumAudioChannels, &tmp_int);
+      dev->input.attributes->GetInt (BMDDeckLinkMaximumAudioChannels,
+          &tmp_int);
       dev->input.attributes->GetFlag (BMDDeckLinkSupportsInputFormatDetection,
           &tmp_bool);
       supports_format_detection = tmp_bool;
@@ -1676,8 +1677,8 @@ gst_decklink_acquire_nth_output (gint n, GstElement * sink, gboolean is_audio)
 
   if (!is_audio) {
     GstDecklinkVideoSink *videosink = (GstDecklinkVideoSink *) (sink);
-    if (gst_decklink_configure_profile (device,
-            videosink->profile_id) == PROFILE_SET_FAILURE) {
+    if (gst_decklink_configure_duplex_mode (device,
+            videosink->duplex_mode) == DUPLEX_MODE_SET_FAILURE) {
       return NULL;
     }
   }
@@ -1750,12 +1751,11 @@ gst_decklink_acquire_nth_input (gint n, GstElement * src, gboolean is_audio)
 
   if (!is_audio) {
     GstDecklinkVideoSrc *videosrc = (GstDecklinkVideoSrc *) (src);
-    if (gst_decklink_configure_profile (device,
-            videosrc->profile_id) == PROFILE_SET_FAILURE) {
+    if (gst_decklink_configure_duplex_mode (device,
+            videosrc->duplex_mode) == DUPLEX_MODE_SET_FAILURE) {
       return NULL;
     }
   }
-
   g_mutex_lock (&input->lock);
   input->input->SetVideoInputFrameMemoryAllocator (new
       GStreamerDecklinkMemoryAllocator);
@@ -1768,7 +1768,6 @@ gst_decklink_acquire_nth_input (gint n, GstElement * src, gboolean is_audio)
     g_mutex_unlock (&input->lock);
     return input;
   }
-
   g_mutex_unlock (&input->lock);
 
   GST_ERROR ("Input device %d (audio: %d) in use already", n, is_audio);
@@ -1805,68 +1804,150 @@ gst_decklink_release_nth_input (gint n, GstElement * src, gboolean is_audio)
   g_mutex_unlock (&input->lock);
 }
 
-static ProfileSetOperationResult
-gst_decklink_configure_profile (Device * device,
-    GstDecklinkProfileId profile_id)
+/*
+ * Probes if duplex-mode is supported and sets it accordingly. I duplex-mode is not supported
+ * but this device is part of a pair (Duo2- and Quad2-Cards) and Half-Dupley-Mode is requested,
+ * the parent device is also checked and configured accordingly.
+ *
+ * If
+ *  - full-duplex-mode is requested and the device does not support it *or*
+ *  - half-duplex-mode is requested and there is not parent-device *or*
+ *  - half-duplex-mode is requested and neither the device nor the parent device does support setting
+ *    the duplex-mode, DUPLEX_MODE_SET_UNSUPPORTED is returnded.
+ * If the device does support duplex-mode and setting it succeeded, DUPLEX_MODE_SET_SUCCESS is rerturned.
+ * If
+ *  - the device does support duplex-mode and setting it failed *or*
+ *  - the Device reported a pair-device that does not exist in the system,
+ *    DUPLEX_MODE_SET_FAILURE is returned.
+ */
+DuplexModeSetOperationResult
+gst_decklink_configure_duplex_mode (Device * device, BMDDuplexMode duplex_mode)
 {
-  HRESULT res;
-
-  if (profile_id == GST_DECKLINK_PROFILE_ID_DEFAULT)
-    return PROFILE_SET_SUCCESS;
+  HRESULT result;
+  bool duplex_supported;
+  int64_t paired_device_id;
 
   GstDecklinkInput *input = &device->input;
-  IDeckLink *decklink = input->device;
-
-  IDeckLinkProfileManager *manager = NULL;
-  if (decklink->QueryInterface (IID_IDeckLinkProfileManager,
-          (void **) &manager) == S_OK) {
-    BMDProfileID bmd_profile_id;
-
-    switch (profile_id) {
-      case GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_FULL_DUPLEX:
-        bmd_profile_id = bmdProfileOneSubDeviceFullDuplex;
-        break;
-      case GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_HALF_DUPLEX:
-        bmd_profile_id = bmdProfileOneSubDeviceHalfDuplex;
-        break;
-      case GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_FULL_DUPLEX:
-        bmd_profile_id = bmdProfileTwoSubDevicesFullDuplex;
-        break;
-      case GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_HALF_DUPLEX:
-        bmd_profile_id = bmdProfileTwoSubDevicesHalfDuplex;
-        break;
-      case GST_DECKLINK_PROFILE_ID_FOUR_SUB_DEVICES_HALF_DUPLEX:
-        bmd_profile_id = bmdProfileFourSubDevicesHalfDuplex;
-        break;
-      default:
-      case GST_DECKLINK_PROFILE_ID_DEFAULT:
-        g_assert_not_reached ();
-        break;
-    }
 
-    IDeckLinkProfile *profile = NULL;
-    res = manager->GetProfile (bmd_profile_id, &profile);
+  result =
+      input->attributes->GetFlag (BMDDeckLinkSupportsDuplexModeConfiguration,
+      &duplex_supported);
+  if (result != S_OK) {
+    duplex_supported = false;
+  }
 
-    if (res == S_OK && profile) {
-      res = profile->SetActive ();
-      profile->Release ();
+  if (!duplex_supported) {
+    if (duplex_mode == bmdDuplexModeFull) {
+      GST_DEBUG ("Device does not support Full-Duplex-Mode");
+      return DUPLEX_MODE_SET_UNSUPPORTED;
+    } else if (duplex_mode == bmdDuplexModeHalf) {
+      result =
+          input->attributes->GetInt (BMDDeckLinkPairedDevicePersistentID,
+          &paired_device_id);
+
+      if (result == S_OK) {
+        GST_DEBUG ("Device does not support Half-Duplex-Mode but the Device is "
+            "a Part of a Device-Pair, trying to set Half-Duplex-Mode "
+            "on the Parent-Device");
+
+        Device *pair_device =
+            gst_decklink_find_device_by_persistent_id (paired_device_id);
+        if (pair_device == NULL) {
+          GST_ERROR ("Device reported as Pair-Device does not exist");
+          return DUPLEX_MODE_SET_FAILURE;
+        }
+        return gst_decklink_configure_duplex_mode_pair_device (pair_device,
+            duplex_mode);
+      } else {
+        GST_DEBUG ("Device does not support Half-Duplex-Mode");
+        return DUPLEX_MODE_SET_SUCCESS;
+      }
+    } else {
+      GST_ERROR ("duplex_mode=%d", duplex_mode);
+      g_assert_not_reached ();
     }
+  } else {
+    GST_DEBUG ("Setting duplex-mode of Device");
+    result = input->config->SetInt (bmdDeckLinkConfigDuplexMode, duplex_mode);
 
-    manager->Release ();
-
-    if (res == S_OK) {
-      GST_DEBUG ("Successfully set profile");
-      return PROFILE_SET_SUCCESS;
+    if (result == S_OK) {
+      GST_DEBUG ("Duplex mode set successful");
+      return DUPLEX_MODE_SET_SUCCESS;
     } else {
-      GST_ERROR ("Failed to set profile");
-      return PROFILE_SET_FAILURE;
+      GST_ERROR ("Setting duplex mode failed");
+      return DUPLEX_MODE_SET_FAILURE;
     }
+  }
+
+  g_assert_not_reached ();
+  return DUPLEX_MODE_SET_FAILURE;
+}
+
+DuplexModeSetOperationResult
+gst_decklink_configure_duplex_mode_pair_device (Device * device,
+    BMDDuplexMode duplex_mode)
+{
+  HRESULT result;
+  bool duplex_supported;
+
+  GstDecklinkInput *input = &device->input;
+
+  result =
+      input->attributes->GetFlag (BMDDeckLinkSupportsDuplexModeConfiguration,
+      &duplex_supported);
+  if (result != S_OK) {
+    duplex_supported = false;
+  }
+
+  if (!duplex_supported) {
+    GST_DEBUG ("Pair-Device does not support Duplex-Mode");
+    return DUPLEX_MODE_SET_UNSUPPORTED;
+  }
+
+  GST_DEBUG ("Setting duplex-mode of Pair-Device");
+  result = input->config->SetInt (bmdDeckLinkConfigDuplexMode, duplex_mode);
+
+  if (result == S_OK) {
+    GST_DEBUG ("Duplex mode set successful");
+    return DUPLEX_MODE_SET_SUCCESS;
   } else {
-    GST_DEBUG ("Device has only one profile");
-    return PROFILE_SET_UNSUPPORTED;
+    GST_ERROR ("Setting duplex mode failed");
+    return DUPLEX_MODE_SET_FAILURE;
   }
 }
 
+gboolean
+gst_decklink_device_has_persistent_id (Device * device, int64_t persistent_id)
+{
+  HRESULT result;
+  int64_t this_device_persistent_id;
+
+  GstDecklinkInput *input = &device->input;
+
+  result =
+      input->attributes->GetInt (BMDDeckLinkPersistentID,
+      &this_device_persistent_id);
+  return (result == S_OK) && (this_device_persistent_id == persistent_id);
+}
+
+Device *
+gst_decklink_find_device_by_persistent_id (int64_t persistent_id)
+{
+  GST_DEBUG ("Searching Device by persistent ID %" G_GINT64_FORMAT,
+      (gint64) persistent_id);
+
+  for (guint index = 0; index < devices->len; index++) {
+    Device *device = (Device *) g_ptr_array_index (devices, index);
+
+    if (gst_decklink_device_has_persistent_id (device, persistent_id)) {
+      GST_DEBUG ("Found matching Device %u", index);
+      return device;
+    }
+  }
+
+  return NULL;
+}
+
 G_DEFINE_TYPE (GstDecklinkClock, gst_decklink_clock, GST_TYPE_SYSTEM_CLOCK);
 
 static GstClockTime gst_decklink_clock_get_internal_time (GstClock * clock);
@@ -1974,21 +2055,14 @@ plugin_init (GstPlugin * plugin)
   gst_device_provider_register (plugin, "decklinkdeviceprovider",
       GST_RANK_PRIMARY, GST_TYPE_DECKLINK_DEVICE_PROVIDER);
 
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_AUDIO_CHANNELS,
-      (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_AUDIO_CONNECTION,
-      (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_PROFILE_ID,
-      (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_KEYER_MODE,
-      (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_AUDIO_CHANNELS, (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_AUDIO_CONNECTION, (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_DUPLEX_MODE, (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_KEYER_MODE, (GstPluginAPIFlags) 0);
   gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_MODE, (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_TIMECODE_FORMAT,
-      (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_VIDEO_FORMAT,
-      (GstPluginAPIFlags) 0);
-  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_CONNECTION,
-      (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_TIMECODE_FORMAT, (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_VIDEO_FORMAT, (GstPluginAPIFlags) 0);
+  gst_type_mark_as_plugin_api (GST_TYPE_DECKLINK_CONNECTION, (GstPluginAPIFlags) 0);
 
   return TRUE;
 }
diff --git a/sys/decklink/gstdecklink.h b/sys/decklink/gstdecklink.h
index 0e3e3d5bc..97522c6c7 100644
--- a/sys/decklink/gstdecklink.h
+++ b/sys/decklink/gstdecklink.h
@@ -64,6 +64,12 @@ typedef enum {
   GST_DECKLINK_MODE_NTSC_P,
   GST_DECKLINK_MODE_PAL_P,
 
+  GST_DECKLINK_MODE_NTSC_WIDESCREEN,
+  GST_DECKLINK_MODE_NTSC2398_WIDESCREEN,
+  GST_DECKLINK_MODE_PAL_WIDESCREEN,
+  GST_DECKLINK_MODE_NTSC_P_WIDESCREEN,
+  GST_DECKLINK_MODE_PAL_P_WIDESCREEN,
+
   GST_DECKLINK_MODE_1080p2398,
   GST_DECKLINK_MODE_1080p24,
   GST_DECKLINK_MODE_1080p25,
@@ -102,13 +108,7 @@ typedef enum {
   GST_DECKLINK_MODE_2160p30,
   GST_DECKLINK_MODE_2160p50,
   GST_DECKLINK_MODE_2160p5994,
-  GST_DECKLINK_MODE_2160p60,
-
-  GST_DECKLINK_MODE_NTSC_WIDESCREEN,
-  GST_DECKLINK_MODE_NTSC2398_WIDESCREEN,
-  GST_DECKLINK_MODE_PAL_WIDESCREEN,
-  GST_DECKLINK_MODE_NTSC_P_WIDESCREEN,
-  GST_DECKLINK_MODE_PAL_P_WIDESCREEN
+  GST_DECKLINK_MODE_2160p60
 } GstDecklinkModeEnum;
 #define GST_TYPE_DECKLINK_MODE (gst_decklink_mode_get_type ())
 GType gst_decklink_mode_get_type (void);
@@ -161,15 +161,11 @@ typedef enum {
 GType gst_decklink_video_format_get_type (void);
 
 typedef enum {
-  GST_DECKLINK_PROFILE_ID_DEFAULT,
-  GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_FULL_DUPLEX, /* bmdProfileOneSubDeviceFullDuplex */
-  GST_DECKLINK_PROFILE_ID_ONE_SUB_DEVICE_HALF_DUPLEX, /* bmdProfileOneSubDeviceHalfDuplex */
-  GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_FULL_DUPLEX, /* bmdProfileTwoSubDevicesFullDuplex */
-  GST_DECKLINK_PROFILE_ID_TWO_SUB_DEVICES_HALF_DUPLEX, /* bmdProfileTwoSubDevicesHalfDuplex */
-  GST_DECKLINK_PROFILE_ID_FOUR_SUB_DEVICES_HALF_DUPLEX, /* bmdProfileFourSubDevicesHalfDuplex */
-} GstDecklinkProfileId;
-#define GST_TYPE_DECKLINK_PROFILE_ID (gst_decklink_profile_id_get_type ())
-GType gst_decklink_profile_id_get_type (void);
+  GST_DECKLINK_DUPLEX_MODE_HALF, /* bmdDuplexModeHalf */
+  GST_DECKLINK_DUPLEX_MODE_FULL, /* bmdDuplexModeFull */
+} GstDecklinkDuplexMode;
+#define GST_TYPE_DECKLINK_DUPLEX_MODE (gst_decklink_duplex_mode_get_type ())
+GType gst_decklink_duplex_mode_get_type (void);
 
 typedef enum {
   GST_DECKLINK_TIMECODE_FORMAT_RP188VITC1, /*bmdTimecodeRP188VITC1 */
@@ -208,8 +204,8 @@ const GstDecklinkVideoFormat gst_decklink_type_from_video_format (GstVideoFormat
 GstVideoFormat gst_decklink_video_format_from_type (BMDPixelFormat pf);
 const BMDTimecodeFormat gst_decklink_timecode_format_from_enum (GstDecklinkTimecodeFormat f);
 const GstDecklinkTimecodeFormat gst_decklink_timecode_format_to_enum (BMDTimecodeFormat f);
-const BMDProfileID gst_decklink_profile_id_from_enum (GstDecklinkProfileId p);
-const GstDecklinkProfileId gst_decklink_profile_id_to_enum (BMDProfileID p);
+const BMDDuplexMode gst_decklink_duplex_mode_from_enum (GstDecklinkDuplexMode m);
+const GstDecklinkDuplexMode gst_decklink_duplex_mode_to_enum (BMDDuplexMode m);
 const BMDKeyerMode gst_decklink_keyer_mode_from_enum (GstDecklinkKeyerMode m);
 const GstDecklinkKeyerMode gst_decklink_keyer_mode_to_enum (BMDKeyerMode m);
 
@@ -237,7 +233,7 @@ typedef struct _GstDecklinkOutput GstDecklinkOutput;
 struct _GstDecklinkOutput {
   IDeckLink *device;
   IDeckLinkOutput *output;
-  IDeckLinkProfileAttributes *attributes;
+  IDeckLinkAttributes *attributes;
   IDeckLinkKeyer *keyer;
 
   gchar *hw_serial_number;
@@ -268,7 +264,7 @@ struct _GstDecklinkInput {
   IDeckLink *device;
   IDeckLinkInput *input;
   IDeckLinkConfiguration *config;
-  IDeckLinkProfileAttributes *attributes;
+  IDeckLinkAttributes *attributes;
 
   gchar *hw_serial_number;
 
diff --git a/sys/decklink/gstdecklinkaudiosink.cpp b/sys/decklink/gstdecklinkaudiosink.cpp
index 924caf1d1..546072485 100644
--- a/sys/decklink/gstdecklinkaudiosink.cpp
+++ b/sys/decklink/gstdecklinkaudiosink.cpp
@@ -684,8 +684,7 @@ gst_decklink_audio_sink_render (GstBaseSink * bsink, GstBuffer * buffer)
         GST_TIME_ARGS (buffered_time), buffered_samples);
 
     {
-      GstClockTimeDiff buffered_ahead_of_clock_ahead =
-          GST_CLOCK_DIFF (clock_ahead, buffered_time);
+      GstClockTimeDiff buffered_ahead_of_clock_ahead = GST_CLOCK_DIFF (clock_ahead, buffered_time);
 
       GST_DEBUG_OBJECT (self, "driver is %" GST_STIME_FORMAT " ahead of the "
           "expected clock", GST_STIME_ARGS (buffered_ahead_of_clock_ahead));
@@ -694,11 +693,9 @@ gst_decklink_audio_sink_render (GstBaseSink * bsink, GstBuffer * buffer)
        * own synchronisation. It seems to count samples instead. */
       /* FIXME: do we need to split buffers? */
       if (buffered_ahead_of_clock_ahead > 0 &&
-          buffered_ahead_of_clock_ahead >
-          gst_base_sink_get_max_lateness (bsink)) {
-        GST_DEBUG_OBJECT (self,
-            "Dropping buffer that is %" GST_STIME_FORMAT " too late",
-            GST_STIME_ARGS (buffered_ahead_of_clock_ahead));
+            buffered_ahead_of_clock_ahead > gst_base_sink_get_max_lateness (bsink)) {
+        GST_DEBUG_OBJECT (self, "Dropping buffer that is %" GST_STIME_FORMAT
+            " too late", GST_STIME_ARGS (buffered_ahead_of_clock_ahead));
         if (self->resampler)
           gst_audio_resampler_reset (self->resampler);
         flow_ret = GST_FLOW_OK;
@@ -713,8 +710,7 @@ gst_decklink_audio_sink_render (GstBaseSink * bsink, GstBuffer * buffer)
 
       GST_DEBUG_OBJECT (self,
           "Buffered enough, wait for preroll or the clock or flushing. "
-          "Configured buffer time: %" GST_TIME_FORMAT,
-          GST_TIME_ARGS (self->buffer_time));
+          "Configured buffer time: %" GST_TIME_FORMAT, GST_TIME_ARGS (self->buffer_time));
 
       if (wait_time < self->buffer_time)
         wait_time = 0;
diff --git a/sys/decklink/gstdecklinkaudiosrc.cpp b/sys/decklink/gstdecklinkaudiosrc.cpp
index 4ec47a81c..2fef934c8 100644
--- a/sys/decklink/gstdecklinkaudiosrc.cpp
+++ b/sys/decklink/gstdecklinkaudiosrc.cpp
@@ -237,10 +237,6 @@ gst_decklink_audio_src_init (GstDecklinkAudioSrc * self)
   self->current_packets =
       gst_queue_array_new_for_struct (sizeof (CapturePacket),
       DEFAULT_BUFFER_SIZE);
-
-  self->skipped_last = 0;
-  self->skip_from_timestamp = GST_CLOCK_TIME_NONE;
-  self->skip_to_timestamp = GST_CLOCK_TIME_NONE;
 }
 
 void
@@ -470,10 +466,6 @@ gst_decklink_audio_src_start (GstDecklinkAudioSrc * self)
   }
   gst_caps_unref (caps);
 
-  self->skipped_last = 0;
-  self->skip_from_timestamp = GST_CLOCK_TIME_NONE;
-  self->skip_to_timestamp = GST_CLOCK_TIME_NONE;
-
   return TRUE;
 }
 
@@ -534,36 +526,25 @@ gst_decklink_audio_src_got_packet (GstElement * element,
   if (!self->flushing) {
     CapturePacket p;
     guint skipped_packets = 0;
+    GstClockTime from_timestamp = GST_CLOCK_TIME_NONE;
+    GstClockTime to_timestamp = GST_CLOCK_TIME_NONE;
 
     while (gst_queue_array_get_length (self->current_packets) >=
         self->buffer_size) {
       CapturePacket *tmp = (CapturePacket *)
           gst_queue_array_pop_head_struct (self->current_packets);
-      if (skipped_packets == 0 && self->skipped_last == 0)
-        self->skip_from_timestamp = tmp->timestamp;
+      if (skipped_packets == 0)
+        from_timestamp = tmp->timestamp;
       skipped_packets++;
-      self->skip_to_timestamp = tmp->timestamp;
+      to_timestamp = tmp->timestamp;
       capture_packet_clear (tmp);
     }
 
-    if (self->skipped_last == 0 && skipped_packets > 0) {
-      GST_WARNING_OBJECT (self, "Starting to drop audio packets");
-    }
-
-    if (skipped_packets == 0 && self->skipped_last > 0) {
-      GST_ELEMENT_WARNING_WITH_DETAILS (self,
-          STREAM, FAILED,
-          ("Dropped %u old packets from %" GST_TIME_FORMAT " to %"
-              GST_TIME_FORMAT, self->skipped_last,
-              GST_TIME_ARGS (self->skip_from_timestamp),
-              GST_TIME_ARGS (self->skip_to_timestamp)),
-          (NULL),
-          ("dropped", G_TYPE_UINT, self->skipped_last,
-              "from", G_TYPE_UINT64, self->skip_from_timestamp,
-              "to", G_TYPE_UINT64, self->skip_to_timestamp, NULL));
-      self->skipped_last = 0;
-    }
-    self->skipped_last += skipped_packets;
+    if (skipped_packets > 0)
+      GST_WARNING_OBJECT (self,
+          "Dropped %u old packets from %" GST_TIME_FORMAT " to %"
+          GST_TIME_FORMAT, skipped_packets, GST_TIME_ARGS (from_timestamp),
+          GST_TIME_ARGS (to_timestamp));
 
     memset (&p, 0, sizeof (p));
     p.packet = packet;
diff --git a/sys/decklink/gstdecklinkaudiosrc.h b/sys/decklink/gstdecklinkaudiosrc.h
index fdb77b622..405da7ae5 100644
--- a/sys/decklink/gstdecklinkaudiosrc.h
+++ b/sys/decklink/gstdecklinkaudiosrc.h
@@ -81,10 +81,6 @@ struct _GstDecklinkAudioSrc
   GstClockTime discont_time;
 
   guint buffer_size;
-
-  guint skipped_last;
-  GstClockTime skip_from_timestamp;
-  GstClockTime skip_to_timestamp;
 };
 
 struct _GstDecklinkAudioSrcClass
diff --git a/sys/decklink/gstdecklinkvideosink.cpp b/sys/decklink/gstdecklinkvideosink.cpp
index e83b0329b..d069cd070 100644
--- a/sys/decklink/gstdecklinkvideosink.cpp
+++ b/sys/decklink/gstdecklinkvideosink.cpp
@@ -238,7 +238,7 @@ enum
   PROP_MODE,
   PROP_DEVICE_NUMBER,
   PROP_VIDEO_FORMAT,
-  PROP_PROFILE_ID,
+  PROP_DUPLEX_MODE,
   PROP_TIMECODE_FORMAT,
   PROP_KEYER_MODE,
   PROP_KEYER_LEVEL,
@@ -341,26 +341,17 @@ gst_decklink_video_sink_class_init (GstDecklinkVideoSinkClass * klass)
           (GParamFlags) (G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
               G_PARAM_CONSTRUCT)));
 
-  /**
-   * GstDecklinkVideoSink:profile
-   *
-   * Specifies decklink profile to use.
-   *
-   * Since: 1.20
-   */
-  g_object_class_install_property (gobject_class, PROP_PROFILE_ID,
-      g_param_spec_enum ("profile", "Profile",
-          "Certain DeckLink devices such as the DeckLink 8K Pro, the DeckLink "
-          "Quad 2 and the DeckLink Duo 2 support multiple profiles to "
-          "configure the capture and playback behavior of its sub-devices."
-          "For the DeckLink Duo 2 and DeckLink Quad 2, a profile is shared "
-          "between any 2 sub-devices that utilize the same connectors. For the "
-          "DeckLink 8K Pro, a profile is shared between all 4 sub-devices. Any "
-          "sub-devices that share a profile are considered to be part of the "
-          "same profile group."
+  g_object_class_install_property (gobject_class, PROP_DUPLEX_MODE,
+      g_param_spec_enum ("duplex-mode", "Duplex mode",
+          "Certain DeckLink devices such as the DeckLink Quad 2 and the "
           "DeckLink Duo 2 support configuration of the duplex mode of "
-          "individual sub-devices.",
-          GST_TYPE_DECKLINK_PROFILE_ID, GST_DECKLINK_PROFILE_ID_DEFAULT,
+          "individual sub-devices."
+          "A sub-device configured as full-duplex will use two connectors, "
+          "which allows simultaneous capture and playback, internal keying, "
+          "and fill & key scenarios."
+          "A half-duplex sub-device will use a single connector as an "
+          "individual capture or playback channel.",
+          GST_TYPE_DECKLINK_DUPLEX_MODE, GST_DECKLINK_DUPLEX_MODE_HALF,
           (GParamFlags) (G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
               G_PARAM_CONSTRUCT)));
 
@@ -428,7 +419,7 @@ gst_decklink_video_sink_init (GstDecklinkVideoSink * self)
   self->mode = GST_DECKLINK_MODE_NTSC;
   self->device_number = 0;
   self->video_format = GST_DECKLINK_VIDEO_FORMAT_8BIT_YUV;
-  self->profile_id = GST_DECKLINK_PROFILE_ID_DEFAULT;
+  self->duplex_mode = bmdDuplexModeHalf;
   /* VITC is legacy, we should expect RP188 in modern use cases */
   self->timecode_format = bmdTimecodeRP188Any;
   self->caption_line = 0;
@@ -466,8 +457,10 @@ gst_decklink_video_sink_set_property (GObject * object, guint property_id,
           break;
       }
       break;
-    case PROP_PROFILE_ID:
-      self->profile_id = (GstDecklinkProfileId) g_value_get_enum (value);
+    case PROP_DUPLEX_MODE:
+      self->duplex_mode =
+          gst_decklink_duplex_mode_from_enum ((GstDecklinkDuplexMode)
+          g_value_get_enum (value));
       break;
     case PROP_TIMECODE_FORMAT:
       self->timecode_format =
@@ -510,8 +503,9 @@ gst_decklink_video_sink_get_property (GObject * object, guint property_id,
     case PROP_VIDEO_FORMAT:
       g_value_set_enum (value, self->video_format);
       break;
-    case PROP_PROFILE_ID:
-      g_value_set_enum (value, self->profile_id);
+    case PROP_DUPLEX_MODE:
+      g_value_set_enum (value,
+          gst_decklink_duplex_mode_to_enum (self->duplex_mode));
       break;
     case PROP_TIMECODE_FORMAT:
       g_value_set_enum (value,
@@ -1095,7 +1089,7 @@ write_vbi (GstDecklinkVideoSink * self, GstBuffer * buffer,
 
       /* See SMPTE 2016-3 Section 4 */
       /* AFD and AR */
-      if (self->mode <= (gint) GST_DECKLINK_MODE_PAL_P) {
+      if (self->mode < (gint) GST_DECKLINK_MODE_NTSC_WIDESCREEN) {
         afd_bar_data_ptr[0] = (afd << 3) | 0x0;
       } else {
         afd_bar_data_ptr[0] = (afd << 3) | 0x4;
@@ -1623,8 +1617,7 @@ gst_decklink_video_sink_change_state (GstElement * element,
           self->internal_time_offset = self->internal_base_time;
         } else if (GST_CLOCK_TIME_IS_VALID (self->internal_pause_time)) {
           self->internal_time_offset +=
-              gst_clock_get_internal_time (self->output->clock) -
-              self->internal_pause_time;
+                  gst_clock_get_internal_time (self->output->clock) - self->internal_pause_time;
         }
 
         GST_INFO_OBJECT (self, "clock has been set to %" GST_PTR_FORMAT
@@ -1688,8 +1681,7 @@ gst_decklink_video_sink_change_state (GstElement * element,
     case GST_STATE_CHANGE_PAUSED_TO_PLAYING:
       break;
     case GST_STATE_CHANGE_PLAYING_TO_PAUSED:
-      self->internal_pause_time =
-          gst_clock_get_internal_time (self->output->clock);
+      self->internal_pause_time = gst_clock_get_internal_time (self->output->clock);
       break;
     default:
       break;
diff --git a/sys/decklink/gstdecklinkvideosink.h b/sys/decklink/gstdecklinkvideosink.h
index dffe3a7f3..06f5b762f 100644
--- a/sys/decklink/gstdecklinkvideosink.h
+++ b/sys/decklink/gstdecklinkvideosink.h
@@ -52,7 +52,7 @@ struct _GstDecklinkVideoSink
   GstDecklinkModeEnum mode;
   gint device_number;
   GstDecklinkVideoFormat video_format;
-  GstDecklinkProfileId profile_id;
+  BMDDuplexMode duplex_mode;
   BMDTimecodeFormat timecode_format;
   BMDKeyerMode keyer_mode;
   gint keyer_level;
diff --git a/sys/decklink/gstdecklinkvideosrc.cpp b/sys/decklink/gstdecklinkvideosrc.cpp
index 4edeffd66..4106d68e6 100644
--- a/sys/decklink/gstdecklinkvideosrc.cpp
+++ b/sys/decklink/gstdecklinkvideosrc.cpp
@@ -162,7 +162,7 @@ enum
   PROP_DEVICE_NUMBER,
   PROP_BUFFER_SIZE,
   PROP_VIDEO_FORMAT,
-  PROP_PROFILE_ID,
+  PROP_DUPLEX_MODE,
   PROP_TIMECODE_FORMAT,
   PROP_OUTPUT_STREAM_TIME,
   PROP_SKIP_FIRST_TIME,
@@ -298,26 +298,17 @@ gst_decklink_video_src_class_init (GstDecklinkVideoSrcClass * klass)
           (GParamFlags) (G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
               G_PARAM_CONSTRUCT)));
 
-  /**
-   * GstDecklinkVideoSrc:profile
-   *
-   * Specifies decklink profile to use.
-   *
-   * Since: 1.20
-   */
-  g_object_class_install_property (gobject_class, PROP_PROFILE_ID,
-      g_param_spec_enum ("profile", "Profile",
-          "Certain DeckLink devices such as the DeckLink 8K Pro, the DeckLink "
-          "Quad 2 and the DeckLink Duo 2 support multiple profiles to "
-          "configure the capture and playback behavior of its sub-devices."
-          "For the DeckLink Duo 2 and DeckLink Quad 2, a profile is shared "
-          "between any 2 sub-devices that utilize the same connectors. For the "
-          "DeckLink 8K Pro, a profile is shared between all 4 sub-devices. Any "
-          "sub-devices that share a profile are considered to be part of the "
-          "same profile group."
+  g_object_class_install_property (gobject_class, PROP_DUPLEX_MODE,
+      g_param_spec_enum ("duplex-mode", "Duplex mode",
+          "Certain DeckLink devices such as the DeckLink Quad 2 and the "
           "DeckLink Duo 2 support configuration of the duplex mode of "
-          "individual sub-devices.",
-          GST_TYPE_DECKLINK_PROFILE_ID, GST_DECKLINK_PROFILE_ID_DEFAULT,
+          "individual sub-devices."
+          "A sub-device configured as full-duplex will use two connectors, "
+          "which allows simultaneous capture and playback, internal keying, "
+          "and fill & key scenarios."
+          "A half-duplex sub-device will use a single connector as an "
+          "individual capture or playback channel.",
+          GST_TYPE_DECKLINK_DUPLEX_MODE, GST_DECKLINK_DUPLEX_MODE_HALF,
           (GParamFlags) (G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS |
               G_PARAM_CONSTRUCT)));
 
@@ -393,7 +384,7 @@ gst_decklink_video_src_init (GstDecklinkVideoSrc * self)
   self->device_number = 0;
   self->buffer_size = DEFAULT_BUFFER_SIZE;
   self->video_format = GST_DECKLINK_VIDEO_FORMAT_AUTO;
-  self->profile_id = GST_DECKLINK_PROFILE_ID_DEFAULT;
+  self->duplex_mode = bmdDuplexModeHalf;
   self->timecode_format = bmdTimecodeRP188Any;
   self->signal_state = SIGNAL_STATE_UNKNOWN;
   self->output_stream_time = DEFAULT_OUTPUT_STREAM_TIME;
@@ -408,9 +399,6 @@ gst_decklink_video_src_init (GstDecklinkVideoSrc * self)
   self->window_fill = 0;
   self->window_skip = 1;
   self->window_skip_count = 0;
-  self->skipped_last = 0;
-  self->skip_from_timestamp = GST_CLOCK_TIME_NONE;
-  self->skip_to_timestamp = GST_CLOCK_TIME_NONE;
 
   gst_base_src_set_live (GST_BASE_SRC (self), TRUE);
   gst_base_src_set_format (GST_BASE_SRC (self), GST_FORMAT_TIME);
@@ -468,8 +456,10 @@ gst_decklink_video_src_set_property (GObject * object, guint property_id,
           break;
       }
       break;
-    case PROP_PROFILE_ID:
-      self->profile_id = (GstDecklinkProfileId) g_value_get_enum (value);
+    case PROP_DUPLEX_MODE:
+      self->duplex_mode =
+          gst_decklink_duplex_mode_from_enum ((GstDecklinkDuplexMode)
+          g_value_get_enum (value));
       break;
     case PROP_TIMECODE_FORMAT:
       self->timecode_format =
@@ -519,8 +509,9 @@ gst_decklink_video_src_get_property (GObject * object, guint property_id,
     case PROP_VIDEO_FORMAT:
       g_value_set_enum (value, self->video_format);
       break;
-    case PROP_PROFILE_ID:
-      g_value_set_enum (value, self->profile_id);
+    case PROP_DUPLEX_MODE:
+      g_value_set_enum (value,
+          gst_decklink_duplex_mode_to_enum (self->duplex_mode));
       break;
     case PROP_TIMECODE_FORMAT:
       g_value_set_enum (value,
@@ -658,10 +649,6 @@ gst_decklink_video_src_start (GstDecklinkVideoSrc * self)
     self->input->start_streams (self->input->videosrc);
   g_mutex_unlock (&self->input->lock);
 
-  self->skipped_last = 0;
-  self->skip_from_timestamp = GST_CLOCK_TIME_NONE;
-  self->skip_to_timestamp = GST_CLOCK_TIME_NONE;
-
   return TRUE;
 }
 
@@ -841,39 +828,27 @@ gst_decklink_video_src_got_frame (GstElement * element,
     GstVideoTimeCodeFlags flags = GST_VIDEO_TIME_CODE_FLAGS_NONE;
     guint field_count = 0;
     guint skipped_frames = 0;
+    GstClockTime from_timestamp = GST_CLOCK_TIME_NONE;
+    GstClockTime to_timestamp = GST_CLOCK_TIME_NONE;
 
     while (gst_queue_array_get_length (self->current_frames) >=
         self->buffer_size) {
       CaptureFrame *tmp = (CaptureFrame *)
           gst_queue_array_pop_head_struct (self->current_frames);
       if (tmp->frame) {
-        if (skipped_frames == 0 && self->skipped_last == 0)
-          self->skip_from_timestamp = tmp->timestamp;
+        if (skipped_frames == 0)
+          from_timestamp = tmp->timestamp;
         skipped_frames++;
-        self->skip_to_timestamp = tmp->timestamp;
+        to_timestamp = tmp->timestamp;
       }
       capture_frame_clear (tmp);
     }
 
-    if (self->skipped_last == 0 && skipped_frames > 0) {
-      GST_WARNING_OBJECT (self, "Starting to drop frames");
-    }
-
-    if (skipped_frames == 0 && self->skipped_last > 0) {
-      GST_ELEMENT_WARNING_WITH_DETAILS (self,
-          STREAM, FAILED,
-          ("Dropped %u old frames from %" GST_TIME_FORMAT " to %"
-              GST_TIME_FORMAT, self->skipped_last,
-              GST_TIME_ARGS (self->skip_from_timestamp),
-              GST_TIME_ARGS (self->skip_to_timestamp)),
-          (NULL),
-          ("dropped", G_TYPE_UINT, self->skipped_last,
-              "from", G_TYPE_UINT64, self->skip_from_timestamp,
-              "to", G_TYPE_UINT64, self->skip_to_timestamp, NULL));
-      self->skipped_last = 0;
-    }
-
-    self->skipped_last += skipped_frames;
+    if (skipped_frames > 0)
+      GST_WARNING_OBJECT (self,
+          "Dropped %u old frames from %" GST_TIME_FORMAT " to %"
+          GST_TIME_FORMAT, skipped_frames, GST_TIME_ARGS (from_timestamp),
+          GST_TIME_ARGS (to_timestamp));
 
     memset (&f, 0, sizeof (f));
     f.frame = frame;
diff --git a/sys/decklink/gstdecklinkvideosrc.h b/sys/decklink/gstdecklinkvideosrc.h
index 3213aa5b7..837bf4318 100644
--- a/sys/decklink/gstdecklinkvideosrc.h
+++ b/sys/decklink/gstdecklinkvideosrc.h
@@ -71,7 +71,7 @@ struct _GstDecklinkVideoSrc
 
   GstVideoInfo info;
   GstDecklinkVideoFormat video_format;
-  GstDecklinkProfileId profile_id;
+  BMDDuplexMode duplex_mode;
   BMDTimecodeFormat timecode_format;
 
   GstDecklinkInput *input;
@@ -111,10 +111,6 @@ struct _GstDecklinkVideoSrc
   gboolean output_afd_bar;
   gint last_afd_bar_vbi_line;
   gint last_afd_bar_vbi_line_field2;
-
-  guint skipped_last;
-  GstClockTime skip_from_timestamp;
-  GstClockTime skip_to_timestamp;
 };
 
 struct _GstDecklinkVideoSrcClass
diff --git a/sys/decklink/linux/DeckLinkAPI.h b/sys/decklink/linux/DeckLinkAPI.h
index 21d172b98..e113fc38a 100644
--- a/sys/decklink/linux/DeckLinkAPI.h
+++ b/sys/decklink/linux/DeckLinkAPI.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -66,10 +66,10 @@ BMD_CONST REFIID IID_IDeckLinkMemoryAllocator                     = /* B36EB6E7-
 BMD_CONST REFIID IID_IDeckLinkAudioOutputCallback                 = /* 403C681B-7F46-4A12-B993-2BB127084EE6 */ {0x40,0x3C,0x68,0x1B,0x7F,0x46,0x4A,0x12,0xB9,0x93,0x2B,0xB1,0x27,0x08,0x4E,0xE6};
 BMD_CONST REFIID IID_IDeckLinkIterator                            = /* 50FB36CD-3063-4B73-BDBB-958087F2D8BA */ {0x50,0xFB,0x36,0xCD,0x30,0x63,0x4B,0x73,0xBD,0xBB,0x95,0x80,0x87,0xF2,0xD8,0xBA};
 BMD_CONST REFIID IID_IDeckLinkAPIInformation                      = /* 7BEA3C68-730D-4322-AF34-8A7152B532A4 */ {0x7B,0xEA,0x3C,0x68,0x73,0x0D,0x43,0x22,0xAF,0x34,0x8A,0x71,0x52,0xB5,0x32,0xA4};
-BMD_CONST REFIID IID_IDeckLinkOutput                              = /* 065A0F6C-C508-4D0D-B919-F5EB0EBFC96B */ {0x06,0x5A,0x0F,0x6C,0xC5,0x08,0x4D,0x0D,0xB9,0x19,0xF5,0xEB,0x0E,0xBF,0xC9,0x6B};
-BMD_CONST REFIID IID_IDeckLinkInput                               = /* 2A88CF76-F494-4216-A7EF-DC74EEB83882 */ {0x2A,0x88,0xCF,0x76,0xF4,0x94,0x42,0x16,0xA7,0xEF,0xDC,0x74,0xEE,0xB8,0x38,0x82};
+BMD_CONST REFIID IID_IDeckLinkOutput                              = /* CC5C8A6E-3F2F-4B3A-87EA-FD78AF300564 */ {0xCC,0x5C,0x8A,0x6E,0x3F,0x2F,0x4B,0x3A,0x87,0xEA,0xFD,0x78,0xAF,0x30,0x05,0x64};
+BMD_CONST REFIID IID_IDeckLinkInput                               = /* AF22762B-DFAC-4846-AA79-FA8883560995 */ {0xAF,0x22,0x76,0x2B,0xDF,0xAC,0x48,0x46,0xAA,0x79,0xFA,0x88,0x83,0x56,0x09,0x95};
 BMD_CONST REFIID IID_IDeckLinkHDMIInputEDID                       = /* ABBBACBC-45BC-4665-9D92-ACE6E5A97902 */ {0xAB,0xBB,0xAC,0xBC,0x45,0xBC,0x46,0x65,0x9D,0x92,0xAC,0xE6,0xE5,0xA9,0x79,0x02};
-BMD_CONST REFIID IID_IDeckLinkEncoderInput                        = /* F222551D-13DF-4FD8-B587-9D4F19EC12C9 */ {0xF2,0x22,0x55,0x1D,0x13,0xDF,0x4F,0xD8,0xB5,0x87,0x9D,0x4F,0x19,0xEC,0x12,0xC9};
+BMD_CONST REFIID IID_IDeckLinkEncoderInput                        = /* 270587DA-6B7D-42E7-A1F0-6D853F581185 */ {0x27,0x05,0x87,0xDA,0x6B,0x7D,0x42,0xE7,0xA1,0xF0,0x6D,0x85,0x3F,0x58,0x11,0x85};
 BMD_CONST REFIID IID_IDeckLinkVideoFrame                          = /* 3F716FE0-F023-4111-BE5D-EF4414C05B17 */ {0x3F,0x71,0x6F,0xE0,0xF0,0x23,0x41,0x11,0xBE,0x5D,0xEF,0x44,0x14,0xC0,0x5B,0x17};
 BMD_CONST REFIID IID_IDeckLinkMutableVideoFrame                   = /* 69E2639F-40DA-4E19-B6F2-20ACE815C390 */ {0x69,0xE2,0x63,0x9F,0x40,0xDA,0x4E,0x19,0xB6,0xF2,0x20,0xAC,0xE8,0x15,0xC3,0x90};
 BMD_CONST REFIID IID_IDeckLinkVideoFrame3DExtensions              = /* DA0F7E4A-EDC7-48A8-9CDD-2DB51C729CD7 */ {0xDA,0x0F,0x7E,0x4A,0xED,0xC7,0x48,0xA8,0x9C,0xDD,0x2D,0xB5,0x1C,0x72,0x9C,0xD7};
@@ -87,12 +87,8 @@ BMD_CONST REFIID IID_IDeckLinkAudioInputPacket                    = /* E43D5870-
 BMD_CONST REFIID IID_IDeckLinkScreenPreviewCallback               = /* B1D3F49A-85FE-4C5D-95C8-0B5D5DCCD438 */ {0xB1,0xD3,0xF4,0x9A,0x85,0xFE,0x4C,0x5D,0x95,0xC8,0x0B,0x5D,0x5D,0xCC,0xD4,0x38};
 BMD_CONST REFIID IID_IDeckLinkGLScreenPreviewHelper               = /* 504E2209-CAC7-4C1A-9FB4-C5BB6274D22F */ {0x50,0x4E,0x22,0x09,0xCA,0xC7,0x4C,0x1A,0x9F,0xB4,0xC5,0xBB,0x62,0x74,0xD2,0x2F};
 BMD_CONST REFIID IID_IDeckLinkNotificationCallback                = /* B002A1EC-070D-4288-8289-BD5D36E5FF0D */ {0xB0,0x02,0xA1,0xEC,0x07,0x0D,0x42,0x88,0x82,0x89,0xBD,0x5D,0x36,0xE5,0xFF,0x0D};
-BMD_CONST REFIID IID_IDeckLinkNotification                        = /* B85DF4C8-BDF5-47C1-8064-28162EBDD4EB */ {0xB8,0x5D,0xF4,0xC8,0xBD,0xF5,0x47,0xC1,0x80,0x64,0x28,0x16,0x2E,0xBD,0xD4,0xEB};
-BMD_CONST REFIID IID_IDeckLinkProfileAttributes                   = /* 17D4BF8E-4911-473A-80A0-731CF6FF345B */ {0x17,0xD4,0xBF,0x8E,0x49,0x11,0x47,0x3A,0x80,0xA0,0x73,0x1C,0xF6,0xFF,0x34,0x5B};
-BMD_CONST REFIID IID_IDeckLinkProfileIterator                     = /* 29E5A8C0-8BE4-46EB-93AC-31DAAB5B7BF2 */ {0x29,0xE5,0xA8,0xC0,0x8B,0xE4,0x46,0xEB,0x93,0xAC,0x31,0xDA,0xAB,0x5B,0x7B,0xF2};
-BMD_CONST REFIID IID_IDeckLinkProfile                             = /* 16093466-674A-432B-9DA0-1AC2C5A8241C */ {0x16,0x09,0x34,0x66,0x67,0x4A,0x43,0x2B,0x9D,0xA0,0x1A,0xC2,0xC5,0xA8,0x24,0x1C};
-BMD_CONST REFIID IID_IDeckLinkProfileCallback                     = /* A4F9341E-97AA-4E04-8935-15F809898CEA */ {0xA4,0xF9,0x34,0x1E,0x97,0xAA,0x4E,0x04,0x89,0x35,0x15,0xF8,0x09,0x89,0x8C,0xEA};
-BMD_CONST REFIID IID_IDeckLinkProfileManager                      = /* 30D41429-3998-4B6D-84F8-78C94A797C6E */ {0x30,0xD4,0x14,0x29,0x39,0x98,0x4B,0x6D,0x84,0xF8,0x78,0xC9,0x4A,0x79,0x7C,0x6E};
+BMD_CONST REFIID IID_IDeckLinkNotification                        = /* 0A1FB207-E215-441B-9B19-6FA1575946C5 */ {0x0A,0x1F,0xB2,0x07,0xE2,0x15,0x44,0x1B,0x9B,0x19,0x6F,0xA1,0x57,0x59,0x46,0xC5};
+BMD_CONST REFIID IID_IDeckLinkAttributes                          = /* ABC11843-D966-44CB-96E2-A1CB5D3135C4 */ {0xAB,0xC1,0x18,0x43,0xD9,0x66,0x44,0xCB,0x96,0xE2,0xA1,0xCB,0x5D,0x31,0x35,0xC4};
 BMD_CONST REFIID IID_IDeckLinkStatus                              = /* 5F558200-4028-49BC-BEAC-DB3FA4A96E46 */ {0x5F,0x55,0x82,0x00,0x40,0x28,0x49,0xBC,0xBE,0xAC,0xDB,0x3F,0xA4,0xA9,0x6E,0x46};
 BMD_CONST REFIID IID_IDeckLinkKeyer                               = /* 89AFCAF5-65F8-421E-98F7-96FE5F5BFBA3 */ {0x89,0xAF,0xCA,0xF5,0x65,0xF8,0x42,0x1E,0x98,0xF7,0x96,0xFE,0x5F,0x5B,0xFB,0xA3};
 BMD_CONST REFIID IID_IDeckLinkVideoConversion                     = /* 3BBCB8A2-DA2C-42D9-B5D8-88083644E99A */ {0x3B,0xBC,0xB8,0xA2,0xDA,0x2C,0x42,0xD9,0xB5,0xD8,0x88,0x08,0x36,0x44,0xE9,0x9A};
@@ -107,21 +103,7 @@ enum _BMDVideoOutputFlags {
     bmdVideoOutputVANC                                           = 1 << 0,
     bmdVideoOutputVITC                                           = 1 << 1,
     bmdVideoOutputRP188                                          = 1 << 2,
-    bmdVideoOutputDualStream3D                                   = 1 << 4,
-    bmdVideoOutputSynchronizeToPlaybackGroup                     = 1 << 6
-};
-
-/* Enum BMDSupportedVideoModeFlags - Flags to describe supported video mode */
-
-typedef uint32_t BMDSupportedVideoModeFlags;
-enum _BMDSupportedVideoModeFlags {
-    bmdSupportedVideoModeDefault                                 = 0,
-    bmdSupportedVideoModeKeying                                  = 1 << 0,
-    bmdSupportedVideoModeDualStream3D                            = 1 << 1,
-    bmdSupportedVideoModeSDISingleLink                           = 1 << 2,
-    bmdSupportedVideoModeSDIDualLink                             = 1 << 3,
-    bmdSupportedVideoModeSDIQuadLink                             = 1 << 4,
-    bmdSupportedVideoModeInAnyProfile                            = 1 << 5
+    bmdVideoOutputDualStream3D                                   = 1 << 4
 };
 
 /* Enum BMDPacketType - Type of packet */
@@ -153,8 +135,7 @@ typedef uint32_t BMDVideoInputFlags;
 enum _BMDVideoInputFlags {
     bmdVideoInputFlagDefault                                     = 0,
     bmdVideoInputEnableFormatDetection                           = 1 << 0,
-    bmdVideoInputDualStream3D                                    = 1 << 1,
-    bmdVideoInputSynchronizeToCaptureGroup                       = 1 << 2
+    bmdVideoInputDualStream3D                                    = 1 << 1
 };
 
 /* Enum BMDVideoInputFormatChangedEvents - Bitmask passed to the VideoInputFormatChanged notification to identify the properties of the input signal that have changed */
@@ -233,6 +214,15 @@ enum _BMDAudioOutputStreamType {
     bmdAudioOutputStreamTimestamped                             
 };
 
+/* Enum BMDDisplayModeSupport - Output mode supported flags */
+
+typedef uint32_t BMDDisplayModeSupport;
+enum _BMDDisplayModeSupport {
+    bmdDisplayModeNotSupported                                   = 0,
+    bmdDisplayModeSupported,                                    
+    bmdDisplayModeSupportedWithConversion                       
+};
+
 /* Enum BMDAncillaryPacketFormat - Ancillary packet format */
 
 typedef uint32_t BMDAncillaryPacketFormat;
@@ -249,8 +239,7 @@ enum _BMDTimecodeFormat {
     bmdTimecodeRP188VITC1                                        = /* 'rpv1' */ 0x72707631,	// RP188 timecode where DBB1 equals VITC1 (line 9)
     bmdTimecodeRP188VITC2                                        = /* 'rp12' */ 0x72703132,	// RP188 timecode where DBB1 equals VITC2 (line 9 for progressive or line 571 for interlaced/PsF)
     bmdTimecodeRP188LTC                                          = /* 'rplt' */ 0x72706C74,	// RP188 timecode where DBB1 equals LTC (line 10)
-    bmdTimecodeRP188HighFrameRate                                = /* 'rphr' */ 0x72706872,	// RP188 timecode where DBB1 is an HFRTC (SMPTE ST 12-3), the only timecode allowing the frame value to go above 30
-    bmdTimecodeRP188Any                                          = /* 'rp18' */ 0x72703138,	// Convenience for capture, returning the first valid timecode in {HFRTC (if supported), VITC1, LTC, VITC2}
+    bmdTimecodeRP188Any                                          = /* 'rp18' */ 0x72703138,	// For capture: return the first valid timecode in {VITC1, LTC ,VITC2} - For playback: set the timecode as VITC1
     bmdTimecodeVITC                                              = /* 'vitc' */ 0x76697463,
     bmdTimecodeVITCField2                                        = /* 'vit2' */ 0x76697432,
     bmdTimecodeSerial                                            = /* 'seri' */ 0x73657269
@@ -395,6 +384,8 @@ enum _BMDDeckLinkFrameMetadataID {
     bmdDeckLinkFrameMetadataHDRElectroOpticalTransferFunc        = /* 'eotf' */ 0x656F7466,	// EOTF in range 0-7 as per CEA 861.3
     bmdDeckLinkFrameMetadataCintelFilmType                       = /* 'cfty' */ 0x63667479,	// Current film type
     bmdDeckLinkFrameMetadataCintelFilmGauge                      = /* 'cfga' */ 0x63666761,	// Current film gauge
+    bmdDeckLinkFrameMetadataCintelOffsetDetectedHorizontal       = /* 'odfh' */ 0x6F646668,	// Horizontal offset (pixels) detected in image
+    bmdDeckLinkFrameMetadataCintelOffsetDetectedVertical         = /* 'odfv' */ 0x6F646676,	// Vertical offset (pixels) detected in image
     bmdDeckLinkFrameMetadataCintelKeykodeLow                     = /* 'ckkl' */ 0x636B6B6C,	// Raw keykode value - low 64 bits
     bmdDeckLinkFrameMetadataCintelKeykodeHigh                    = /* 'ckkh' */ 0x636B6B68,	// Raw keykode value - high 64 bits
     bmdDeckLinkFrameMetadataCintelTile1Size                      = /* 'ct1s' */ 0x63743173,	// Size in bytes of compressed raw tile 1
@@ -441,30 +432,15 @@ enum _BMDDeckLinkFrameMetadataID {
     bmdDeckLinkFrameMetadataCintelGainBlue                       = /* 'LfBl' */ 0x4C66426C,	// Blue gain parameter to apply after log
     bmdDeckLinkFrameMetadataCintelLiftRed                        = /* 'GnRd' */ 0x476E5264,	// Red lift parameter to apply after log and gain
     bmdDeckLinkFrameMetadataCintelLiftGreen                      = /* 'GnGr' */ 0x476E4772,	// Green lift parameter to apply after log and gain
-    bmdDeckLinkFrameMetadataCintelLiftBlue                       = /* 'GnBl' */ 0x476E426C,	// Blue lift parameter to apply after log and gain
-    bmdDeckLinkFrameMetadataCintelHDRGainRed                     = /* 'HGRd' */ 0x48475264,	// Red gain parameter to apply to linear data for HDR Combination
-    bmdDeckLinkFrameMetadataCintelHDRGainGreen                   = /* 'HGGr' */ 0x48474772,	// Green gain parameter to apply to linear data for HDR Combination
-    bmdDeckLinkFrameMetadataCintelHDRGainBlue                    = /* 'HGBl' */ 0x4847426C	// Blue gain parameter to apply to linear data for HDR Combination
+    bmdDeckLinkFrameMetadataCintelLiftBlue                       = /* 'GnBl' */ 0x476E426C	// Blue lift parameter to apply after log and gain
 };
 
-/* Enum BMDProfileID - Identifies a profile */
+/* Enum BMDDuplexMode - Duplex for configurable ports */
 
-typedef uint32_t BMDProfileID;
-enum _BMDProfileID {
-    bmdProfileOneSubDeviceFullDuplex                             = /* '1dfd' */ 0x31646664,
-    bmdProfileOneSubDeviceHalfDuplex                             = /* '1dhd' */ 0x31646864,
-    bmdProfileTwoSubDevicesFullDuplex                            = /* '2dfd' */ 0x32646664,
-    bmdProfileTwoSubDevicesHalfDuplex                            = /* '2dhd' */ 0x32646864,
-    bmdProfileFourSubDevicesHalfDuplex                           = /* '4dhd' */ 0x34646864
-};
-
-/* Enum BMDHDMITimecodePacking - Packing form of timecode on HDMI */
-
-typedef uint32_t BMDHDMITimecodePacking;
-enum _BMDHDMITimecodePacking {
-    bmdHDMITimecodePackingIEEEOUI000085                          = 0x00008500,
-    bmdHDMITimecodePackingIEEEOUI080046                          = 0x08004601,
-    bmdHDMITimecodePackingIEEEOUI5CF9F0                          = 0x5CF9F003
+typedef uint32_t BMDDuplexMode;
+enum _BMDDuplexMode {
+    bmdDuplexModeFull                                            = /* 'fdup' */ 0x66647570,
+    bmdDuplexModeHalf                                            = /* 'hdup' */ 0x68647570
 };
 
 /* Enum BMDDeckLinkAttributeID - DeckLink Attribute ID */
@@ -476,6 +452,7 @@ enum _BMDDeckLinkAttributeID {
 
     BMDDeckLinkSupportsInternalKeying                            = /* 'keyi' */ 0x6B657969,
     BMDDeckLinkSupportsExternalKeying                            = /* 'keye' */ 0x6B657965,
+    BMDDeckLinkSupportsHDKeying                                  = /* 'keyh' */ 0x6B657968,
     BMDDeckLinkSupportsInputFormatDetection                      = /* 'infd' */ 0x696E6664,
     BMDDeckLinkHasReferenceInput                                 = /* 'hrin' */ 0x6872696E,
     BMDDeckLinkHasSerialPort                                     = /* 'hspt' */ 0x68737074,
@@ -484,19 +461,16 @@ enum _BMDDeckLinkAttributeID {
     BMDDeckLinkHasVideoInputAntiAliasingFilter                   = /* 'aafl' */ 0x6161666C,
     BMDDeckLinkHasBypass                                         = /* 'byps' */ 0x62797073,
     BMDDeckLinkSupportsClockTimingAdjustment                     = /* 'ctad' */ 0x63746164,
+    BMDDeckLinkSupportsFullDuplex                                = /* 'fdup' */ 0x66647570,
     BMDDeckLinkSupportsFullFrameReferenceInputTimingOffset       = /* 'frin' */ 0x6672696E,
     BMDDeckLinkSupportsSMPTELevelAOutput                         = /* 'lvla' */ 0x6C766C61,
     BMDDeckLinkSupportsDualLinkSDI                               = /* 'sdls' */ 0x73646C73,
     BMDDeckLinkSupportsQuadLinkSDI                               = /* 'sqls' */ 0x73716C73,
     BMDDeckLinkSupportsIdleOutput                                = /* 'idou' */ 0x69646F75,
-    BMDDeckLinkVANCRequires10BitYUVVideoFrames                   = /* 'vioY' */ 0x76696F59,	// Legacy product requires v210 active picture for IDeckLinkVideoFrameAncillaryPackets or 10-bit VANC
     BMDDeckLinkHasLTCTimecodeInput                               = /* 'hltc' */ 0x686C7463,
+    BMDDeckLinkSupportsDuplexModeConfiguration                   = /* 'dupx' */ 0x64757078,
     BMDDeckLinkSupportsHDRMetadata                               = /* 'hdrm' */ 0x6864726D,
     BMDDeckLinkSupportsColorspaceMetadata                        = /* 'cmet' */ 0x636D6574,
-    BMDDeckLinkSupportsHDMITimecode                              = /* 'htim' */ 0x6874696D,
-    BMDDeckLinkSupportsHighFrameRateTimecode                     = /* 'HFRT' */ 0x48465254,
-    BMDDeckLinkSupportsSynchronizeToCaptureGroup                 = /* 'stcg' */ 0x73746367,
-    BMDDeckLinkSupportsSynchronizeToPlaybackGroup                = /* 'stpg' */ 0x73747067,
 
     /* Integers */
 
@@ -519,8 +493,7 @@ enum _BMDDeckLinkAttributeID {
     BMDDeckLinkAudioInputXLRChannelCount                         = /* 'aixc' */ 0x61697863,
     BMDDeckLinkAudioOutputRCAChannelCount                        = /* 'aorc' */ 0x616F7263,
     BMDDeckLinkAudioOutputXLRChannelCount                        = /* 'aoxc' */ 0x616F7863,
-    BMDDeckLinkProfileID                                         = /* 'prid' */ 0x70726964,	// Returns a BMDProfileID
-    BMDDeckLinkDuplex                                            = /* 'dupx' */ 0x64757078,
+    BMDDeckLinkPairedDevicePersistentID                          = /* 'ppid' */ 0x70706964,
 
     /* Floats */
 
@@ -566,6 +539,7 @@ enum _BMDDeckLinkStatusID {
     bmdDeckLinkStatusLastVideoOutputPixelFormat                  = /* 'opix' */ 0x6F706978,
     bmdDeckLinkStatusReferenceSignalMode                         = /* 'refm' */ 0x7265666D,
     bmdDeckLinkStatusReferenceSignalFlags                        = /* 'reff' */ 0x72656666,
+    bmdDeckLinkStatusDuplexMode                                  = /* 'dupx' */ 0x64757078,
     bmdDeckLinkStatusBusy                                        = /* 'busy' */ 0x62757379,
     bmdDeckLinkStatusInterchangeablePanelType                    = /* 'icpt' */ 0x69637074,
     bmdDeckLinkStatusDeviceTemperature                           = /* 'dtmp' */ 0x64746D70,
@@ -585,14 +559,14 @@ enum _BMDDeckLinkVideoStatusFlags {
     bmdDeckLinkVideoStatusDualStream3D                           = 1 << 1
 };
 
-/* Enum BMDDuplexMode - Duplex of the device */
+/* Enum BMDDuplexStatus - Duplex status of the device */
 
-typedef uint32_t BMDDuplexMode;
-enum _BMDDuplexMode {
-    bmdDuplexFull                                                = /* 'dxfu' */ 0x64786675,
-    bmdDuplexHalf                                                = /* 'dxha' */ 0x64786861,
-    bmdDuplexSimplex                                             = /* 'dxsp' */ 0x64787370,
-    bmdDuplexInactive                                            = /* 'dxin' */ 0x6478696E
+typedef uint32_t BMDDuplexStatus;
+enum _BMDDuplexStatus {
+    bmdDuplexStatusFullDuplex                                    = /* 'fdup' */ 0x66647570,
+    bmdDuplexStatusHalfDuplex                                    = /* 'hdup' */ 0x68647570,
+    bmdDuplexStatusSimplex                                       = /* 'splx' */ 0x73706C78,
+    bmdDuplexStatusInactive                                      = /* 'inac' */ 0x696E6163
 };
 
 /* Enum BMDPanelType - The type of interchangeable panel */
@@ -672,11 +646,7 @@ class IDeckLinkScreenPreviewCallback;
 class IDeckLinkGLScreenPreviewHelper;
 class IDeckLinkNotificationCallback;
 class IDeckLinkNotification;
-class IDeckLinkProfileAttributes;
-class IDeckLinkProfileIterator;
-class IDeckLinkProfile;
-class IDeckLinkProfileCallback;
-class IDeckLinkProfileManager;
+class IDeckLinkAttributes;
 class IDeckLinkStatus;
 class IDeckLinkKeyer;
 class IDeckLinkVideoConversion;
@@ -767,8 +737,7 @@ protected:
 class BMD_PUBLIC IDeckLinkOutput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedPixelFormat, /* in */ BMDSupportedVideoModeFlags flags, /* out */ BMDDisplayMode *actualMode, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoOutputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     virtual HRESULT SetScreenPreviewCallback (/* in */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
@@ -825,8 +794,7 @@ protected:
 class BMD_PUBLIC IDeckLinkInput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedPixelFormat, /* in */ BMDSupportedVideoModeFlags flags, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoInputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     virtual HRESULT SetScreenPreviewCallback (/* in */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
@@ -878,8 +846,7 @@ protected:
 class BMD_PUBLIC IDeckLinkEncoderInput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedCodec, /* in */ uint32_t requestedCodecProfile, /* in */ BMDSupportedVideoModeFlags flags, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoInputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     /* Video Input */
@@ -1149,14 +1116,11 @@ class BMD_PUBLIC IDeckLinkNotification : public IUnknown
 public:
     virtual HRESULT Subscribe (/* in */ BMDNotifications topic, /* in */ IDeckLinkNotificationCallback *theCallback) = 0;
     virtual HRESULT Unsubscribe (/* in */ BMDNotifications topic, /* in */ IDeckLinkNotificationCallback *theCallback) = 0;
-
-protected:
-    virtual ~IDeckLinkNotification () {} // call Release method to drop reference count
 };
 
-/* Interface IDeckLinkProfileAttributes - Created by QueryInterface from an IDeckLinkProfile, or from IDeckLink. When queried from IDeckLink, interrogates the active profile */
+/* Interface IDeckLinkAttributes - DeckLink Attribute interface */
 
-class BMD_PUBLIC IDeckLinkProfileAttributes : public IUnknown
+class BMD_PUBLIC IDeckLinkAttributes : public IUnknown
 {
 public:
     virtual HRESULT GetFlag (/* in */ BMDDeckLinkAttributeID cfgID, /* out */ bool *value) = 0;
@@ -1165,57 +1129,7 @@ public:
     virtual HRESULT GetString (/* in */ BMDDeckLinkAttributeID cfgID, /* out */ const char **value) = 0;
 
 protected:
-    virtual ~IDeckLinkProfileAttributes () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileIterator - Enumerates IDeckLinkProfile interfaces */
-
-class BMD_PUBLIC IDeckLinkProfileIterator : public IUnknown
-{
-public:
-    virtual HRESULT Next (/* out */ IDeckLinkProfile **profile) = 0;
-
-protected:
-    virtual ~IDeckLinkProfileIterator () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfile - Represents the active profile when queried from IDeckLink */
-
-class BMD_PUBLIC IDeckLinkProfile : public IUnknown
-{
-public:
-    virtual HRESULT GetDevice (/* out */ IDeckLink **device) = 0; // Device affected when this profile becomes active
-    virtual HRESULT IsActive (/* out */ bool *isActive) = 0;
-    virtual HRESULT SetActive (void) = 0; // Activating a profile will also change the profile on all devices enumerated by GetPeers(). Activation is not complete until IDeckLinkProfileCallback::ProfileActivated() is called
-    virtual HRESULT GetPeers (/* out */ IDeckLinkProfileIterator **profileIterator) = 0; // Profiles of other devices activated with this profile
-
-protected:
-    virtual ~IDeckLinkProfile () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileCallback - Receive notifications about profiles related to this device */
-
-class BMD_PUBLIC IDeckLinkProfileCallback : public IUnknown
-{
-public:
-    virtual HRESULT ProfileChanging (/* in */ IDeckLinkProfile *profileToBeActivated, /* in */ bool streamsWillBeForcedToStop) = 0; // Called before this device changes profile. User has an opportunity for teardown if streamsWillBeForcedToStop
-    virtual HRESULT ProfileActivated (/* in */ IDeckLinkProfile *activatedProfile) = 0; // Called after this device has been activated with a new profile
-
-protected:
-    virtual ~IDeckLinkProfileCallback () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileManager - Created by QueryInterface from IDeckLink when a device has multiple optional profiles */
-
-class BMD_PUBLIC IDeckLinkProfileManager : public IUnknown
-{
-public:
-    virtual HRESULT GetProfiles (/* out */ IDeckLinkProfileIterator **profileIterator) = 0; // All available profiles for this device
-    virtual HRESULT GetProfile (/* in */ BMDProfileID profileID, /* out */ IDeckLinkProfile **profile) = 0;
-    virtual HRESULT SetCallback (/* in */ IDeckLinkProfileCallback *callback) = 0;
-
-protected:
-    virtual ~IDeckLinkProfileManager () {} // call Release method to drop reference count
+    virtual ~IDeckLinkAttributes () {} // call Release method to drop reference count
 };
 
 /* Interface IDeckLinkStatus - DeckLink Status interface */
diff --git a/sys/decklink/linux/DeckLinkAPIConfiguration.h b/sys/decklink/linux/DeckLinkAPIConfiguration.h
index e472f73e1..430f87154 100644
--- a/sys/decklink/linux/DeckLinkAPIConfiguration.h
+++ b/sys/decklink/linux/DeckLinkAPIConfiguration.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -46,7 +46,7 @@
 
 // Interface ID Declarations
 
-BMD_CONST REFIID IID_IDeckLinkConfiguration                       = /* 912F634B-2D4E-40A4-8AAB-8D80B73F1289 */ {0x91,0x2F,0x63,0x4B,0x2D,0x4E,0x40,0xA4,0x8A,0xAB,0x8D,0x80,0xB7,0x3F,0x12,0x89};
+BMD_CONST REFIID IID_IDeckLinkConfiguration                       = /* EF90380B-4AE5-4346-9077-E288E149F129 */ {0xEF,0x90,0x38,0x0B,0x4A,0xE5,0x43,0x46,0x90,0x77,0xE2,0x88,0xE1,0x49,0xF1,0x29};
 BMD_CONST REFIID IID_IDeckLinkEncoderConfiguration                = /* 138050E5-C60A-4552-BF3F-0F358049327E */ {0x13,0x80,0x50,0xE5,0xC6,0x0A,0x45,0x52,0xBF,0x3F,0x0F,0x35,0x80,0x49,0x32,0x7E};
 
 /* Enum BMDDeckLinkConfigurationID - DeckLink Configuration ID */
@@ -63,6 +63,7 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigHDMI3DPackingFormat                         = /* '3dpf' */ 0x33647066,
     bmdDeckLinkConfigBypass                                      = /* 'byps' */ 0x62797073,
     bmdDeckLinkConfigClockTimingAdjustment                       = /* 'ctad' */ 0x63746164,
+    bmdDeckLinkConfigDuplexMode                                  = /* 'dupx' */ 0x64757078,
 
     /* Audio Input/Output Flags */
 
@@ -94,8 +95,6 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigDefaultVideoOutputMode                      = /* 'dvom' */ 0x64766F6D,
     bmdDeckLinkConfigDefaultVideoOutputModeFlags                 = /* 'dvof' */ 0x64766F66,
     bmdDeckLinkConfigSDIOutputLinkConfiguration                  = /* 'solc' */ 0x736F6C63,
-    bmdDeckLinkConfigHDMITimecodePacking                         = /* 'htpk' */ 0x6874706B,
-    bmdDeckLinkConfigPlaybackGroup                               = /* 'plgr' */ 0x706C6772,
 
     /* Video Output Floats */
 
@@ -127,7 +126,6 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigVANCSourceLine2Mapping                      = /* 'vsl2' */ 0x76736C32,
     bmdDeckLinkConfigVANCSourceLine3Mapping                      = /* 'vsl3' */ 0x76736C33,
     bmdDeckLinkConfigCapturePassThroughMode                      = /* 'cptm' */ 0x6370746D,
-    bmdDeckLinkConfigCaptureGroup                                = /* 'cpgr' */ 0x63706772,
 
     /* Video Input Floats */
 
diff --git a/sys/decklink/linux/DeckLinkAPIDeckControl.h b/sys/decklink/linux/DeckLinkAPIDeckControl.h
index 5cfbcec50..e0522a231 100644
--- a/sys/decklink/linux/DeckLinkAPIDeckControl.h
+++ b/sys/decklink/linux/DeckLinkAPIDeckControl.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
diff --git a/sys/decklink/linux/DeckLinkAPIDiscovery.h b/sys/decklink/linux/DeckLinkAPIDiscovery.h
index ff9ce337a..d6619caa1 100644
--- a/sys/decklink/linux/DeckLinkAPIDiscovery.h
+++ b/sys/decklink/linux/DeckLinkAPIDiscovery.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
diff --git a/sys/decklink/linux/DeckLinkAPIDispatch.cpp b/sys/decklink/linux/DeckLinkAPIDispatch.cpp
index 02bed76ed..67cf4188a 100644
--- a/sys/decklink/linux/DeckLinkAPIDispatch.cpp
+++ b/sys/decklink/linux/DeckLinkAPIDispatch.cpp
@@ -7,14 +7,14 @@
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
-**
+** 
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
-**
+** 
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
@@ -56,17 +56,20 @@ static CreateVideoFrameAncillaryPacketsInstanceFunc	gCreateVideoFrameAncillaryPa
 static void	InitDeckLinkAPI (void)
 {
 	void *libraryHandle;
-
+	
 	libraryHandle = dlopen(kDeckLinkAPI_Name, RTLD_NOW|RTLD_GLOBAL);
 	if (!libraryHandle)
 	{
-		fprintf(stderr, "%s\n", dlerror());
+                /* As we install this plugin regardless if there is a
+                 * proprietary library present or not, let's stay silent
+                 * to avoid poluting the logs */
+		// fprintf(stderr, "%s\n", dlerror());
 		return;
 	}
-
+	
 	gLoadedDeckLinkAPI = true;
-
-	gCreateIteratorFunc = (CreateIteratorFunc)dlsym(libraryHandle, "CreateDeckLinkIteratorInstance_0004");
+	
+	gCreateIteratorFunc = (CreateIteratorFunc)dlsym(libraryHandle, "CreateDeckLinkIteratorInstance_0003");
 	if (!gCreateIteratorFunc)
 		fprintf(stderr, "%s\n", dlerror());
 	gCreateAPIInformationFunc = (CreateAPIInformationFunc)dlsym(libraryHandle, "CreateDeckLinkAPIInformationInstance_0001");
@@ -75,7 +78,7 @@ static void	InitDeckLinkAPI (void)
 	gCreateVideoConversionFunc = (CreateVideoConversionInstanceFunc)dlsym(libraryHandle, "CreateVideoConversionInstance_0001");
 	if (!gCreateVideoConversionFunc)
 		fprintf(stderr, "%s\n", dlerror());
-	gCreateDeckLinkDiscoveryFunc = (CreateDeckLinkDiscoveryInstanceFunc)dlsym(libraryHandle, "CreateDeckLinkDiscoveryInstance_0003");
+	gCreateDeckLinkDiscoveryFunc = (CreateDeckLinkDiscoveryInstanceFunc)dlsym(libraryHandle, "CreateDeckLinkDiscoveryInstance_0002");
 	if (!gCreateDeckLinkDiscoveryFunc)
 		fprintf(stderr, "%s\n", dlerror());
 	gCreateVideoFrameAncillaryPacketsFunc = (CreateVideoFrameAncillaryPacketsInstanceFunc)dlsym(libraryHandle, "CreateVideoFrameAncillaryPacketsInstance_0001");
@@ -86,7 +89,7 @@ static void	InitDeckLinkAPI (void)
 static void	InitDeckLinkPreviewAPI (void)
 {
 	void *libraryHandle;
-
+	
 	libraryHandle = dlopen(KDeckLinkPreviewAPI_Name, RTLD_NOW|RTLD_GLOBAL);
 	if (!libraryHandle)
 	{
@@ -109,7 +112,7 @@ bool		IsDeckLinkAPIPresent (void)
 IDeckLinkIterator*		CreateDeckLinkIteratorInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateIteratorFunc == NULL)
 		return NULL;
 	return gCreateIteratorFunc();
@@ -118,7 +121,7 @@ IDeckLinkIterator*		CreateDeckLinkIteratorInstance (void)
 IDeckLinkAPIInformation*	CreateDeckLinkAPIInformationInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateAPIInformationFunc == NULL)
 		return NULL;
 	return gCreateAPIInformationFunc();
@@ -128,7 +131,7 @@ IDeckLinkGLScreenPreviewHelper*		CreateOpenGLScreenPreviewHelper (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
 	pthread_once(&gPreviewOnceControl, InitDeckLinkPreviewAPI);
-
+	
 	if (gCreateOpenGLPreviewFunc == NULL)
 		return NULL;
 	return gCreateOpenGLPreviewFunc();
@@ -137,7 +140,7 @@ IDeckLinkGLScreenPreviewHelper*		CreateOpenGLScreenPreviewHelper (void)
 IDeckLinkVideoConversion* CreateVideoConversionInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateVideoConversionFunc == NULL)
 		return NULL;
 	return gCreateVideoConversionFunc();
@@ -146,7 +149,7 @@ IDeckLinkVideoConversion* CreateVideoConversionInstance (void)
 IDeckLinkDiscovery* CreateDeckLinkDiscoveryInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateDeckLinkDiscoveryFunc == NULL)
 		return NULL;
 	return gCreateDeckLinkDiscoveryFunc();
@@ -155,7 +158,7 @@ IDeckLinkDiscovery* CreateDeckLinkDiscoveryInstance (void)
 IDeckLinkVideoFrameAncillaryPackets* CreateVideoFrameAncillaryPacketsInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateVideoFrameAncillaryPacketsFunc == NULL)
 		return NULL;
 	return gCreateVideoFrameAncillaryPacketsFunc();
diff --git a/sys/decklink/linux/DeckLinkAPIModes.h b/sys/decklink/linux/DeckLinkAPIModes.h
index 0280a8505..543aaa1f7 100644
--- a/sys/decklink/linux/DeckLinkAPIModes.h
+++ b/sys/decklink/linux/DeckLinkAPIModes.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -69,16 +69,9 @@ enum _BMDDisplayMode {
     bmdModeHD1080p25                                             = /* 'Hp25' */ 0x48703235,
     bmdModeHD1080p2997                                           = /* 'Hp29' */ 0x48703239,
     bmdModeHD1080p30                                             = /* 'Hp30' */ 0x48703330,
-    bmdModeHD1080p4795                                           = /* 'Hp47' */ 0x48703437,
-    bmdModeHD1080p48                                             = /* 'Hp48' */ 0x48703438,
     bmdModeHD1080p50                                             = /* 'Hp50' */ 0x48703530,
     bmdModeHD1080p5994                                           = /* 'Hp59' */ 0x48703539,
     bmdModeHD1080p6000                                           = /* 'Hp60' */ 0x48703630,	// N.B. This _really_ is 60.00 Hz.
-    bmdModeHD1080p9590                                           = /* 'Hp95' */ 0x48703935,
-    bmdModeHD1080p96                                             = /* 'Hp96' */ 0x48703936,
-    bmdModeHD1080p100                                            = /* 'Hp10' */ 0x48703130,
-    bmdModeHD1080p11988                                          = /* 'Hp11' */ 0x48703131,
-    bmdModeHD1080p120                                            = /* 'Hp12' */ 0x48703132,
     bmdModeHD1080i50                                             = /* 'Hi50' */ 0x48693530,
     bmdModeHD1080i5994                                           = /* 'Hi59' */ 0x48693539,
     bmdModeHD1080i6000                                           = /* 'Hi60' */ 0x48693630,	// N.B. This _really_ is 60.00 Hz.
@@ -102,16 +95,9 @@ enum _BMDDisplayMode {
     bmdMode2kDCI25                                               = /* '2d25' */ 0x32643235,
     bmdMode2kDCI2997                                             = /* '2d29' */ 0x32643239,
     bmdMode2kDCI30                                               = /* '2d30' */ 0x32643330,
-    bmdMode2kDCI4795                                             = /* '2d47' */ 0x32643437,
-    bmdMode2kDCI48                                               = /* '2d48' */ 0x32643438,
     bmdMode2kDCI50                                               = /* '2d50' */ 0x32643530,
     bmdMode2kDCI5994                                             = /* '2d59' */ 0x32643539,
     bmdMode2kDCI60                                               = /* '2d60' */ 0x32643630,
-    bmdMode2kDCI9590                                             = /* '2d95' */ 0x32643935,
-    bmdMode2kDCI96                                               = /* '2d96' */ 0x32643936,
-    bmdMode2kDCI100                                              = /* '2d10' */ 0x32643130,
-    bmdMode2kDCI11988                                            = /* '2d11' */ 0x32643131,
-    bmdMode2kDCI120                                              = /* '2d12' */ 0x32643132,
 
     /* 4K UHD Modes */
 
@@ -120,16 +106,9 @@ enum _BMDDisplayMode {
     bmdMode4K2160p25                                             = /* '4k25' */ 0x346B3235,
     bmdMode4K2160p2997                                           = /* '4k29' */ 0x346B3239,
     bmdMode4K2160p30                                             = /* '4k30' */ 0x346B3330,
-    bmdMode4K2160p4795                                           = /* '4k47' */ 0x346B3437,
-    bmdMode4K2160p48                                             = /* '4k48' */ 0x346B3438,
     bmdMode4K2160p50                                             = /* '4k50' */ 0x346B3530,
     bmdMode4K2160p5994                                           = /* '4k59' */ 0x346B3539,
     bmdMode4K2160p60                                             = /* '4k60' */ 0x346B3630,
-    bmdMode4K2160p9590                                           = /* '4k95' */ 0x346B3935,
-    bmdMode4K2160p96                                             = /* '4k96' */ 0x346B3936,
-    bmdMode4K2160p100                                            = /* '4k10' */ 0x346B3130,
-    bmdMode4K2160p11988                                          = /* '4k11' */ 0x346B3131,
-    bmdMode4K2160p120                                            = /* '4k12' */ 0x346B3132,
 
     /* 4K DCI Modes */
 
@@ -138,16 +117,9 @@ enum _BMDDisplayMode {
     bmdMode4kDCI25                                               = /* '4d25' */ 0x34643235,
     bmdMode4kDCI2997                                             = /* '4d29' */ 0x34643239,
     bmdMode4kDCI30                                               = /* '4d30' */ 0x34643330,
-    bmdMode4kDCI4795                                             = /* '4d47' */ 0x34643437,
-    bmdMode4kDCI48                                               = /* '4d48' */ 0x34643438,
     bmdMode4kDCI50                                               = /* '4d50' */ 0x34643530,
     bmdMode4kDCI5994                                             = /* '4d59' */ 0x34643539,
     bmdMode4kDCI60                                               = /* '4d60' */ 0x34643630,
-    bmdMode4kDCI9590                                             = /* '4d95' */ 0x34643935,
-    bmdMode4kDCI96                                               = /* '4d96' */ 0x34643936,
-    bmdMode4kDCI100                                              = /* '4d10' */ 0x34643130,
-    bmdMode4kDCI11988                                            = /* '4d11' */ 0x34643131,
-    bmdMode4kDCI120                                              = /* '4d12' */ 0x34643132,
 
     /* 8K UHD Modes */
 
@@ -156,8 +128,6 @@ enum _BMDDisplayMode {
     bmdMode8K4320p25                                             = /* '8k25' */ 0x386B3235,
     bmdMode8K4320p2997                                           = /* '8k29' */ 0x386B3239,
     bmdMode8K4320p30                                             = /* '8k30' */ 0x386B3330,
-    bmdMode8K4320p4795                                           = /* '8k47' */ 0x386B3437,
-    bmdMode8K4320p48                                             = /* '8k48' */ 0x386B3438,
     bmdMode8K4320p50                                             = /* '8k50' */ 0x386B3530,
     bmdMode8K4320p5994                                           = /* '8k59' */ 0x386B3539,
     bmdMode8K4320p60                                             = /* '8k60' */ 0x386B3630,
@@ -169,31 +139,10 @@ enum _BMDDisplayMode {
     bmdMode8kDCI25                                               = /* '8d25' */ 0x38643235,
     bmdMode8kDCI2997                                             = /* '8d29' */ 0x38643239,
     bmdMode8kDCI30                                               = /* '8d30' */ 0x38643330,
-    bmdMode8kDCI4795                                             = /* '8d47' */ 0x38643437,
-    bmdMode8kDCI48                                               = /* '8d48' */ 0x38643438,
     bmdMode8kDCI50                                               = /* '8d50' */ 0x38643530,
     bmdMode8kDCI5994                                             = /* '8d59' */ 0x38643539,
     bmdMode8kDCI60                                               = /* '8d60' */ 0x38643630,
 
-    /* PC Modes */
-
-    bmdMode640x480p60                                            = /* 'vga6' */ 0x76676136,
-    bmdMode800x600p60                                            = /* 'svg6' */ 0x73766736,
-    bmdMode1440x900p50                                           = /* 'wxg5' */ 0x77786735,
-    bmdMode1440x900p60                                           = /* 'wxg6' */ 0x77786736,
-    bmdMode1440x1080p50                                          = /* 'sxg5' */ 0x73786735,
-    bmdMode1440x1080p60                                          = /* 'sxg6' */ 0x73786736,
-    bmdMode1600x1200p50                                          = /* 'uxg5' */ 0x75786735,
-    bmdMode1600x1200p60                                          = /* 'uxg6' */ 0x75786736,
-    bmdMode1920x1200p50                                          = /* 'wux5' */ 0x77757835,
-    bmdMode1920x1200p60                                          = /* 'wux6' */ 0x77757836,
-    bmdMode1920x1440p50                                          = /* '1945' */ 0x31393435,
-    bmdMode1920x1440p60                                          = /* '1946' */ 0x31393436,
-    bmdMode2560x1440p50                                          = /* 'wqh5' */ 0x77716835,
-    bmdMode2560x1440p60                                          = /* 'wqh6' */ 0x77716836,
-    bmdMode2560x1600p50                                          = /* 'wqx5' */ 0x77717835,
-    bmdMode2560x1600p60                                          = /* 'wqx6' */ 0x77717836,
-
     /* RAW Modes for Cintel (input only) */
 
     bmdModeCintelRAW                                             = /* 'rwci' */ 0x72776369,	// Frame size up to 4096x3072, variable frame rate
@@ -219,7 +168,6 @@ enum _BMDFieldDominance {
 
 typedef uint32_t BMDPixelFormat;
 enum _BMDPixelFormat {
-    bmdFormatUnspecified                                         = 0,
     bmdFormat8BitYUV                                             = /* '2vuy' */ 0x32767579,
     bmdFormat10BitYUV                                            = /* 'v210' */ 0x76323130,
     bmdFormat8BitARGB                                            = 32,
diff --git a/sys/decklink/linux/DeckLinkAPITypes.h b/sys/decklink/linux/DeckLinkAPITypes.h
index a4ef6358d..559126282 100644
--- a/sys/decklink/linux/DeckLinkAPITypes.h
+++ b/sys/decklink/linux/DeckLinkAPITypes.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -59,16 +59,13 @@ enum _BMDTimecodeFlags {
     bmdTimecodeFlagDefault                                       = 0,
     bmdTimecodeIsDropFrame                                       = 1 << 0,
     bmdTimecodeFieldMark                                         = 1 << 1,
-    bmdTimecodeColorFrame                                        = 1 << 2,
-    bmdTimecodeEmbedRecordingTrigger                             = 1 << 3,	// On SDI recording trigger utilises a user-bit
-    bmdTimecodeRecordingTriggered                                = 1 << 4
+    bmdTimecodeColorFrame                                        = 1 << 2
 };
 
 /* Enum BMDVideoConnection - Video connection types */
 
 typedef uint32_t BMDVideoConnection;
 enum _BMDVideoConnection {
-    bmdVideoConnectionUnspecified                                = 0,
     bmdVideoConnectionSDI                                        = 1 << 0,
     bmdVideoConnectionHDMI                                       = 1 << 1,
     bmdVideoConnectionOpticalSDI                                 = 1 << 2,
diff --git a/sys/decklink/linux/DeckLinkAPIVersion.h b/sys/decklink/linux/DeckLinkAPIVersion.h
index b032e9371..f9db7ff18 100644
--- a/sys/decklink/linux/DeckLinkAPIVersion.h
+++ b/sys/decklink/linux/DeckLinkAPIVersion.h
@@ -30,8 +30,8 @@
 #ifndef __DeckLink_API_Version_h__
 #define __DeckLink_API_Version_h__
 
-#define BLACKMAGIC_DECKLINK_API_VERSION					0x0b020000
-#define BLACKMAGIC_DECKLINK_API_VERSION_STRING			"11.2"
+#define BLACKMAGIC_DECKLINK_API_VERSION					0x0a0b0400
+#define BLACKMAGIC_DECKLINK_API_VERSION_STRING			"10.11.4"
 
 #endif	// __DeckLink_API_Version_h__
 
diff --git a/sys/decklink/osx/DeckLinkAPI.h b/sys/decklink/osx/DeckLinkAPI.h
index 16a10fa82..368a72b30 100644
--- a/sys/decklink/osx/DeckLinkAPI.h
+++ b/sys/decklink/osx/DeckLinkAPI.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -69,10 +69,10 @@ BMD_CONST REFIID IID_IDeckLinkMemoryAllocator                     = /* B36EB6E7-
 BMD_CONST REFIID IID_IDeckLinkAudioOutputCallback                 = /* 403C681B-7F46-4A12-B993-2BB127084EE6 */ {0x40,0x3C,0x68,0x1B,0x7F,0x46,0x4A,0x12,0xB9,0x93,0x2B,0xB1,0x27,0x08,0x4E,0xE6};
 BMD_CONST REFIID IID_IDeckLinkIterator                            = /* 50FB36CD-3063-4B73-BDBB-958087F2D8BA */ {0x50,0xFB,0x36,0xCD,0x30,0x63,0x4B,0x73,0xBD,0xBB,0x95,0x80,0x87,0xF2,0xD8,0xBA};
 BMD_CONST REFIID IID_IDeckLinkAPIInformation                      = /* 7BEA3C68-730D-4322-AF34-8A7152B532A4 */ {0x7B,0xEA,0x3C,0x68,0x73,0x0D,0x43,0x22,0xAF,0x34,0x8A,0x71,0x52,0xB5,0x32,0xA4};
-BMD_CONST REFIID IID_IDeckLinkOutput                              = /* 065A0F6C-C508-4D0D-B919-F5EB0EBFC96B */ {0x06,0x5A,0x0F,0x6C,0xC5,0x08,0x4D,0x0D,0xB9,0x19,0xF5,0xEB,0x0E,0xBF,0xC9,0x6B};
-BMD_CONST REFIID IID_IDeckLinkInput                               = /* 2A88CF76-F494-4216-A7EF-DC74EEB83882 */ {0x2A,0x88,0xCF,0x76,0xF4,0x94,0x42,0x16,0xA7,0xEF,0xDC,0x74,0xEE,0xB8,0x38,0x82};
+BMD_CONST REFIID IID_IDeckLinkOutput                              = /* CC5C8A6E-3F2F-4B3A-87EA-FD78AF300564 */ {0xCC,0x5C,0x8A,0x6E,0x3F,0x2F,0x4B,0x3A,0x87,0xEA,0xFD,0x78,0xAF,0x30,0x05,0x64};
+BMD_CONST REFIID IID_IDeckLinkInput                               = /* AF22762B-DFAC-4846-AA79-FA8883560995 */ {0xAF,0x22,0x76,0x2B,0xDF,0xAC,0x48,0x46,0xAA,0x79,0xFA,0x88,0x83,0x56,0x09,0x95};
 BMD_CONST REFIID IID_IDeckLinkHDMIInputEDID                       = /* ABBBACBC-45BC-4665-9D92-ACE6E5A97902 */ {0xAB,0xBB,0xAC,0xBC,0x45,0xBC,0x46,0x65,0x9D,0x92,0xAC,0xE6,0xE5,0xA9,0x79,0x02};
-BMD_CONST REFIID IID_IDeckLinkEncoderInput                        = /* F222551D-13DF-4FD8-B587-9D4F19EC12C9 */ {0xF2,0x22,0x55,0x1D,0x13,0xDF,0x4F,0xD8,0xB5,0x87,0x9D,0x4F,0x19,0xEC,0x12,0xC9};
+BMD_CONST REFIID IID_IDeckLinkEncoderInput                        = /* 270587DA-6B7D-42E7-A1F0-6D853F581185 */ {0x27,0x05,0x87,0xDA,0x6B,0x7D,0x42,0xE7,0xA1,0xF0,0x6D,0x85,0x3F,0x58,0x11,0x85};
 BMD_CONST REFIID IID_IDeckLinkVideoFrame                          = /* 3F716FE0-F023-4111-BE5D-EF4414C05B17 */ {0x3F,0x71,0x6F,0xE0,0xF0,0x23,0x41,0x11,0xBE,0x5D,0xEF,0x44,0x14,0xC0,0x5B,0x17};
 BMD_CONST REFIID IID_IDeckLinkMutableVideoFrame                   = /* 69E2639F-40DA-4E19-B6F2-20ACE815C390 */ {0x69,0xE2,0x63,0x9F,0x40,0xDA,0x4E,0x19,0xB6,0xF2,0x20,0xAC,0xE8,0x15,0xC3,0x90};
 BMD_CONST REFIID IID_IDeckLinkVideoFrame3DExtensions              = /* DA0F7E4A-EDC7-48A8-9CDD-2DB51C729CD7 */ {0xDA,0x0F,0x7E,0x4A,0xED,0xC7,0x48,0xA8,0x9C,0xDD,0x2D,0xB5,0x1C,0x72,0x9C,0xD7};
@@ -91,12 +91,8 @@ BMD_CONST REFIID IID_IDeckLinkScreenPreviewCallback               = /* B1D3F49A-
 BMD_CONST REFIID IID_IDeckLinkCocoaScreenPreviewCallback          = /* D174152F-8F96-4C07-83A5-DD5F5AF0A2AA */ {0xD1,0x74,0x15,0x2F,0x8F,0x96,0x4C,0x07,0x83,0xA5,0xDD,0x5F,0x5A,0xF0,0xA2,0xAA};
 BMD_CONST REFIID IID_IDeckLinkGLScreenPreviewHelper               = /* 504E2209-CAC7-4C1A-9FB4-C5BB6274D22F */ {0x50,0x4E,0x22,0x09,0xCA,0xC7,0x4C,0x1A,0x9F,0xB4,0xC5,0xBB,0x62,0x74,0xD2,0x2F};
 BMD_CONST REFIID IID_IDeckLinkNotificationCallback                = /* B002A1EC-070D-4288-8289-BD5D36E5FF0D */ {0xB0,0x02,0xA1,0xEC,0x07,0x0D,0x42,0x88,0x82,0x89,0xBD,0x5D,0x36,0xE5,0xFF,0x0D};
-BMD_CONST REFIID IID_IDeckLinkNotification                        = /* B85DF4C8-BDF5-47C1-8064-28162EBDD4EB */ {0xB8,0x5D,0xF4,0xC8,0xBD,0xF5,0x47,0xC1,0x80,0x64,0x28,0x16,0x2E,0xBD,0xD4,0xEB};
-BMD_CONST REFIID IID_IDeckLinkProfileAttributes                   = /* 17D4BF8E-4911-473A-80A0-731CF6FF345B */ {0x17,0xD4,0xBF,0x8E,0x49,0x11,0x47,0x3A,0x80,0xA0,0x73,0x1C,0xF6,0xFF,0x34,0x5B};
-BMD_CONST REFIID IID_IDeckLinkProfileIterator                     = /* 29E5A8C0-8BE4-46EB-93AC-31DAAB5B7BF2 */ {0x29,0xE5,0xA8,0xC0,0x8B,0xE4,0x46,0xEB,0x93,0xAC,0x31,0xDA,0xAB,0x5B,0x7B,0xF2};
-BMD_CONST REFIID IID_IDeckLinkProfile                             = /* 16093466-674A-432B-9DA0-1AC2C5A8241C */ {0x16,0x09,0x34,0x66,0x67,0x4A,0x43,0x2B,0x9D,0xA0,0x1A,0xC2,0xC5,0xA8,0x24,0x1C};
-BMD_CONST REFIID IID_IDeckLinkProfileCallback                     = /* A4F9341E-97AA-4E04-8935-15F809898CEA */ {0xA4,0xF9,0x34,0x1E,0x97,0xAA,0x4E,0x04,0x89,0x35,0x15,0xF8,0x09,0x89,0x8C,0xEA};
-BMD_CONST REFIID IID_IDeckLinkProfileManager                      = /* 30D41429-3998-4B6D-84F8-78C94A797C6E */ {0x30,0xD4,0x14,0x29,0x39,0x98,0x4B,0x6D,0x84,0xF8,0x78,0xC9,0x4A,0x79,0x7C,0x6E};
+BMD_CONST REFIID IID_IDeckLinkNotification                        = /* 0A1FB207-E215-441B-9B19-6FA1575946C5 */ {0x0A,0x1F,0xB2,0x07,0xE2,0x15,0x44,0x1B,0x9B,0x19,0x6F,0xA1,0x57,0x59,0x46,0xC5};
+BMD_CONST REFIID IID_IDeckLinkAttributes                          = /* ABC11843-D966-44CB-96E2-A1CB5D3135C4 */ {0xAB,0xC1,0x18,0x43,0xD9,0x66,0x44,0xCB,0x96,0xE2,0xA1,0xCB,0x5D,0x31,0x35,0xC4};
 BMD_CONST REFIID IID_IDeckLinkStatus                              = /* 5F558200-4028-49BC-BEAC-DB3FA4A96E46 */ {0x5F,0x55,0x82,0x00,0x40,0x28,0x49,0xBC,0xBE,0xAC,0xDB,0x3F,0xA4,0xA9,0x6E,0x46};
 BMD_CONST REFIID IID_IDeckLinkKeyer                               = /* 89AFCAF5-65F8-421E-98F7-96FE5F5BFBA3 */ {0x89,0xAF,0xCA,0xF5,0x65,0xF8,0x42,0x1E,0x98,0xF7,0x96,0xFE,0x5F,0x5B,0xFB,0xA3};
 BMD_CONST REFIID IID_IDeckLinkVideoConversion                     = /* 3BBCB8A2-DA2C-42D9-B5D8-88083644E99A */ {0x3B,0xBC,0xB8,0xA2,0xDA,0x2C,0x42,0xD9,0xB5,0xD8,0x88,0x08,0x36,0x44,0xE9,0x9A};
@@ -111,21 +107,7 @@ enum _BMDVideoOutputFlags {
     bmdVideoOutputVANC                                           = 1 << 0,
     bmdVideoOutputVITC                                           = 1 << 1,
     bmdVideoOutputRP188                                          = 1 << 2,
-    bmdVideoOutputDualStream3D                                   = 1 << 4,
-    bmdVideoOutputSynchronizeToPlaybackGroup                     = 1 << 6
-};
-
-/* Enum BMDSupportedVideoModeFlags - Flags to describe supported video mode */
-
-typedef uint32_t BMDSupportedVideoModeFlags;
-enum _BMDSupportedVideoModeFlags {
-    bmdSupportedVideoModeDefault                                 = 0,
-    bmdSupportedVideoModeKeying                                  = 1 << 0,
-    bmdSupportedVideoModeDualStream3D                            = 1 << 1,
-    bmdSupportedVideoModeSDISingleLink                           = 1 << 2,
-    bmdSupportedVideoModeSDIDualLink                             = 1 << 3,
-    bmdSupportedVideoModeSDIQuadLink                             = 1 << 4,
-    bmdSupportedVideoModeInAnyProfile                            = 1 << 5
+    bmdVideoOutputDualStream3D                                   = 1 << 4
 };
 
 /* Enum BMDPacketType - Type of packet */
@@ -157,8 +139,7 @@ typedef uint32_t BMDVideoInputFlags;
 enum _BMDVideoInputFlags {
     bmdVideoInputFlagDefault                                     = 0,
     bmdVideoInputEnableFormatDetection                           = 1 << 0,
-    bmdVideoInputDualStream3D                                    = 1 << 1,
-    bmdVideoInputSynchronizeToCaptureGroup                       = 1 << 2
+    bmdVideoInputDualStream3D                                    = 1 << 1
 };
 
 /* Enum BMDVideoInputFormatChangedEvents - Bitmask passed to the VideoInputFormatChanged notification to identify the properties of the input signal that have changed */
@@ -237,6 +218,15 @@ enum _BMDAudioOutputStreamType {
     bmdAudioOutputStreamTimestamped                             
 };
 
+/* Enum BMDDisplayModeSupport - Output mode supported flags */
+
+typedef uint32_t BMDDisplayModeSupport;
+enum _BMDDisplayModeSupport {
+    bmdDisplayModeNotSupported                                   = 0,
+    bmdDisplayModeSupported,                                    
+    bmdDisplayModeSupportedWithConversion                       
+};
+
 /* Enum BMDAncillaryPacketFormat - Ancillary packet format */
 
 typedef uint32_t BMDAncillaryPacketFormat;
@@ -253,8 +243,7 @@ enum _BMDTimecodeFormat {
     bmdTimecodeRP188VITC1                                        = 'rpv1',	// RP188 timecode where DBB1 equals VITC1 (line 9)
     bmdTimecodeRP188VITC2                                        = 'rp12',	// RP188 timecode where DBB1 equals VITC2 (line 9 for progressive or line 571 for interlaced/PsF)
     bmdTimecodeRP188LTC                                          = 'rplt',	// RP188 timecode where DBB1 equals LTC (line 10)
-    bmdTimecodeRP188HighFrameRate                                = 'rphr',	// RP188 timecode where DBB1 is an HFRTC (SMPTE ST 12-3), the only timecode allowing the frame value to go above 30
-    bmdTimecodeRP188Any                                          = 'rp18',	// Convenience for capture, returning the first valid timecode in {HFRTC (if supported), VITC1, LTC, VITC2}
+    bmdTimecodeRP188Any                                          = 'rp18',	// For capture: return the first valid timecode in {VITC1, LTC ,VITC2} - For playback: set the timecode as VITC1
     bmdTimecodeVITC                                              = 'vitc',
     bmdTimecodeVITCField2                                        = 'vit2',
     bmdTimecodeSerial                                            = 'seri'
@@ -399,6 +388,8 @@ enum _BMDDeckLinkFrameMetadataID {
     bmdDeckLinkFrameMetadataHDRElectroOpticalTransferFunc        = 'eotf',	// EOTF in range 0-7 as per CEA 861.3
     bmdDeckLinkFrameMetadataCintelFilmType                       = 'cfty',	// Current film type
     bmdDeckLinkFrameMetadataCintelFilmGauge                      = 'cfga',	// Current film gauge
+    bmdDeckLinkFrameMetadataCintelOffsetDetectedHorizontal       = 'odfh',	// Horizontal offset (pixels) detected in image
+    bmdDeckLinkFrameMetadataCintelOffsetDetectedVertical         = 'odfv',	// Vertical offset (pixels) detected in image
     bmdDeckLinkFrameMetadataCintelKeykodeLow                     = 'ckkl',	// Raw keykode value - low 64 bits
     bmdDeckLinkFrameMetadataCintelKeykodeHigh                    = 'ckkh',	// Raw keykode value - high 64 bits
     bmdDeckLinkFrameMetadataCintelTile1Size                      = 'ct1s',	// Size in bytes of compressed raw tile 1
@@ -445,30 +436,15 @@ enum _BMDDeckLinkFrameMetadataID {
     bmdDeckLinkFrameMetadataCintelGainBlue                       = 'LfBl',	// Blue gain parameter to apply after log
     bmdDeckLinkFrameMetadataCintelLiftRed                        = 'GnRd',	// Red lift parameter to apply after log and gain
     bmdDeckLinkFrameMetadataCintelLiftGreen                      = 'GnGr',	// Green lift parameter to apply after log and gain
-    bmdDeckLinkFrameMetadataCintelLiftBlue                       = 'GnBl',	// Blue lift parameter to apply after log and gain
-    bmdDeckLinkFrameMetadataCintelHDRGainRed                     = 'HGRd',	// Red gain parameter to apply to linear data for HDR Combination
-    bmdDeckLinkFrameMetadataCintelHDRGainGreen                   = 'HGGr',	// Green gain parameter to apply to linear data for HDR Combination
-    bmdDeckLinkFrameMetadataCintelHDRGainBlue                    = 'HGBl'	// Blue gain parameter to apply to linear data for HDR Combination
+    bmdDeckLinkFrameMetadataCintelLiftBlue                       = 'GnBl'	// Blue lift parameter to apply after log and gain
 };
 
-/* Enum BMDProfileID - Identifies a profile */
+/* Enum BMDDuplexMode - Duplex for configurable ports */
 
-typedef uint32_t BMDProfileID;
-enum _BMDProfileID {
-    bmdProfileOneSubDeviceFullDuplex                             = '1dfd',
-    bmdProfileOneSubDeviceHalfDuplex                             = '1dhd',
-    bmdProfileTwoSubDevicesFullDuplex                            = '2dfd',
-    bmdProfileTwoSubDevicesHalfDuplex                            = '2dhd',
-    bmdProfileFourSubDevicesHalfDuplex                           = '4dhd'
-};
-
-/* Enum BMDHDMITimecodePacking - Packing form of timecode on HDMI */
-
-typedef uint32_t BMDHDMITimecodePacking;
-enum _BMDHDMITimecodePacking {
-    bmdHDMITimecodePackingIEEEOUI000085                          = 0x00008500,
-    bmdHDMITimecodePackingIEEEOUI080046                          = 0x08004601,
-    bmdHDMITimecodePackingIEEEOUI5CF9F0                          = 0x5CF9F003
+typedef uint32_t BMDDuplexMode;
+enum _BMDDuplexMode {
+    bmdDuplexModeFull                                            = 'fdup',
+    bmdDuplexModeHalf                                            = 'hdup'
 };
 
 /* Enum BMDDeckLinkAttributeID - DeckLink Attribute ID */
@@ -480,6 +456,7 @@ enum _BMDDeckLinkAttributeID {
 
     BMDDeckLinkSupportsInternalKeying                            = 'keyi',
     BMDDeckLinkSupportsExternalKeying                            = 'keye',
+    BMDDeckLinkSupportsHDKeying                                  = 'keyh',
     BMDDeckLinkSupportsInputFormatDetection                      = 'infd',
     BMDDeckLinkHasReferenceInput                                 = 'hrin',
     BMDDeckLinkHasSerialPort                                     = 'hspt',
@@ -488,19 +465,16 @@ enum _BMDDeckLinkAttributeID {
     BMDDeckLinkHasVideoInputAntiAliasingFilter                   = 'aafl',
     BMDDeckLinkHasBypass                                         = 'byps',
     BMDDeckLinkSupportsClockTimingAdjustment                     = 'ctad',
+    BMDDeckLinkSupportsFullDuplex                                = 'fdup',
     BMDDeckLinkSupportsFullFrameReferenceInputTimingOffset       = 'frin',
     BMDDeckLinkSupportsSMPTELevelAOutput                         = 'lvla',
     BMDDeckLinkSupportsDualLinkSDI                               = 'sdls',
     BMDDeckLinkSupportsQuadLinkSDI                               = 'sqls',
     BMDDeckLinkSupportsIdleOutput                                = 'idou',
-    BMDDeckLinkVANCRequires10BitYUVVideoFrames                   = 'vioY',	// Legacy product requires v210 active picture for IDeckLinkVideoFrameAncillaryPackets or 10-bit VANC
     BMDDeckLinkHasLTCTimecodeInput                               = 'hltc',
+    BMDDeckLinkSupportsDuplexModeConfiguration                   = 'dupx',
     BMDDeckLinkSupportsHDRMetadata                               = 'hdrm',
     BMDDeckLinkSupportsColorspaceMetadata                        = 'cmet',
-    BMDDeckLinkSupportsHDMITimecode                              = 'htim',
-    BMDDeckLinkSupportsHighFrameRateTimecode                     = 'HFRT',
-    BMDDeckLinkSupportsSynchronizeToCaptureGroup                 = 'stcg',
-    BMDDeckLinkSupportsSynchronizeToPlaybackGroup                = 'stpg',
 
     /* Integers */
 
@@ -523,8 +497,7 @@ enum _BMDDeckLinkAttributeID {
     BMDDeckLinkAudioInputXLRChannelCount                         = 'aixc',
     BMDDeckLinkAudioOutputRCAChannelCount                        = 'aorc',
     BMDDeckLinkAudioOutputXLRChannelCount                        = 'aoxc',
-    BMDDeckLinkProfileID                                         = 'prid',	// Returns a BMDProfileID
-    BMDDeckLinkDuplex                                            = 'dupx',
+    BMDDeckLinkPairedDevicePersistentID                          = 'ppid',
 
     /* Floats */
 
@@ -570,6 +543,7 @@ enum _BMDDeckLinkStatusID {
     bmdDeckLinkStatusLastVideoOutputPixelFormat                  = 'opix',
     bmdDeckLinkStatusReferenceSignalMode                         = 'refm',
     bmdDeckLinkStatusReferenceSignalFlags                        = 'reff',
+    bmdDeckLinkStatusDuplexMode                                  = 'dupx',
     bmdDeckLinkStatusBusy                                        = 'busy',
     bmdDeckLinkStatusInterchangeablePanelType                    = 'icpt',
     bmdDeckLinkStatusDeviceTemperature                           = 'dtmp',
@@ -589,14 +563,14 @@ enum _BMDDeckLinkVideoStatusFlags {
     bmdDeckLinkVideoStatusDualStream3D                           = 1 << 1
 };
 
-/* Enum BMDDuplexMode - Duplex of the device */
+/* Enum BMDDuplexStatus - Duplex status of the device */
 
-typedef uint32_t BMDDuplexMode;
-enum _BMDDuplexMode {
-    bmdDuplexFull                                                = 'dxfu',
-    bmdDuplexHalf                                                = 'dxha',
-    bmdDuplexSimplex                                             = 'dxsp',
-    bmdDuplexInactive                                            = 'dxin'
+typedef uint32_t BMDDuplexStatus;
+enum _BMDDuplexStatus {
+    bmdDuplexStatusFullDuplex                                    = 'fdup',
+    bmdDuplexStatusHalfDuplex                                    = 'hdup',
+    bmdDuplexStatusSimplex                                       = 'splx',
+    bmdDuplexStatusInactive                                      = 'inac'
 };
 
 /* Enum BMDPanelType - The type of interchangeable panel */
@@ -677,11 +651,7 @@ class IDeckLinkCocoaScreenPreviewCallback;
 class IDeckLinkGLScreenPreviewHelper;
 class IDeckLinkNotificationCallback;
 class IDeckLinkNotification;
-class IDeckLinkProfileAttributes;
-class IDeckLinkProfileIterator;
-class IDeckLinkProfile;
-class IDeckLinkProfileCallback;
-class IDeckLinkProfileManager;
+class IDeckLinkAttributes;
 class IDeckLinkStatus;
 class IDeckLinkKeyer;
 class IDeckLinkVideoConversion;
@@ -772,8 +742,7 @@ protected:
 class BMD_PUBLIC IDeckLinkOutput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedPixelFormat, /* in */ BMDSupportedVideoModeFlags flags, /* out */ BMDDisplayMode *actualMode, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoOutputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     virtual HRESULT SetScreenPreviewCallback (/* in */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
@@ -830,8 +799,7 @@ protected:
 class BMD_PUBLIC IDeckLinkInput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedPixelFormat, /* in */ BMDSupportedVideoModeFlags flags, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoInputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     virtual HRESULT SetScreenPreviewCallback (/* in */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
@@ -883,8 +851,7 @@ protected:
 class BMD_PUBLIC IDeckLinkEncoderInput : public IUnknown
 {
 public:
-    virtual HRESULT DoesSupportVideoMode (/* in */ BMDVideoConnection connection /* If a value of 0 is specified, the caller does not care about the connection */, /* in */ BMDDisplayMode requestedMode, /* in */ BMDPixelFormat requestedCodec, /* in */ uint32_t requestedCodecProfile, /* in */ BMDSupportedVideoModeFlags flags, /* out */ bool *supported) = 0;
-    virtual HRESULT GetDisplayMode (/* in */ BMDDisplayMode displayMode, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
+    virtual HRESULT DoesSupportVideoMode (/* in */ BMDDisplayMode displayMode, /* in */ BMDPixelFormat pixelFormat, /* in */ BMDVideoInputFlags flags, /* out */ BMDDisplayModeSupport *result, /* out */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
     virtual HRESULT GetDisplayModeIterator (/* out */ IDeckLinkDisplayModeIterator **iterator) = 0;
 
     /* Video Input */
@@ -1164,14 +1131,11 @@ class BMD_PUBLIC IDeckLinkNotification : public IUnknown
 public:
     virtual HRESULT Subscribe (/* in */ BMDNotifications topic, /* in */ IDeckLinkNotificationCallback *theCallback) = 0;
     virtual HRESULT Unsubscribe (/* in */ BMDNotifications topic, /* in */ IDeckLinkNotificationCallback *theCallback) = 0;
-
-protected:
-    virtual ~IDeckLinkNotification () {} // call Release method to drop reference count
 };
 
-/* Interface IDeckLinkProfileAttributes - Created by QueryInterface from an IDeckLinkProfile, or from IDeckLink. When queried from IDeckLink, interrogates the active profile */
+/* Interface IDeckLinkAttributes - DeckLink Attribute interface */
 
-class BMD_PUBLIC IDeckLinkProfileAttributes : public IUnknown
+class BMD_PUBLIC IDeckLinkAttributes : public IUnknown
 {
 public:
     virtual HRESULT GetFlag (/* in */ BMDDeckLinkAttributeID cfgID, /* out */ bool *value) = 0;
@@ -1180,57 +1144,7 @@ public:
     virtual HRESULT GetString (/* in */ BMDDeckLinkAttributeID cfgID, /* out */ CFStringRef *value) = 0;
 
 protected:
-    virtual ~IDeckLinkProfileAttributes () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileIterator - Enumerates IDeckLinkProfile interfaces */
-
-class BMD_PUBLIC IDeckLinkProfileIterator : public IUnknown
-{
-public:
-    virtual HRESULT Next (/* out */ IDeckLinkProfile **profile) = 0;
-
-protected:
-    virtual ~IDeckLinkProfileIterator () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfile - Represents the active profile when queried from IDeckLink */
-
-class BMD_PUBLIC IDeckLinkProfile : public IUnknown
-{
-public:
-    virtual HRESULT GetDevice (/* out */ IDeckLink **device) = 0; // Device affected when this profile becomes active
-    virtual HRESULT IsActive (/* out */ bool *isActive) = 0;
-    virtual HRESULT SetActive (void) = 0; // Activating a profile will also change the profile on all devices enumerated by GetPeers(). Activation is not complete until IDeckLinkProfileCallback::ProfileActivated() is called
-    virtual HRESULT GetPeers (/* out */ IDeckLinkProfileIterator **profileIterator) = 0; // Profiles of other devices activated with this profile
-
-protected:
-    virtual ~IDeckLinkProfile () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileCallback - Receive notifications about profiles related to this device */
-
-class BMD_PUBLIC IDeckLinkProfileCallback : public IUnknown
-{
-public:
-    virtual HRESULT ProfileChanging (/* in */ IDeckLinkProfile *profileToBeActivated, /* in */ bool streamsWillBeForcedToStop) = 0; // Called before this device changes profile. User has an opportunity for teardown if streamsWillBeForcedToStop
-    virtual HRESULT ProfileActivated (/* in */ IDeckLinkProfile *activatedProfile) = 0; // Called after this device has been activated with a new profile
-
-protected:
-    virtual ~IDeckLinkProfileCallback () {} // call Release method to drop reference count
-};
-
-/* Interface IDeckLinkProfileManager - Created by QueryInterface from IDeckLink when a device has multiple optional profiles */
-
-class BMD_PUBLIC IDeckLinkProfileManager : public IUnknown
-{
-public:
-    virtual HRESULT GetProfiles (/* out */ IDeckLinkProfileIterator **profileIterator) = 0; // All available profiles for this device
-    virtual HRESULT GetProfile (/* in */ BMDProfileID profileID, /* out */ IDeckLinkProfile **profile) = 0;
-    virtual HRESULT SetCallback (/* in */ IDeckLinkProfileCallback *callback) = 0;
-
-protected:
-    virtual ~IDeckLinkProfileManager () {} // call Release method to drop reference count
+    virtual ~IDeckLinkAttributes () {} // call Release method to drop reference count
 };
 
 /* Interface IDeckLinkStatus - DeckLink Status interface */
diff --git a/sys/decklink/osx/DeckLinkAPIConfiguration.h b/sys/decklink/osx/DeckLinkAPIConfiguration.h
index 82663e2bb..a76d33aae 100644
--- a/sys/decklink/osx/DeckLinkAPIConfiguration.h
+++ b/sys/decklink/osx/DeckLinkAPIConfiguration.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -46,7 +46,7 @@
 
 // Interface ID Declarations
 
-BMD_CONST REFIID IID_IDeckLinkConfiguration                       = /* 912F634B-2D4E-40A4-8AAB-8D80B73F1289 */ {0x91,0x2F,0x63,0x4B,0x2D,0x4E,0x40,0xA4,0x8A,0xAB,0x8D,0x80,0xB7,0x3F,0x12,0x89};
+BMD_CONST REFIID IID_IDeckLinkConfiguration                       = /* EF90380B-4AE5-4346-9077-E288E149F129 */ {0xEF,0x90,0x38,0x0B,0x4A,0xE5,0x43,0x46,0x90,0x77,0xE2,0x88,0xE1,0x49,0xF1,0x29};
 BMD_CONST REFIID IID_IDeckLinkEncoderConfiguration                = /* 138050E5-C60A-4552-BF3F-0F358049327E */ {0x13,0x80,0x50,0xE5,0xC6,0x0A,0x45,0x52,0xBF,0x3F,0x0F,0x35,0x80,0x49,0x32,0x7E};
 
 /* Enum BMDDeckLinkConfigurationID - DeckLink Configuration ID */
@@ -63,6 +63,7 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigHDMI3DPackingFormat                         = '3dpf',
     bmdDeckLinkConfigBypass                                      = 'byps',
     bmdDeckLinkConfigClockTimingAdjustment                       = 'ctad',
+    bmdDeckLinkConfigDuplexMode                                  = 'dupx',
 
     /* Audio Input/Output Flags */
 
@@ -94,8 +95,6 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigDefaultVideoOutputMode                      = 'dvom',
     bmdDeckLinkConfigDefaultVideoOutputModeFlags                 = 'dvof',
     bmdDeckLinkConfigSDIOutputLinkConfiguration                  = 'solc',
-    bmdDeckLinkConfigHDMITimecodePacking                         = 'htpk',
-    bmdDeckLinkConfigPlaybackGroup                               = 'plgr',
 
     /* Video Output Floats */
 
@@ -127,7 +126,6 @@ enum _BMDDeckLinkConfigurationID {
     bmdDeckLinkConfigVANCSourceLine2Mapping                      = 'vsl2',
     bmdDeckLinkConfigVANCSourceLine3Mapping                      = 'vsl3',
     bmdDeckLinkConfigCapturePassThroughMode                      = 'cptm',
-    bmdDeckLinkConfigCaptureGroup                                = 'cpgr',
 
     /* Video Input Floats */
 
diff --git a/sys/decklink/osx/DeckLinkAPIDeckControl.h b/sys/decklink/osx/DeckLinkAPIDeckControl.h
index 86885363f..b1b7797fb 100644
--- a/sys/decklink/osx/DeckLinkAPIDeckControl.h
+++ b/sys/decklink/osx/DeckLinkAPIDeckControl.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
diff --git a/sys/decklink/osx/DeckLinkAPIDiscovery.h b/sys/decklink/osx/DeckLinkAPIDiscovery.h
index 05337e757..c8331ad44 100644
--- a/sys/decklink/osx/DeckLinkAPIDiscovery.h
+++ b/sys/decklink/osx/DeckLinkAPIDiscovery.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
diff --git a/sys/decklink/osx/DeckLinkAPIDispatch.cpp b/sys/decklink/osx/DeckLinkAPIDispatch.cpp
index c5309e33a..7a2a42651 100644
--- a/sys/decklink/osx/DeckLinkAPIDispatch.cpp
+++ b/sys/decklink/osx/DeckLinkAPIDispatch.cpp
@@ -7,14 +7,14 @@
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
-**
+** 
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
-**
+** 
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
@@ -65,12 +65,12 @@ static void	InitDeckLinkAPI (void)
 		gDeckLinkAPIBundleRef = CFBundleCreate(kCFAllocatorDefault, bundleURL);
 		if (gDeckLinkAPIBundleRef != NULL)
 		{
-			gCreateIteratorFunc = (CreateIteratorFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateDeckLinkIteratorInstance_0004"));
+			gCreateIteratorFunc = (CreateIteratorFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateDeckLinkIteratorInstance_0003"));
 			gCreateAPIInformationFunc = (CreateAPIInformationFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateDeckLinkAPIInformationInstance_0001"));
 			gCreateOpenGLPreviewFunc = (CreateOpenGLScreenPreviewHelperFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateOpenGLScreenPreviewHelper_0001"));
 			gCreateCocoaPreviewFunc = (CreateCocoaScreenPreviewFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateCocoaScreenPreview_0001"));
 			gCreateVideoConversionFunc = (CreateVideoConversionInstanceFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateVideoConversionInstance_0001"));
-            gCreateDeckLinkDiscoveryFunc = (CreateDeckLinkDiscoveryInstanceFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateDeckLinkDiscoveryInstance_0003"));
+            gCreateDeckLinkDiscoveryFunc = (CreateDeckLinkDiscoveryInstanceFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateDeckLinkDiscoveryInstance_0002"));
             gCreateVideoFrameAncillaryPacketsFunc = (CreateVideoFrameAncillaryPacketsInstanceFunc)CFBundleGetFunctionPointerForName(gDeckLinkAPIBundleRef, CFSTR("CreateVideoFrameAncillaryPacketsInstance_0001"));
 		}
 		CFRelease(bundleURL);
@@ -83,7 +83,7 @@ bool		IsDeckLinkAPIPresent (void)
 	// If the DeckLink API bundle was successfully loaded, return this knowledge to the caller
 	if (gDeckLinkAPIBundleRef != NULL)
 		return true;
-
+	
 	return false;
 }
 #endif
@@ -91,70 +91,70 @@ bool		IsDeckLinkAPIPresent (void)
 IDeckLinkIterator*		CreateDeckLinkIteratorInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateIteratorFunc == NULL)
 		return NULL;
-
+	
 	return gCreateIteratorFunc();
 }
 
 IDeckLinkAPIInformation*	CreateDeckLinkAPIInformationInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateAPIInformationFunc == NULL)
 		return NULL;
-
+	
 	return gCreateAPIInformationFunc();
 }
 
 IDeckLinkGLScreenPreviewHelper*		CreateOpenGLScreenPreviewHelper (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateOpenGLPreviewFunc == NULL)
 		return NULL;
-
+	
 	return gCreateOpenGLPreviewFunc();
 }
 
 IDeckLinkCocoaScreenPreviewCallback*	CreateCocoaScreenPreview (void* parentView)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateCocoaPreviewFunc == NULL)
 		return NULL;
-
+	
 	return gCreateCocoaPreviewFunc(parentView);
 }
 
 IDeckLinkVideoConversion* CreateVideoConversionInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateVideoConversionFunc == NULL)
 		return NULL;
-
+	
 	return gCreateVideoConversionFunc();
 }
 
 IDeckLinkDiscovery* CreateDeckLinkDiscoveryInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateDeckLinkDiscoveryFunc == NULL)
 		return NULL;
-
+	
 	return gCreateDeckLinkDiscoveryFunc();
 }
 
 IDeckLinkVideoFrameAncillaryPackets* CreateVideoFrameAncillaryPacketsInstance (void)
 {
 	pthread_once(&gDeckLinkOnceControl, InitDeckLinkAPI);
-
+	
 	if (gCreateVideoFrameAncillaryPacketsFunc == NULL)
 		return NULL;
-
+	
 	return gCreateVideoFrameAncillaryPacketsFunc();
 }
 
diff --git a/sys/decklink/osx/DeckLinkAPIModes.h b/sys/decklink/osx/DeckLinkAPIModes.h
index b7eeb085b..9a242e012 100644
--- a/sys/decklink/osx/DeckLinkAPIModes.h
+++ b/sys/decklink/osx/DeckLinkAPIModes.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -69,16 +69,9 @@ enum _BMDDisplayMode {
     bmdModeHD1080p25                                             = 'Hp25',
     bmdModeHD1080p2997                                           = 'Hp29',
     bmdModeHD1080p30                                             = 'Hp30',
-    bmdModeHD1080p4795                                           = 'Hp47',
-    bmdModeHD1080p48                                             = 'Hp48',
     bmdModeHD1080p50                                             = 'Hp50',
     bmdModeHD1080p5994                                           = 'Hp59',
     bmdModeHD1080p6000                                           = 'Hp60',	// N.B. This _really_ is 60.00 Hz.
-    bmdModeHD1080p9590                                           = 'Hp95',
-    bmdModeHD1080p96                                             = 'Hp96',
-    bmdModeHD1080p100                                            = 'Hp10',
-    bmdModeHD1080p11988                                          = 'Hp11',
-    bmdModeHD1080p120                                            = 'Hp12',
     bmdModeHD1080i50                                             = 'Hi50',
     bmdModeHD1080i5994                                           = 'Hi59',
     bmdModeHD1080i6000                                           = 'Hi60',	// N.B. This _really_ is 60.00 Hz.
@@ -102,16 +95,9 @@ enum _BMDDisplayMode {
     bmdMode2kDCI25                                               = '2d25',
     bmdMode2kDCI2997                                             = '2d29',
     bmdMode2kDCI30                                               = '2d30',
-    bmdMode2kDCI4795                                             = '2d47',
-    bmdMode2kDCI48                                               = '2d48',
     bmdMode2kDCI50                                               = '2d50',
     bmdMode2kDCI5994                                             = '2d59',
     bmdMode2kDCI60                                               = '2d60',
-    bmdMode2kDCI9590                                             = '2d95',
-    bmdMode2kDCI96                                               = '2d96',
-    bmdMode2kDCI100                                              = '2d10',
-    bmdMode2kDCI11988                                            = '2d11',
-    bmdMode2kDCI120                                              = '2d12',
 
     /* 4K UHD Modes */
 
@@ -120,16 +106,9 @@ enum _BMDDisplayMode {
     bmdMode4K2160p25                                             = '4k25',
     bmdMode4K2160p2997                                           = '4k29',
     bmdMode4K2160p30                                             = '4k30',
-    bmdMode4K2160p4795                                           = '4k47',
-    bmdMode4K2160p48                                             = '4k48',
     bmdMode4K2160p50                                             = '4k50',
     bmdMode4K2160p5994                                           = '4k59',
     bmdMode4K2160p60                                             = '4k60',
-    bmdMode4K2160p9590                                           = '4k95',
-    bmdMode4K2160p96                                             = '4k96',
-    bmdMode4K2160p100                                            = '4k10',
-    bmdMode4K2160p11988                                          = '4k11',
-    bmdMode4K2160p120                                            = '4k12',
 
     /* 4K DCI Modes */
 
@@ -138,16 +117,9 @@ enum _BMDDisplayMode {
     bmdMode4kDCI25                                               = '4d25',
     bmdMode4kDCI2997                                             = '4d29',
     bmdMode4kDCI30                                               = '4d30',
-    bmdMode4kDCI4795                                             = '4d47',
-    bmdMode4kDCI48                                               = '4d48',
     bmdMode4kDCI50                                               = '4d50',
     bmdMode4kDCI5994                                             = '4d59',
     bmdMode4kDCI60                                               = '4d60',
-    bmdMode4kDCI9590                                             = '4d95',
-    bmdMode4kDCI96                                               = '4d96',
-    bmdMode4kDCI100                                              = '4d10',
-    bmdMode4kDCI11988                                            = '4d11',
-    bmdMode4kDCI120                                              = '4d12',
 
     /* 8K UHD Modes */
 
@@ -156,8 +128,6 @@ enum _BMDDisplayMode {
     bmdMode8K4320p25                                             = '8k25',
     bmdMode8K4320p2997                                           = '8k29',
     bmdMode8K4320p30                                             = '8k30',
-    bmdMode8K4320p4795                                           = '8k47',
-    bmdMode8K4320p48                                             = '8k48',
     bmdMode8K4320p50                                             = '8k50',
     bmdMode8K4320p5994                                           = '8k59',
     bmdMode8K4320p60                                             = '8k60',
@@ -169,31 +139,10 @@ enum _BMDDisplayMode {
     bmdMode8kDCI25                                               = '8d25',
     bmdMode8kDCI2997                                             = '8d29',
     bmdMode8kDCI30                                               = '8d30',
-    bmdMode8kDCI4795                                             = '8d47',
-    bmdMode8kDCI48                                               = '8d48',
     bmdMode8kDCI50                                               = '8d50',
     bmdMode8kDCI5994                                             = '8d59',
     bmdMode8kDCI60                                               = '8d60',
 
-    /* PC Modes */
-
-    bmdMode640x480p60                                            = 'vga6',
-    bmdMode800x600p60                                            = 'svg6',
-    bmdMode1440x900p50                                           = 'wxg5',
-    bmdMode1440x900p60                                           = 'wxg6',
-    bmdMode1440x1080p50                                          = 'sxg5',
-    bmdMode1440x1080p60                                          = 'sxg6',
-    bmdMode1600x1200p50                                          = 'uxg5',
-    bmdMode1600x1200p60                                          = 'uxg6',
-    bmdMode1920x1200p50                                          = 'wux5',
-    bmdMode1920x1200p60                                          = 'wux6',
-    bmdMode1920x1440p50                                          = '1945',
-    bmdMode1920x1440p60                                          = '1946',
-    bmdMode2560x1440p50                                          = 'wqh5',
-    bmdMode2560x1440p60                                          = 'wqh6',
-    bmdMode2560x1600p50                                          = 'wqx5',
-    bmdMode2560x1600p60                                          = 'wqx6',
-
     /* RAW Modes for Cintel (input only) */
 
     bmdModeCintelRAW                                             = 'rwci',	// Frame size up to 4096x3072, variable frame rate
@@ -219,7 +168,6 @@ enum _BMDFieldDominance {
 
 typedef uint32_t BMDPixelFormat;
 enum _BMDPixelFormat {
-    bmdFormatUnspecified                                         = 0,
     bmdFormat8BitYUV                                             = '2vuy',
     bmdFormat10BitYUV                                            = 'v210',
     bmdFormat8BitARGB                                            = 32,
diff --git a/sys/decklink/osx/DeckLinkAPIStreaming.h b/sys/decklink/osx/DeckLinkAPIStreaming.h
index 50f46a8fe..c2d357cb6 100644
--- a/sys/decklink/osx/DeckLinkAPIStreaming.h
+++ b/sys/decklink/osx/DeckLinkAPIStreaming.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
diff --git a/sys/decklink/osx/DeckLinkAPITypes.h b/sys/decklink/osx/DeckLinkAPITypes.h
index d60113f2e..1564c6e9b 100644
--- a/sys/decklink/osx/DeckLinkAPITypes.h
+++ b/sys/decklink/osx/DeckLinkAPITypes.h
@@ -1,5 +1,5 @@
 /* -LICENSE-START-
-** Copyright (c) 2019 Blackmagic Design
+** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
@@ -59,16 +59,13 @@ enum _BMDTimecodeFlags {
     bmdTimecodeFlagDefault                                       = 0,
     bmdTimecodeIsDropFrame                                       = 1 << 0,
     bmdTimecodeFieldMark                                         = 1 << 1,
-    bmdTimecodeColorFrame                                        = 1 << 2,
-    bmdTimecodeEmbedRecordingTrigger                             = 1 << 3,	// On SDI recording trigger utilises a user-bit
-    bmdTimecodeRecordingTriggered                                = 1 << 4
+    bmdTimecodeColorFrame                                        = 1 << 2
 };
 
 /* Enum BMDVideoConnection - Video connection types */
 
 typedef uint32_t BMDVideoConnection;
 enum _BMDVideoConnection {
-    bmdVideoConnectionUnspecified                                = 0,
     bmdVideoConnectionSDI                                        = 1 << 0,
     bmdVideoConnectionHDMI                                       = 1 << 1,
     bmdVideoConnectionOpticalSDI                                 = 1 << 2,
diff --git a/sys/decklink/osx/DeckLinkAPIVersion.h b/sys/decklink/osx/DeckLinkAPIVersion.h
index b032e9371..f9db7ff18 100644
--- a/sys/decklink/osx/DeckLinkAPIVersion.h
+++ b/sys/decklink/osx/DeckLinkAPIVersion.h
@@ -30,8 +30,8 @@
 #ifndef __DeckLink_API_Version_h__
 #define __DeckLink_API_Version_h__
 
-#define BLACKMAGIC_DECKLINK_API_VERSION					0x0b020000
-#define BLACKMAGIC_DECKLINK_API_VERSION_STRING			"11.2"
+#define BLACKMAGIC_DECKLINK_API_VERSION					0x0a0b0400
+#define BLACKMAGIC_DECKLINK_API_VERSION_STRING			"10.11.4"
 
 #endif	// __DeckLink_API_Version_h__
 
diff --git a/sys/decklink/win/DeckLinkAPI.h b/sys/decklink/win/DeckLinkAPI.h
index f13dcbcd7..4ce7028f4 100644
--- a/sys/decklink/win/DeckLinkAPI.h
+++ b/sys/decklink/win/DeckLinkAPI.h
@@ -4,13 +4,13 @@
 
 
  /* File created by MIDL compiler version 8.01.0622 */
-/* at Tue Jan 19 12:14:07 2038
+/* at Fri Feb 28 12:18:07 2020
  */
 /* Compiler settings for ..\..\Blackmagic\DeckLink_SDK_10.11.4\Win\include\DeckLinkAPI.idl:
-    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622
+    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
     protocol : dce , ms_ext, c_ext, robust
-    error checks: allocation ref bounds_check enum stub_data
-    VC __declspec() decoration level:
+    error checks: allocation ref bounds_check enum stub_data 
+    VC __declspec() decoration level: 
          __declspec(uuid()), __declspec(selectany), __declspec(novtable)
          DECLSPEC_UUID(), MIDL_INTERFACE()
 */
@@ -34,14 +34,14 @@
 #endif /* __RPCNDR_H_VERSION__ */
 
 
-#ifndef __DeckLinkAPI_h__
-#define __DeckLinkAPI_h__
+#ifndef __DeckLinkAPI_h_h__
+#define __DeckLinkAPI_h_h__
 
 #if defined(_MSC_VER) && (_MSC_VER >= 1020)
 #pragma once
 #endif
 
-/* Forward Declarations */
+/* Forward Declarations */ 
 
 #ifndef __IDeckLinkTimecode_FWD_DEFINED__
 #define __IDeckLinkTimecode_FWD_DEFINED__
@@ -410,39 +410,11 @@ typedef interface IDeckLinkNotification IDeckLinkNotification;
 #endif 	/* __IDeckLinkNotification_FWD_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfileAttributes_FWD_DEFINED__
-#define __IDeckLinkProfileAttributes_FWD_DEFINED__
-typedef interface IDeckLinkProfileAttributes IDeckLinkProfileAttributes;
+#ifndef __IDeckLinkAttributes_FWD_DEFINED__
+#define __IDeckLinkAttributes_FWD_DEFINED__
+typedef interface IDeckLinkAttributes IDeckLinkAttributes;
 
-#endif 	/* __IDeckLinkProfileAttributes_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkProfileIterator_FWD_DEFINED__
-#define __IDeckLinkProfileIterator_FWD_DEFINED__
-typedef interface IDeckLinkProfileIterator IDeckLinkProfileIterator;
-
-#endif 	/* __IDeckLinkProfileIterator_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkProfile_FWD_DEFINED__
-#define __IDeckLinkProfile_FWD_DEFINED__
-typedef interface IDeckLinkProfile IDeckLinkProfile;
-
-#endif 	/* __IDeckLinkProfile_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkProfileCallback_FWD_DEFINED__
-#define __IDeckLinkProfileCallback_FWD_DEFINED__
-typedef interface IDeckLinkProfileCallback IDeckLinkProfileCallback;
-
-#endif 	/* __IDeckLinkProfileCallback_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkProfileManager_FWD_DEFINED__
-#define __IDeckLinkProfileManager_FWD_DEFINED__
-typedef interface IDeckLinkProfileManager IDeckLinkProfileManager;
-
-#endif 	/* __IDeckLinkProfileManager_FWD_DEFINED__ */
+#endif 	/* __IDeckLinkAttributes_FWD_DEFINED__ */
 
 
 #ifndef __IDeckLinkStatus_FWD_DEFINED__
@@ -564,72 +536,6 @@ typedef struct CDeckLinkVideoFrameAncillaryPackets CDeckLinkVideoFrameAncillaryP
 #endif 	/* __CDeckLinkVideoFrameAncillaryPackets_FWD_DEFINED__ */
 
 
-#ifndef __IDeckLinkConfiguration_v10_11_FWD_DEFINED__
-#define __IDeckLinkConfiguration_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkConfiguration_v10_11 IDeckLinkConfiguration_v10_11;
-
-#endif 	/* __IDeckLinkConfiguration_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkAttributes_v10_11_FWD_DEFINED__
-#define __IDeckLinkAttributes_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkAttributes_v10_11 IDeckLinkAttributes_v10_11;
-
-#endif 	/* __IDeckLinkAttributes_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkNotification_v10_11_FWD_DEFINED__
-#define __IDeckLinkNotification_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkNotification_v10_11 IDeckLinkNotification_v10_11;
-
-#endif 	/* __IDeckLinkNotification_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkOutput_v10_11_FWD_DEFINED__
-#define __IDeckLinkOutput_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkOutput_v10_11 IDeckLinkOutput_v10_11;
-
-#endif 	/* __IDeckLinkOutput_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkInput_v10_11_FWD_DEFINED__
-#define __IDeckLinkInput_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkInput_v10_11 IDeckLinkInput_v10_11;
-
-#endif 	/* __IDeckLinkInput_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __IDeckLinkEncoderInput_v10_11_FWD_DEFINED__
-#define __IDeckLinkEncoderInput_v10_11_FWD_DEFINED__
-typedef interface IDeckLinkEncoderInput_v10_11 IDeckLinkEncoderInput_v10_11;
-
-#endif 	/* __IDeckLinkEncoderInput_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __CDeckLinkIterator_v10_11_FWD_DEFINED__
-#define __CDeckLinkIterator_v10_11_FWD_DEFINED__
-
-#ifdef __cplusplus
-typedef class CDeckLinkIterator_v10_11 CDeckLinkIterator_v10_11;
-#else
-typedef struct CDeckLinkIterator_v10_11 CDeckLinkIterator_v10_11;
-#endif /* __cplusplus */
-
-#endif 	/* __CDeckLinkIterator_v10_11_FWD_DEFINED__ */
-
-
-#ifndef __CDeckLinkDiscovery_v10_11_FWD_DEFINED__
-#define __CDeckLinkDiscovery_v10_11_FWD_DEFINED__
-
-#ifdef __cplusplus
-typedef class CDeckLinkDiscovery_v10_11 CDeckLinkDiscovery_v10_11;
-#else
-typedef struct CDeckLinkDiscovery_v10_11 CDeckLinkDiscovery_v10_11;
-#endif /* __cplusplus */
-
-#endif 	/* __CDeckLinkDiscovery_v10_11_FWD_DEFINED__ */
-
-
 #ifndef __IDeckLinkConfiguration_v10_9_FWD_DEFINED__
 #define __IDeckLinkConfiguration_v10_9_FWD_DEFINED__
 typedef interface IDeckLinkConfiguration_v10_9 IDeckLinkConfiguration_v10_9;
@@ -973,7 +879,7 @@ typedef interface IDeckLinkInput_v7_1 IDeckLinkInput_v7_1;
 
 #ifdef __cplusplus
 extern "C"{
-#endif
+#endif 
 
 
 
@@ -981,7 +887,7 @@ extern "C"{
 #define __DeckLinkAPI_LIBRARY_DEFINED__
 
 /* library DeckLinkAPI */
-/* [helpstring][version][uuid] */
+/* [helpstring][version][uuid] */ 
 
 typedef LONGLONG BMDTimeValue;
 
@@ -996,29 +902,26 @@ typedef unsigned int BMDTimecodeFlags;
 typedef enum _BMDTimecodeFlags BMDTimecodeFlags;
 
 #endif
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDTimecodeFlags
     {
         bmdTimecodeFlagDefault	= 0,
         bmdTimecodeIsDropFrame	= ( 1 << 0 ) ,
         bmdTimecodeFieldMark	= ( 1 << 1 ) ,
-        bmdTimecodeColorFrame	= ( 1 << 2 ) ,
-        bmdTimecodeEmbedRecordingTrigger	= ( 1 << 3 ) ,
-        bmdTimecodeRecordingTriggered	= ( 1 << 4 )
+        bmdTimecodeColorFrame	= ( 1 << 2 ) 
     } ;
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoConnection
     {
-        bmdVideoConnectionUnspecified	= 0,
         bmdVideoConnectionSDI	= ( 1 << 0 ) ,
         bmdVideoConnectionHDMI	= ( 1 << 1 ) ,
         bmdVideoConnectionOpticalSDI	= ( 1 << 2 ) ,
         bmdVideoConnectionComponent	= ( 1 << 3 ) ,
         bmdVideoConnectionComposite	= ( 1 << 4 ) ,
-        bmdVideoConnectionSVideo	= ( 1 << 5 )
+        bmdVideoConnectionSVideo	= ( 1 << 5 ) 
     } 	BMDVideoConnection;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioConnection
     {
         bmdAudioConnectionEmbedded	= ( 1 << 0 ) ,
@@ -1027,14 +930,14 @@ enum _BMDAudioConnection
         bmdAudioConnectionAnalogXLR	= ( 1 << 3 ) ,
         bmdAudioConnectionAnalogRCA	= ( 1 << 4 ) ,
         bmdAudioConnectionMicrophone	= ( 1 << 5 ) ,
-        bmdAudioConnectionHeadphones	= ( 1 << 6 )
+        bmdAudioConnectionHeadphones	= ( 1 << 6 ) 
     } 	BMDAudioConnection;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlConnection
     {
         bmdDeckControlConnectionRS422Remote1	= ( 1 << 0 ) ,
-        bmdDeckControlConnectionRS422Remote2	= ( 1 << 1 )
+        bmdDeckControlConnectionRS422Remote2	= ( 1 << 1 ) 
     } 	BMDDeckControlConnection;
 
 
@@ -1043,7 +946,7 @@ typedef unsigned int BMDDisplayModeFlags;
 typedef enum _BMDDisplayModeFlags BMDDisplayModeFlags;
 
 #endif
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDisplayMode
     {
         bmdModeNTSC	= 0x6e747363,
@@ -1056,16 +959,9 @@ enum _BMDDisplayMode
         bmdModeHD1080p25	= 0x48703235,
         bmdModeHD1080p2997	= 0x48703239,
         bmdModeHD1080p30	= 0x48703330,
-        bmdModeHD1080p4795	= 0x48703437,
-        bmdModeHD1080p48	= 0x48703438,
         bmdModeHD1080p50	= 0x48703530,
         bmdModeHD1080p5994	= 0x48703539,
         bmdModeHD1080p6000	= 0x48703630,
-        bmdModeHD1080p9590	= 0x48703935,
-        bmdModeHD1080p96	= 0x48703936,
-        bmdModeHD1080p100	= 0x48703130,
-        bmdModeHD1080p11988	= 0x48703131,
-        bmdModeHD1080p120	= 0x48703132,
         bmdModeHD1080i50	= 0x48693530,
         bmdModeHD1080i5994	= 0x48693539,
         bmdModeHD1080i6000	= 0x48693630,
@@ -1080,53 +976,30 @@ enum _BMDDisplayMode
         bmdMode2kDCI25	= 0x32643235,
         bmdMode2kDCI2997	= 0x32643239,
         bmdMode2kDCI30	= 0x32643330,
-        bmdMode2kDCI4795	= 0x32643437,
-        bmdMode2kDCI48	= 0x32643438,
         bmdMode2kDCI50	= 0x32643530,
         bmdMode2kDCI5994	= 0x32643539,
         bmdMode2kDCI60	= 0x32643630,
-        bmdMode2kDCI9590	= 0x32643935,
-        bmdMode2kDCI96	= 0x32643936,
-        bmdMode2kDCI100	= 0x32643130,
-        bmdMode2kDCI11988	= 0x32643131,
-        bmdMode2kDCI120	= 0x32643132,
         bmdMode4K2160p2398	= 0x346b3233,
         bmdMode4K2160p24	= 0x346b3234,
         bmdMode4K2160p25	= 0x346b3235,
         bmdMode4K2160p2997	= 0x346b3239,
         bmdMode4K2160p30	= 0x346b3330,
-        bmdMode4K2160p4795	= 0x346b3437,
-        bmdMode4K2160p48	= 0x346b3438,
         bmdMode4K2160p50	= 0x346b3530,
         bmdMode4K2160p5994	= 0x346b3539,
         bmdMode4K2160p60	= 0x346b3630,
-        bmdMode4K2160p9590	= 0x346b3935,
-        bmdMode4K2160p96	= 0x346b3936,
-        bmdMode4K2160p100	= 0x346b3130,
-        bmdMode4K2160p11988	= 0x346b3131,
-        bmdMode4K2160p120	= 0x346b3132,
         bmdMode4kDCI2398	= 0x34643233,
         bmdMode4kDCI24	= 0x34643234,
         bmdMode4kDCI25	= 0x34643235,
         bmdMode4kDCI2997	= 0x34643239,
         bmdMode4kDCI30	= 0x34643330,
-        bmdMode4kDCI4795	= 0x34643437,
-        bmdMode4kDCI48	= 0x34643438,
         bmdMode4kDCI50	= 0x34643530,
         bmdMode4kDCI5994	= 0x34643539,
         bmdMode4kDCI60	= 0x34643630,
-        bmdMode4kDCI9590	= 0x34643935,
-        bmdMode4kDCI96	= 0x34643936,
-        bmdMode4kDCI100	= 0x34643130,
-        bmdMode4kDCI11988	= 0x34643131,
-        bmdMode4kDCI120	= 0x34643132,
         bmdMode8K4320p2398	= 0x386b3233,
         bmdMode8K4320p24	= 0x386b3234,
         bmdMode8K4320p25	= 0x386b3235,
         bmdMode8K4320p2997	= 0x386b3239,
         bmdMode8K4320p30	= 0x386b3330,
-        bmdMode8K4320p4795	= 0x386b3437,
-        bmdMode8K4320p48	= 0x386b3438,
         bmdMode8K4320p50	= 0x386b3530,
         bmdMode8K4320p5994	= 0x386b3539,
         bmdMode8K4320p60	= 0x386b3630,
@@ -1135,33 +1008,15 @@ enum _BMDDisplayMode
         bmdMode8kDCI25	= 0x38643235,
         bmdMode8kDCI2997	= 0x38643239,
         bmdMode8kDCI30	= 0x38643330,
-        bmdMode8kDCI4795	= 0x38643437,
-        bmdMode8kDCI48	= 0x38643438,
         bmdMode8kDCI50	= 0x38643530,
         bmdMode8kDCI5994	= 0x38643539,
         bmdMode8kDCI60	= 0x38643630,
-        bmdMode640x480p60	= 0x76676136,
-        bmdMode800x600p60	= 0x73766736,
-        bmdMode1440x900p50	= 0x77786735,
-        bmdMode1440x900p60	= 0x77786736,
-        bmdMode1440x1080p50	= 0x73786735,
-        bmdMode1440x1080p60	= 0x73786736,
-        bmdMode1600x1200p50	= 0x75786735,
-        bmdMode1600x1200p60	= 0x75786736,
-        bmdMode1920x1200p50	= 0x77757835,
-        bmdMode1920x1200p60	= 0x77757836,
-        bmdMode1920x1440p50	= 0x31393435,
-        bmdMode1920x1440p60	= 0x31393436,
-        bmdMode2560x1440p50	= 0x77716835,
-        bmdMode2560x1440p60	= 0x77716836,
-        bmdMode2560x1600p50	= 0x77717835,
-        bmdMode2560x1600p60	= 0x77717836,
         bmdModeCintelRAW	= 0x72776369,
         bmdModeCintelCompressedRAW	= 0x72776363,
         bmdModeUnknown	= 0x69756e6b
     } 	BMDDisplayMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDFieldDominance
     {
         bmdUnknownFieldDominance	= 0,
@@ -1171,10 +1026,9 @@ enum _BMDFieldDominance
         bmdProgressiveSegmentedFrame	= 0x70736620
     } 	BMDFieldDominance;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDPixelFormat
     {
-        bmdFormatUnspecified	= 0,
         bmdFormat8BitYUV	= 0x32767579,
         bmdFormat10BitYUV	= 0x76323130,
         bmdFormat8BitARGB	= 32,
@@ -1190,13 +1044,13 @@ enum _BMDPixelFormat
         bmdFormat12BitRAWJPEG	= 0x72313670
     } 	BMDPixelFormat;
 
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDisplayModeFlags
     {
         bmdDisplayModeSupports3D	= ( 1 << 0 ) ,
         bmdDisplayModeColorspaceRec601	= ( 1 << 1 ) ,
         bmdDisplayModeColorspaceRec709	= ( 1 << 2 ) ,
-        bmdDisplayModeColorspaceRec2020	= ( 1 << 3 )
+        bmdDisplayModeColorspaceRec2020	= ( 1 << 3 ) 
     } ;
 
 
@@ -1205,13 +1059,14 @@ enum _BMDDisplayModeFlags
 
 #if 0
 #endif
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkConfigurationID
     {
         bmdDeckLinkConfigSwapSerialRxTx	= 0x73737274,
         bmdDeckLinkConfigHDMI3DPackingFormat	= 0x33647066,
         bmdDeckLinkConfigBypass	= 0x62797073,
         bmdDeckLinkConfigClockTimingAdjustment	= 0x63746164,
+        bmdDeckLinkConfigDuplexMode	= 0x64757078,
         bmdDeckLinkConfigAnalogAudioConsumerLevels	= 0x6161636c,
         bmdDeckLinkConfigFieldFlickerRemoval	= 0x66646672,
         bmdDeckLinkConfigHD1080p24ToHD1080i5994Conversion	= 0x746f3539,
@@ -1231,8 +1086,6 @@ enum _BMDDeckLinkConfigurationID
         bmdDeckLinkConfigDefaultVideoOutputMode	= 0x64766f6d,
         bmdDeckLinkConfigDefaultVideoOutputModeFlags	= 0x64766f66,
         bmdDeckLinkConfigSDIOutputLinkConfiguration	= 0x736f6c63,
-        bmdDeckLinkConfigHDMITimecodePacking	= 0x6874706b,
-        bmdDeckLinkConfigPlaybackGroup	= 0x706c6772,
         bmdDeckLinkConfigVideoOutputComponentLumaGain	= 0x6f636c67,
         bmdDeckLinkConfigVideoOutputComponentChromaBlueGain	= 0x6f636362,
         bmdDeckLinkConfigVideoOutputComponentChromaRedGain	= 0x6f636372,
@@ -1252,7 +1105,6 @@ enum _BMDDeckLinkConfigurationID
         bmdDeckLinkConfigVANCSourceLine2Mapping	= 0x76736c32,
         bmdDeckLinkConfigVANCSourceLine3Mapping	= 0x76736c33,
         bmdDeckLinkConfigCapturePassThroughMode	= 0x6370746d,
-        bmdDeckLinkConfigCaptureGroup	= 0x63706772,
         bmdDeckLinkConfigVideoInputComponentLumaGain	= 0x69636c67,
         bmdDeckLinkConfigVideoInputComponentChromaBlueGain	= 0x69636362,
         bmdDeckLinkConfigVideoInputComponentChromaRedGain	= 0x69636372,
@@ -1284,7 +1136,7 @@ enum _BMDDeckLinkConfigurationID
         bmdDeckLinkConfigDeckControlConnection	= 0x6463636f
     } 	BMDDeckLinkConfigurationID;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkEncoderConfigurationID
     {
         bmdDeckLinkEncoderConfigPreferredBitDepth	= 0x65706272,
@@ -1306,7 +1158,7 @@ typedef enum _BMDDeckControlStatusFlags BMDDeckControlStatusFlags;
 typedef enum _BMDDeckControlExportModeOpsFlags BMDDeckControlExportModeOpsFlags;
 
 #endif
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlMode
     {
         bmdDeckControlNotOpened	= 0x6e746f70,
@@ -1315,7 +1167,7 @@ enum _BMDDeckControlMode
         bmdDeckControlCaptureMode	= 0x6361706d
     } 	BMDDeckControlMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlEvent
     {
         bmdDeckControlAbortedEvent	= 0x61627465,
@@ -1325,7 +1177,7 @@ enum _BMDDeckControlEvent
         bmdDeckControlCaptureCompleteEvent	= 0x63636576
     } 	BMDDeckControlEvent;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlVTRControlState
     {
         bmdDeckControlNotInVTRControlMode	= 0x6e76636d,
@@ -1339,15 +1191,15 @@ enum _BMDDeckControlVTRControlState
         bmdDeckControlVTRControlStopped	= 0x7674726f
     } 	BMDDeckControlVTRControlState;
 
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDeckControlStatusFlags
     {
         bmdDeckControlStatusDeckConnected	= ( 1 << 0 ) ,
         bmdDeckControlStatusRemoteMode	= ( 1 << 1 ) ,
         bmdDeckControlStatusRecordInhibited	= ( 1 << 2 ) ,
-        bmdDeckControlStatusCassetteOut	= ( 1 << 3 )
+        bmdDeckControlStatusCassetteOut	= ( 1 << 3 ) 
     } ;
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDeckControlExportModeOpsFlags
     {
         bmdDeckControlExportModeInsertVideo	= ( 1 << 0 ) ,
@@ -1366,9 +1218,9 @@ enum _BMDDeckControlExportModeOpsFlags
         bmdDeckControlExportModeInsertTimeCode	= ( 1 << 13 ) ,
         bmdDeckControlExportModeInsertAssemble	= ( 1 << 14 ) ,
         bmdDeckControlExportModeInsertPreview	= ( 1 << 15 ) ,
-        bmdDeckControlUseManualExport	= ( 1 << 16 )
+        bmdDeckControlUseManualExport	= ( 1 << 16 ) 
     } ;
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlError
     {
         bmdDeckControlNoError	= 0x6e6f6572,
@@ -1393,7 +1245,7 @@ enum _BMDDeckControlError
 
 #if 0
 #endif
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingDeviceMode
     {
         bmdStreamingDeviceIdle	= 0x69646c65,
@@ -1402,7 +1254,7 @@ enum _BMDStreamingDeviceMode
         bmdStreamingDeviceUnknown	= 0x6d756e6b
     } 	BMDStreamingDeviceMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingEncodingFrameRate
     {
         bmdStreamingEncodedFrameRate50i	= 0x65353069,
@@ -1418,21 +1270,21 @@ enum _BMDStreamingEncodingFrameRate
         bmdStreamingEncodedFrameRate60p	= 0x65363070
     } 	BMDStreamingEncodingFrameRate;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingEncodingSupport
     {
         bmdStreamingEncodingModeNotSupported	= 0,
         bmdStreamingEncodingModeSupported	= ( bmdStreamingEncodingModeNotSupported + 1 ) ,
-        bmdStreamingEncodingModeSupportedWithChanges	= ( bmdStreamingEncodingModeSupported + 1 )
+        bmdStreamingEncodingModeSupportedWithChanges	= ( bmdStreamingEncodingModeSupported + 1 ) 
     } 	BMDStreamingEncodingSupport;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingVideoCodec
     {
         bmdStreamingVideoCodecH264	= 0x48323634
     } 	BMDStreamingVideoCodec;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingH264Profile
     {
         bmdStreamingH264ProfileHigh	= 0x68696768,
@@ -1440,7 +1292,7 @@ enum _BMDStreamingH264Profile
         bmdStreamingH264ProfileBaseline	= 0x62617365
     } 	BMDStreamingH264Profile;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingH264Level
     {
         bmdStreamingH264Level12	= 0x6c763132,
@@ -1456,20 +1308,20 @@ enum _BMDStreamingH264Level
         bmdStreamingH264Level42	= 0x6c763432
     } 	BMDStreamingH264Level;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingH264EntropyCoding
     {
         bmdStreamingH264EntropyCodingCAVLC	= 0x45564c43,
         bmdStreamingH264EntropyCodingCABAC	= 0x45424143
     } 	BMDStreamingH264EntropyCoding;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingAudioCodec
     {
         bmdStreamingAudioCodecAAC	= 0x41414320
     } 	BMDStreamingAudioCodec;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDStreamingEncodingModePropertyID
     {
         bmdStreamingEncodingPropertyVideoFrameRate	= 0x76667274,
@@ -1518,37 +1370,24 @@ typedef enum _BMDAnalogVideoFlags BMDAnalogVideoFlags;
 typedef enum _BMDDeviceBusyState BMDDeviceBusyState;
 
 #endif
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoOutputFlags
     {
         bmdVideoOutputFlagDefault	= 0,
         bmdVideoOutputVANC	= ( 1 << 0 ) ,
         bmdVideoOutputVITC	= ( 1 << 1 ) ,
         bmdVideoOutputRP188	= ( 1 << 2 ) ,
-        bmdVideoOutputDualStream3D	= ( 1 << 4 ) ,
-        bmdVideoOutputSynchronizeToPlaybackGroup	= ( 1 << 6 )
+        bmdVideoOutputDualStream3D	= ( 1 << 4 ) 
     } 	BMDVideoOutputFlags;
 
-typedef /* [v1_enum] */
-enum _BMDSupportedVideoModeFlags
-    {
-        bmdSupportedVideoModeDefault	= 0,
-        bmdSupportedVideoModeKeying	= ( 1 << 0 ) ,
-        bmdSupportedVideoModeDualStream3D	= ( 1 << 1 ) ,
-        bmdSupportedVideoModeSDISingleLink	= ( 1 << 2 ) ,
-        bmdSupportedVideoModeSDIDualLink	= ( 1 << 3 ) ,
-        bmdSupportedVideoModeSDIQuadLink	= ( 1 << 4 ) ,
-        bmdSupportedVideoModeInAnyProfile	= ( 1 << 5 )
-    } 	BMDSupportedVideoModeFlags;
-
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDPacketType
     {
         bmdPacketTypeStreamInterruptedMarker	= 0x73696e74,
         bmdPacketTypeStreamData	= 0x73646174
     } 	BMDPacketType;
 
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDFrameFlags
     {
         bmdFrameFlagDefault	= 0,
@@ -1556,81 +1395,88 @@ enum _BMDFrameFlags
         bmdFrameContainsHDRMetadata	= ( 1 << 1 ) ,
         bmdFrameContainsCintelMetadata	= ( 1 << 2 ) ,
         bmdFrameCapturedAsPsF	= ( 1 << 30 ) ,
-        bmdFrameHasNoInputSource	= ( 1 << 31 )
+        bmdFrameHasNoInputSource	= ( 1 << 31 ) 
     } ;
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDVideoInputFlags
     {
         bmdVideoInputFlagDefault	= 0,
         bmdVideoInputEnableFormatDetection	= ( 1 << 0 ) ,
-        bmdVideoInputDualStream3D	= ( 1 << 1 ) ,
-        bmdVideoInputSynchronizeToCaptureGroup	= ( 1 << 2 )
+        bmdVideoInputDualStream3D	= ( 1 << 1 ) 
     } ;
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDVideoInputFormatChangedEvents
     {
         bmdVideoInputDisplayModeChanged	= ( 1 << 0 ) ,
         bmdVideoInputFieldDominanceChanged	= ( 1 << 1 ) ,
-        bmdVideoInputColorspaceChanged	= ( 1 << 2 )
+        bmdVideoInputColorspaceChanged	= ( 1 << 2 ) 
     } ;
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDetectedVideoInputFormatFlags
     {
         bmdDetectedVideoInputYCbCr422	= ( 1 << 0 ) ,
         bmdDetectedVideoInputRGB444	= ( 1 << 1 ) ,
-        bmdDetectedVideoInputDualStream3D	= ( 1 << 2 )
+        bmdDetectedVideoInputDualStream3D	= ( 1 << 2 ) 
     } ;
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDeckLinkCapturePassthroughMode
     {
         bmdDeckLinkCapturePassthroughModeDisabled	= 0x70646973,
         bmdDeckLinkCapturePassthroughModeDirect	= 0x70646972,
         bmdDeckLinkCapturePassthroughModeCleanSwitch	= 0x70636c6e
     } ;
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDOutputFrameCompletionResult
     {
         bmdOutputFrameCompleted	= 0,
         bmdOutputFrameDisplayedLate	= ( bmdOutputFrameCompleted + 1 ) ,
         bmdOutputFrameDropped	= ( bmdOutputFrameDisplayedLate + 1 ) ,
-        bmdOutputFrameFlushed	= ( bmdOutputFrameDropped + 1 )
+        bmdOutputFrameFlushed	= ( bmdOutputFrameDropped + 1 ) 
     } 	BMDOutputFrameCompletionResult;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDReferenceStatus
     {
         bmdReferenceNotSupportedByHardware	= ( 1 << 0 ) ,
-        bmdReferenceLocked	= ( 1 << 1 )
+        bmdReferenceLocked	= ( 1 << 1 ) 
     } 	BMDReferenceStatus;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioFormat
     {
         bmdAudioFormatPCM	= 0x6c70636d
     } 	BMDAudioFormat;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioSampleRate
     {
         bmdAudioSampleRate48kHz	= 48000
     } 	BMDAudioSampleRate;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioSampleType
     {
         bmdAudioSampleType16bitInteger	= 16,
         bmdAudioSampleType32bitInteger	= 32
     } 	BMDAudioSampleType;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioOutputStreamType
     {
         bmdAudioOutputStreamContinuous	= 0,
         bmdAudioOutputStreamContinuousDontResample	= ( bmdAudioOutputStreamContinuous + 1 ) ,
-        bmdAudioOutputStreamTimestamped	= ( bmdAudioOutputStreamContinuousDontResample + 1 )
+        bmdAudioOutputStreamTimestamped	= ( bmdAudioOutputStreamContinuousDontResample + 1 ) 
     } 	BMDAudioOutputStreamType;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
+enum _BMDDisplayModeSupport
+    {
+        bmdDisplayModeNotSupported	= 0,
+        bmdDisplayModeSupported	= ( bmdDisplayModeNotSupported + 1 ) ,
+        bmdDisplayModeSupportedWithConversion	= ( bmdDisplayModeSupported + 1 ) 
+    } 	BMDDisplayModeSupport;
+
+typedef /* [v1_enum] */ 
 enum _BMDAncillaryPacketFormat
     {
         bmdAncillaryPacketFormatUInt8	= 0x75693038,
@@ -1638,33 +1484,32 @@ enum _BMDAncillaryPacketFormat
         bmdAncillaryPacketFormatYCbCr10	= 0x76323130
     } 	BMDAncillaryPacketFormat;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDTimecodeFormat
     {
         bmdTimecodeRP188VITC1	= 0x72707631,
         bmdTimecodeRP188VITC2	= 0x72703132,
         bmdTimecodeRP188LTC	= 0x72706c74,
-        bmdTimecodeRP188HighFrameRate	= 0x72706872,
         bmdTimecodeRP188Any	= 0x72703138,
         bmdTimecodeVITC	= 0x76697463,
         bmdTimecodeVITCField2	= 0x76697432,
         bmdTimecodeSerial	= 0x73657269
     } 	BMDTimecodeFormat;
 
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDAnalogVideoFlags
     {
         bmdAnalogVideoFlagCompositeSetup75	= ( 1 << 0 ) ,
-        bmdAnalogVideoFlagComponentBetacamLevels	= ( 1 << 1 )
+        bmdAnalogVideoFlagComponentBetacamLevels	= ( 1 << 1 ) 
     } ;
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioOutputAnalogAESSwitch
     {
         bmdAudioOutputSwitchAESEBU	= 0x61657320,
         bmdAudioOutputSwitchAnalog	= 0x616e6c67
     } 	BMDAudioOutputAnalogAESSwitch;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoOutputConversionMode
     {
         bmdNoVideoOutputConversion	= 0x6e6f6e65,
@@ -1683,7 +1528,7 @@ enum _BMDVideoOutputConversionMode
         bmdVideoOutputHardwarePillarbox1080iUpconversion	= 0x75703169
     } 	BMDVideoOutputConversionMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoInputConversionMode
     {
         bmdNoVideoInputConversion	= 0x6e6f6e65,
@@ -1695,7 +1540,7 @@ enum _BMDVideoInputConversionMode
         bmdVideoInputAnamorphicUpconversion	= 0x616d7570
     } 	BMDVideoInputConversionMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideo3DPackingFormat
     {
         bmdVideo3DPackingSidebySideHalf	= 0x73627368,
@@ -1706,21 +1551,21 @@ enum _BMDVideo3DPackingFormat
         bmdVideo3DPackingRightOnly	= 0x72696768
     } 	BMDVideo3DPackingFormat;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDIdleVideoOutputOperation
     {
         bmdIdleVideoOutputBlack	= 0x626c6163,
         bmdIdleVideoOutputLastFrame	= 0x6c616661
     } 	BMDIdleVideoOutputOperation;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoEncoderFrameCodingMode
     {
         bmdVideoEncoderFrameCodingModeInter	= 0x696e7465,
         bmdVideoEncoderFrameCodingModeIntra	= 0x696e7472
     } 	BMDVideoEncoderFrameCodingMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDNxHRLevel
     {
         bmdDNxHRLevelSQ	= 0x646e7371,
@@ -1730,7 +1575,7 @@ enum _BMDDNxHRLevel
         bmdDNxHRLevel444	= 0x64343434
     } 	BMDDNxHRLevel;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDLinkConfiguration
     {
         bmdLinkConfigurationSingleLink	= 0x6c63736c,
@@ -1738,7 +1583,7 @@ enum _BMDLinkConfiguration
         bmdLinkConfigurationQuadLink	= 0x6c63716c
     } 	BMDLinkConfiguration;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeviceInterface
     {
         bmdDeviceInterfacePCI	= 0x70636920,
@@ -1746,7 +1591,7 @@ enum _BMDDeviceInterface
         bmdDeviceInterfaceThunderbolt	= 0x7468756e
     } 	BMDDeviceInterface;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDColorspace
     {
         bmdColorspaceRec601	= 0x72363031,
@@ -1754,27 +1599,29 @@ enum _BMDColorspace
         bmdColorspaceRec2020	= 0x32303230
     } 	BMDColorspace;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDynamicRange
     {
         bmdDynamicRangeSDR	= 0,
         bmdDynamicRangeHDRStaticPQ	= ( 1 << 29 ) ,
-        bmdDynamicRangeHDRStaticHLG	= ( 1 << 30 )
+        bmdDynamicRangeHDRStaticHLG	= ( 1 << 30 ) 
     } 	BMDDynamicRange;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkHDMIInputEDIDID
     {
         bmdDeckLinkHDMIInputEDIDDynamicRange	= 0x48494479
     } 	BMDDeckLinkHDMIInputEDIDID;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkFrameMetadataID
     {
         bmdDeckLinkFrameMetadataColorspace	= 0x63737063,
         bmdDeckLinkFrameMetadataHDRElectroOpticalTransferFunc	= 0x656f7466,
         bmdDeckLinkFrameMetadataCintelFilmType	= 0x63667479,
         bmdDeckLinkFrameMetadataCintelFilmGauge	= 0x63666761,
+        bmdDeckLinkFrameMetadataCintelOffsetDetectedHorizontal	= 0x6f646668,
+        bmdDeckLinkFrameMetadataCintelOffsetDetectedVertical	= 0x6f646676,
         bmdDeckLinkFrameMetadataCintelKeykodeLow	= 0x636b6b6c,
         bmdDeckLinkFrameMetadataCintelKeykodeHigh	= 0x636b6b68,
         bmdDeckLinkFrameMetadataCintelTile1Size	= 0x63743173,
@@ -1821,35 +1668,22 @@ enum _BMDDeckLinkFrameMetadataID
         bmdDeckLinkFrameMetadataCintelGainBlue	= 0x4c66426c,
         bmdDeckLinkFrameMetadataCintelLiftRed	= 0x476e5264,
         bmdDeckLinkFrameMetadataCintelLiftGreen	= 0x476e4772,
-        bmdDeckLinkFrameMetadataCintelLiftBlue	= 0x476e426c,
-        bmdDeckLinkFrameMetadataCintelHDRGainRed	= 0x48475264,
-        bmdDeckLinkFrameMetadataCintelHDRGainGreen	= 0x48474772,
-        bmdDeckLinkFrameMetadataCintelHDRGainBlue	= 0x4847426c
+        bmdDeckLinkFrameMetadataCintelLiftBlue	= 0x476e426c
     } 	BMDDeckLinkFrameMetadataID;
 
-typedef /* [v1_enum] */
-enum _BMDProfileID
-    {
-        bmdProfileOneSubDeviceFullDuplex	= 0x31646664,
-        bmdProfileOneSubDeviceHalfDuplex	= 0x31646864,
-        bmdProfileTwoSubDevicesFullDuplex	= 0x32646664,
-        bmdProfileTwoSubDevicesHalfDuplex	= 0x32646864,
-        bmdProfileFourSubDevicesHalfDuplex	= 0x34646864
-    } 	BMDProfileID;
-
-typedef /* [v1_enum] */
-enum _BMDHDMITimecodePacking
+typedef /* [v1_enum] */ 
+enum _BMDDuplexMode
     {
-        bmdHDMITimecodePackingIEEEOUI000085	= 0x8500,
-        bmdHDMITimecodePackingIEEEOUI080046	= 0x8004601,
-        bmdHDMITimecodePackingIEEEOUI5CF9F0	= 0x5cf9f003
-    } 	BMDHDMITimecodePacking;
+        bmdDuplexModeFull	= 0x66647570,
+        bmdDuplexModeHalf	= 0x68647570
+    } 	BMDDuplexMode;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkAttributeID
     {
         BMDDeckLinkSupportsInternalKeying	= 0x6b657969,
         BMDDeckLinkSupportsExternalKeying	= 0x6b657965,
+        BMDDeckLinkSupportsHDKeying	= 0x6b657968,
         BMDDeckLinkSupportsInputFormatDetection	= 0x696e6664,
         BMDDeckLinkHasReferenceInput	= 0x6872696e,
         BMDDeckLinkHasSerialPort	= 0x68737074,
@@ -1858,19 +1692,16 @@ enum _BMDDeckLinkAttributeID
         BMDDeckLinkHasVideoInputAntiAliasingFilter	= 0x6161666c,
         BMDDeckLinkHasBypass	= 0x62797073,
         BMDDeckLinkSupportsClockTimingAdjustment	= 0x63746164,
+        BMDDeckLinkSupportsFullDuplex	= 0x66647570,
         BMDDeckLinkSupportsFullFrameReferenceInputTimingOffset	= 0x6672696e,
         BMDDeckLinkSupportsSMPTELevelAOutput	= 0x6c766c61,
         BMDDeckLinkSupportsDualLinkSDI	= 0x73646c73,
         BMDDeckLinkSupportsQuadLinkSDI	= 0x73716c73,
         BMDDeckLinkSupportsIdleOutput	= 0x69646f75,
-        BMDDeckLinkVANCRequires10BitYUVVideoFrames	= 0x76696f59,
         BMDDeckLinkHasLTCTimecodeInput	= 0x686c7463,
+        BMDDeckLinkSupportsDuplexModeConfiguration	= 0x64757078,
         BMDDeckLinkSupportsHDRMetadata	= 0x6864726d,
         BMDDeckLinkSupportsColorspaceMetadata	= 0x636d6574,
-        BMDDeckLinkSupportsHDMITimecode	= 0x6874696d,
-        BMDDeckLinkSupportsHighFrameRateTimecode	= 0x48465254,
-        BMDDeckLinkSupportsSynchronizeToCaptureGroup	= 0x73746367,
-        BMDDeckLinkSupportsSynchronizeToPlaybackGroup	= 0x73747067,
         BMDDeckLinkMaximumAudioChannels	= 0x6d616368,
         BMDDeckLinkMaximumAnalogAudioInputChannels	= 0x69616368,
         BMDDeckLinkMaximumAnalogAudioOutputChannels	= 0x61616368,
@@ -1890,8 +1721,7 @@ enum _BMDDeckLinkAttributeID
         BMDDeckLinkAudioInputXLRChannelCount	= 0x61697863,
         BMDDeckLinkAudioOutputRCAChannelCount	= 0x616f7263,
         BMDDeckLinkAudioOutputXLRChannelCount	= 0x616f7863,
-        BMDDeckLinkProfileID	= 0x70726964,
-        BMDDeckLinkDuplex	= 0x64757078,
+        BMDDeckLinkPairedDevicePersistentID	= 0x70706964,
         BMDDeckLinkVideoInputGainMinimum	= 0x7669676d,
         BMDDeckLinkVideoInputGainMaximum	= 0x76696778,
         BMDDeckLinkVideoOutputGainMinimum	= 0x766f676d,
@@ -1905,13 +1735,13 @@ enum _BMDDeckLinkAttributeID
         BMDDeckLinkDeviceHandle	= 0x64657668
     } 	BMDDeckLinkAttributeID;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkAPIInformationID
     {
         BMDDeckLinkAPIVersion	= 0x76657273
     } 	BMDDeckLinkAPIInformationID;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkStatusID
     {
         bmdDeckLinkStatusDetectedVideoInputMode	= 0x6476696d,
@@ -1926,6 +1756,7 @@ enum _BMDDeckLinkStatusID
         bmdDeckLinkStatusLastVideoOutputPixelFormat	= 0x6f706978,
         bmdDeckLinkStatusReferenceSignalMode	= 0x7265666d,
         bmdDeckLinkStatusReferenceSignalFlags	= 0x72656666,
+        bmdDeckLinkStatusDuplexMode	= 0x64757078,
         bmdDeckLinkStatusBusy	= 0x62757379,
         bmdDeckLinkStatusInterchangeablePanelType	= 0x69637074,
         bmdDeckLinkStatusDeviceTemperature	= 0x64746d70,
@@ -1934,44 +1765,44 @@ enum _BMDDeckLinkStatusID
         bmdDeckLinkStatusReceivedEDID	= 0x65646964
     } 	BMDDeckLinkStatusID;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkVideoStatusFlags
     {
         bmdDeckLinkVideoStatusPsF	= ( 1 << 0 ) ,
-        bmdDeckLinkVideoStatusDualStream3D	= ( 1 << 1 )
+        bmdDeckLinkVideoStatusDualStream3D	= ( 1 << 1 ) 
     } 	BMDDeckLinkVideoStatusFlags;
 
-typedef /* [v1_enum] */
-enum _BMDDuplexMode
+typedef /* [v1_enum] */ 
+enum _BMDDuplexStatus
     {
-        bmdDuplexFull	= 0x64786675,
-        bmdDuplexHalf	= 0x64786861,
-        bmdDuplexSimplex	= 0x64787370,
-        bmdDuplexInactive	= 0x6478696e
-    } 	BMDDuplexMode;
+        bmdDuplexStatusFullDuplex	= 0x66647570,
+        bmdDuplexStatusHalfDuplex	= 0x68647570,
+        bmdDuplexStatusSimplex	= 0x73706c78,
+        bmdDuplexStatusInactive	= 0x696e6163
+    } 	BMDDuplexStatus;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDPanelType
     {
         bmdPanelNotDetected	= 0x6e706e6c,
         bmdPanelTeranexMiniSmartPanel	= 0x746d736d
     } 	BMDPanelType;
 
-/* [v1_enum] */
+/* [v1_enum] */ 
 enum _BMDDeviceBusyState
     {
         bmdDeviceCaptureBusy	= ( 1 << 0 ) ,
         bmdDevicePlaybackBusy	= ( 1 << 1 ) ,
-        bmdDeviceSerialPortBusy	= ( 1 << 2 )
+        bmdDeviceSerialPortBusy	= ( 1 << 2 ) 
     } ;
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoIOSupport
     {
         bmdDeviceSupportsCapture	= ( 1 << 0 ) ,
-        bmdDeviceSupportsPlayback	= ( 1 << 1 )
+        bmdDeviceSupportsPlayback	= ( 1 << 1 ) 
     } 	BMDVideoIOSupport;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMD3DPreviewFormat
     {
         bmd3DPreviewFormatDefault	= 0x64656661,
@@ -1981,7 +1812,7 @@ enum _BMD3DPreviewFormat
         bmd3DPreviewFormatTopBottom	= 0x746f7062
     } 	BMD3DPreviewFormat;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDNotifications
     {
         bmdPreferencesChanged	= 0x70726566,
@@ -2024,98 +1855,46 @@ enum _BMDNotifications
 
 
 
-
-
-
-
-typedef /* [v1_enum] */
-enum _BMDDisplayModeSupport_v10_11
-    {
-        bmdDisplayModeNotSupported_v10_11	= 0,
-        bmdDisplayModeSupported_v10_11	= ( bmdDisplayModeNotSupported_v10_11 + 1 ) ,
-        bmdDisplayModeSupportedWithConversion_v10_11	= ( bmdDisplayModeSupported_v10_11 + 1 )
-    } 	BMDDisplayModeSupport_v10_11;
-
-typedef /* [v1_enum] */
-enum _BMDDuplexMode_v10_11
-    {
-        bmdDuplexModeFull_v10_11	= 0x66647570,
-        bmdDuplexModeHalf_v10_11	= 0x68647570
-    } 	BMDDuplexMode_v10_11;
-
-typedef /* [v1_enum] */
-enum _BMDDeckLinkConfigurationID_v10_11
-    {
-        bmdDeckLinkConfigDuplexMode_v10_11	= 0x64757078
-    } 	BMDDeckLinkConfigurationID_v10_11;
-
-typedef /* [v1_enum] */
-enum _BMDDeckLinkAttributeID_v10_11
-    {
-        BMDDeckLinkSupportsDuplexModeConfiguration_v10_11	= 0x64757078,
-        BMDDeckLinkSupportsHDKeying_v10_11	= 0x6b657968,
-        BMDDeckLinkPairedDevicePersistentID_v10_11	= 0x70706964,
-        BMDDeckLinkSupportsFullDuplex_v10_11	= 0x66647570
-    } 	BMDDeckLinkAttributeID_v10_11;
-
-typedef /* [v1_enum] */
-enum _BMDDeckLinkStatusID_v10_11
-    {
-        bmdDeckLinkStatusDuplexMode_v10_11	= 0x64757078
-    } 	BMDDeckLinkStatusID_v10_11;
-
-typedef /* [v1_enum] */
-enum _BMDDuplexStatus_v10_11
-    {
-        bmdDuplexFullDuplex_v10_11	= 0x66647570,
-        bmdDuplexHalfDuplex_v10_11	= 0x68647570,
-        bmdDuplexSimplex_v10_11	= 0x73706c78,
-        bmdDuplexInactive_v10_11	= 0x696e6163
-    } 	BMDDuplexStatus_v10_11;
-
-
-
-
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkConfigurationID_v10_9
     {
         bmdDeckLinkConfig1080pNotPsF_v10_9	= 0x6670726f
     } 	BMDDeckLinkConfigurationID_v10_9;
 
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkAttributeID_v10_6
     {
         BMDDeckLinkSupportsDesktopDisplay_v10_6	= 0x65787464
     } 	BMDDeckLinkAttributeID_v10_6;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDIdleVideoOutputOperation_v10_6
     {
         bmdIdleVideoOutputDesktop_v10_6	= 0x6465736b
     } 	BMDIdleVideoOutputOperation_v10_6;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkAttributeID_v10_5
     {
         BMDDeckLinkDeviceBusyState_v10_5	= 0x64627374
     } 	BMDDeckLinkAttributeID_v10_5;
 
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkConfigurationID_v10_4
     {
         bmdDeckLinkConfigSingleLinkVideoOutput_v10_4	= 0x73676c6f
     } 	BMDDeckLinkConfigurationID_v10_4;
 
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckLinkConfigurationID_v10_2
     {
         bmdDeckLinkConfig3GBpsVideoOutput_v10_2	= 0x33676273
     } 	BMDDeckLinkConfigurationID_v10_2;
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDAudioConnection_v10_2
     {
         bmdAudioConnectionEmbedded_v10_2	= 0x656d6264,
@@ -2126,7 +1905,7 @@ enum _BMDAudioConnection_v10_2
     } 	BMDAudioConnection_v10_2;
 
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDDeckControlVTRControlState_v8_1
     {
         bmdDeckControlNotInVTRControlMode_v8_1	= 0x6e76636d,
@@ -2139,7 +1918,7 @@ enum _BMDDeckControlVTRControlState_v8_1
 
 
 
-typedef /* [v1_enum] */
+typedef /* [v1_enum] */ 
 enum _BMDVideoConnection_v7_6
     {
         bmdVideoConnectionSDI_v7_6	= 0x73646920,
@@ -2178,75 +1957,75 @@ EXTERN_C const IID LIBID_DeckLinkAPI;
 #define __IDeckLinkTimecode_INTERFACE_DEFINED__
 
 /* interface IDeckLinkTimecode */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkTimecode;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("BC6CFBD3-8317-4325-AC1C-1216391E9340")
     IDeckLinkTimecode : public IUnknown
     {
     public:
         virtual BMDTimecodeBCD STDMETHODCALLTYPE GetBCD( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetComponents(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetComponents( 
             /* [out] */ unsigned char *hours,
             /* [out] */ unsigned char *minutes,
             /* [out] */ unsigned char *seconds,
             /* [out] */ unsigned char *frames) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [out] */ BSTR *timecode) = 0;
-
+        
         virtual BMDTimecodeFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeUserBits(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeUserBits( 
             /* [out] */ BMDTimecodeUserBits *userBits) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkTimecodeVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkTimecode * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkTimecode * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkTimecode * This);
-
-        BMDTimecodeBCD ( STDMETHODCALLTYPE *GetBCD )(
+        
+        BMDTimecodeBCD ( STDMETHODCALLTYPE *GetBCD )( 
             IDeckLinkTimecode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetComponents )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetComponents )( 
             IDeckLinkTimecode * This,
             /* [out] */ unsigned char *hours,
             /* [out] */ unsigned char *minutes,
             /* [out] */ unsigned char *seconds,
             /* [out] */ unsigned char *frames);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkTimecode * This,
             /* [out] */ BSTR *timecode);
-
-        BMDTimecodeFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDTimecodeFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkTimecode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeUserBits )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeUserBits )( 
             IDeckLinkTimecode * This,
             /* [out] */ BMDTimecodeUserBits *userBits);
-
+        
         END_INTERFACE
     } IDeckLinkTimecodeVtbl;
 
@@ -2255,35 +2034,35 @@ EXTERN_C const IID IID_IDeckLinkTimecode;
         CONST_VTBL struct IDeckLinkTimecodeVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkTimecode_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkTimecode_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkTimecode_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkTimecode_GetBCD(This)	\
-    ( (This)->lpVtbl -> GetBCD(This) )
+    ( (This)->lpVtbl -> GetBCD(This) ) 
 
 #define IDeckLinkTimecode_GetComponents(This,hours,minutes,seconds,frames)	\
-    ( (This)->lpVtbl -> GetComponents(This,hours,minutes,seconds,frames) )
+    ( (This)->lpVtbl -> GetComponents(This,hours,minutes,seconds,frames) ) 
 
 #define IDeckLinkTimecode_GetString(This,timecode)	\
-    ( (This)->lpVtbl -> GetString(This,timecode) )
+    ( (This)->lpVtbl -> GetString(This,timecode) ) 
 
 #define IDeckLinkTimecode_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkTimecode_GetTimecodeUserBits(This,userBits)	\
-    ( (This)->lpVtbl -> GetTimecodeUserBits(This,userBits) )
+    ( (This)->lpVtbl -> GetTimecodeUserBits(This,userBits) ) 
 
 #endif /* COBJMACROS */
 
@@ -2300,45 +2079,45 @@ EXTERN_C const IID IID_IDeckLinkTimecode;
 #define __IDeckLinkDisplayModeIterator_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayModeIterator */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayModeIterator;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("9C88499F-F601-4021-B80B-032E4EB41C35")
     IDeckLinkDisplayModeIterator : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLinkDisplayMode **deckLinkDisplayMode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayModeIteratorVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayModeIterator * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayModeIterator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayModeIterator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkDisplayModeIterator * This,
             /* [out] */ IDeckLinkDisplayMode **deckLinkDisplayMode);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayModeIteratorVtbl;
 
@@ -2347,23 +2126,23 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator;
         CONST_VTBL struct IDeckLinkDisplayModeIteratorVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayModeIterator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayModeIterator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayModeIterator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayModeIterator_Next(This,deckLinkDisplayMode)	\
-    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) )
+    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) ) 
 
 #endif /* COBJMACROS */
 
@@ -2380,79 +2159,79 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator;
 #define __IDeckLinkDisplayMode_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayMode */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayMode;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("3EB2C1AB-0A3D-4523-A3AD-F40D7FB14E78")
     IDeckLinkDisplayMode : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetName(
+        virtual HRESULT STDMETHODCALLTYPE GetName( 
             /* [out] */ BSTR *name) = 0;
-
+        
         virtual BMDDisplayMode STDMETHODCALLTYPE GetDisplayMode( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameRate(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFrameRate( 
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale) = 0;
-
+        
         virtual BMDFieldDominance STDMETHODCALLTYPE GetFieldDominance( void) = 0;
-
+        
         virtual BMDDisplayModeFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayModeVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayMode * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayMode * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetName )( 
             IDeckLinkDisplayMode * This,
             /* [out] */ BSTR *name);
-
-        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )( 
             IDeckLinkDisplayMode * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkDisplayMode * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkDisplayMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )( 
             IDeckLinkDisplayMode * This,
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale);
-
-        BMDFieldDominance ( STDMETHODCALLTYPE *GetFieldDominance )(
+        
+        BMDFieldDominance ( STDMETHODCALLTYPE *GetFieldDominance )( 
             IDeckLinkDisplayMode * This);
-
-        BMDDisplayModeFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDDisplayModeFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkDisplayMode * This);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayModeVtbl;
 
@@ -2461,41 +2240,41 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode;
         CONST_VTBL struct IDeckLinkDisplayModeVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayMode_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayMode_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayMode_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayMode_GetName(This,name)	\
-    ( (This)->lpVtbl -> GetName(This,name) )
+    ( (This)->lpVtbl -> GetName(This,name) ) 
 
 #define IDeckLinkDisplayMode_GetDisplayMode(This)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This) )
+    ( (This)->lpVtbl -> GetDisplayMode(This) ) 
 
 #define IDeckLinkDisplayMode_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkDisplayMode_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkDisplayMode_GetFrameRate(This,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) ) 
 
 #define IDeckLinkDisplayMode_GetFieldDominance(This)	\
-    ( (This)->lpVtbl -> GetFieldDominance(This) )
+    ( (This)->lpVtbl -> GetFieldDominance(This) ) 
 
 #define IDeckLinkDisplayMode_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -2512,52 +2291,52 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode;
 #define __IDeckLink_INTERFACE_DEFINED__
 
 /* interface IDeckLink */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLink;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("C418FBDD-0587-48ED-8FE5-640F0A14AF91")
     IDeckLink : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetModelName(
+        virtual HRESULT STDMETHODCALLTYPE GetModelName( 
             /* [out] */ BSTR *modelName) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayName(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
             /* [out] */ BSTR *displayName) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLink * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLink * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLink * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetModelName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetModelName )( 
             IDeckLink * This,
             /* [out] */ BSTR *modelName);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
             IDeckLink * This,
             /* [out] */ BSTR *displayName);
-
+        
         END_INTERFACE
     } IDeckLinkVtbl;
 
@@ -2566,26 +2345,26 @@ EXTERN_C const IID IID_IDeckLink;
         CONST_VTBL struct IDeckLinkVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLink_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLink_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLink_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLink_GetModelName(This,modelName)	\
-    ( (This)->lpVtbl -> GetModelName(This,modelName) )
+    ( (This)->lpVtbl -> GetModelName(This,modelName) ) 
 
 #define IDeckLink_GetDisplayName(This,displayName)	\
-    ( (This)->lpVtbl -> GetDisplayName(This,displayName) )
+    ( (This)->lpVtbl -> GetDisplayName(This,displayName) ) 
 
 #endif /* COBJMACROS */
 
@@ -2602,115 +2381,115 @@ EXTERN_C const IID IID_IDeckLink;
 #define __IDeckLinkConfiguration_INTERFACE_DEFINED__
 
 /* interface IDeckLinkConfiguration */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkConfiguration;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("912F634B-2D4E-40A4-8AAB-8D80B73F1289")
+    
+    MIDL_INTERFACE("EF90380B-4AE5-4346-9077-E288E149F129")
     IDeckLinkConfiguration : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkConfigurationVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkConfiguration * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkConfiguration * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkConfiguration * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkConfiguration * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )( 
             IDeckLinkConfiguration * This);
-
+        
         END_INTERFACE
     } IDeckLinkConfigurationVtbl;
 
@@ -2719,47 +2498,47 @@ EXTERN_C const IID IID_IDeckLinkConfiguration;
         CONST_VTBL struct IDeckLinkConfigurationVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkConfiguration_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkConfiguration_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkConfiguration_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkConfiguration_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
+    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -2776,121 +2555,121 @@ EXTERN_C const IID IID_IDeckLinkConfiguration;
 #define __IDeckLinkEncoderConfiguration_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderConfiguration */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderConfiguration;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("138050E5-C60A-4552-BF3F-0F358049327E")
     IDeckLinkEncoderConfiguration : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ void *buffer,
             /* [out][in] */ unsigned int *bufferSize) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderConfigurationVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderConfiguration * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderConfiguration * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkEncoderConfiguration * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ void *buffer,
             /* [out][in] */ unsigned int *bufferSize);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderConfigurationVtbl;
 
@@ -2899,47 +2678,47 @@ EXTERN_C const IID IID_IDeckLinkEncoderConfiguration;
         CONST_VTBL struct IDeckLinkEncoderConfigurationVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderConfiguration_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderConfiguration_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderConfiguration_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderConfiguration_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_GetBytes(This,cfgID,buffer,bufferSize)	\
-    ( (This)->lpVtbl -> GetBytes(This,cfgID,buffer,bufferSize) )
+    ( (This)->lpVtbl -> GetBytes(This,cfgID,buffer,bufferSize) ) 
 
 #endif /* COBJMACROS */
 
@@ -2956,72 +2735,72 @@ EXTERN_C const IID IID_IDeckLinkEncoderConfiguration;
 #define __IDeckLinkDeckControlStatusCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDeckControlStatusCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("53436FFB-B434-4906-BADC-AE3060FFE8EF")
     IDeckLinkDeckControlStatusCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE TimecodeUpdate(
+        virtual HRESULT STDMETHODCALLTYPE TimecodeUpdate( 
             /* [in] */ BMDTimecodeBCD currentTimecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VTRControlStateChanged(
+        
+        virtual HRESULT STDMETHODCALLTYPE VTRControlStateChanged( 
             /* [in] */ BMDDeckControlVTRControlState newState,
             /* [in] */ BMDDeckControlError error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DeckControlEventReceived(
+        
+        virtual HRESULT STDMETHODCALLTYPE DeckControlEventReceived( 
             /* [in] */ BMDDeckControlEvent event,
             /* [in] */ BMDDeckControlError error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DeckControlStatusChanged(
+        
+        virtual HRESULT STDMETHODCALLTYPE DeckControlStatusChanged( 
             /* [in] */ BMDDeckControlStatusFlags flags,
             /* [in] */ unsigned int mask) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDeckControlStatusCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDeckControlStatusCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDeckControlStatusCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDeckControlStatusCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *TimecodeUpdate )(
+        
+        HRESULT ( STDMETHODCALLTYPE *TimecodeUpdate )( 
             IDeckLinkDeckControlStatusCallback * This,
             /* [in] */ BMDTimecodeBCD currentTimecode);
-
-        HRESULT ( STDMETHODCALLTYPE *VTRControlStateChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VTRControlStateChanged )( 
             IDeckLinkDeckControlStatusCallback * This,
             /* [in] */ BMDDeckControlVTRControlState newState,
             /* [in] */ BMDDeckControlError error);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckControlEventReceived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckControlEventReceived )( 
             IDeckLinkDeckControlStatusCallback * This,
             /* [in] */ BMDDeckControlEvent event,
             /* [in] */ BMDDeckControlError error);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckControlStatusChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckControlStatusChanged )( 
             IDeckLinkDeckControlStatusCallback * This,
             /* [in] */ BMDDeckControlStatusFlags flags,
             /* [in] */ unsigned int mask);
-
+        
         END_INTERFACE
     } IDeckLinkDeckControlStatusCallbackVtbl;
 
@@ -3030,32 +2809,32 @@ EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback;
         CONST_VTBL struct IDeckLinkDeckControlStatusCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDeckControlStatusCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDeckControlStatusCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDeckControlStatusCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDeckControlStatusCallback_TimecodeUpdate(This,currentTimecode)	\
-    ( (This)->lpVtbl -> TimecodeUpdate(This,currentTimecode) )
+    ( (This)->lpVtbl -> TimecodeUpdate(This,currentTimecode) ) 
 
 #define IDeckLinkDeckControlStatusCallback_VTRControlStateChanged(This,newState,error)	\
-    ( (This)->lpVtbl -> VTRControlStateChanged(This,newState,error) )
+    ( (This)->lpVtbl -> VTRControlStateChanged(This,newState,error) ) 
 
 #define IDeckLinkDeckControlStatusCallback_DeckControlEventReceived(This,event,error)	\
-    ( (This)->lpVtbl -> DeckControlEventReceived(This,event,error) )
+    ( (This)->lpVtbl -> DeckControlEventReceived(This,event,error) ) 
 
 #define IDeckLinkDeckControlStatusCallback_DeckControlStatusChanged(This,flags,mask)	\
-    ( (This)->lpVtbl -> DeckControlStatusChanged(This,flags,mask) )
+    ( (This)->lpVtbl -> DeckControlStatusChanged(This,flags,mask) ) 
 
 #endif /* COBJMACROS */
 
@@ -3072,183 +2851,183 @@ EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback;
 #define __IDeckLinkDeckControl_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDeckControl */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDeckControl;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("8E1C3ACE-19C7-4E00-8B92-D80431D958BE")
     IDeckLinkDeckControl : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Open(
+        virtual HRESULT STDMETHODCALLTYPE Open( 
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Close(
+        
+        virtual HRESULT STDMETHODCALLTYPE Close( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCurrentState(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCurrentState( 
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetStandby(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetStandby( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SendCommand(
+        
+        virtual HRESULT STDMETHODCALLTYPE SendCommand( 
             /* [in] */ unsigned char *inBuffer,
             /* [in] */ unsigned int inBufferSize,
             /* [out] */ unsigned char *outBuffer,
             /* [out] */ unsigned int *outDataSize,
             /* [in] */ unsigned int outBufferSize,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Play(
+        
+        virtual HRESULT STDMETHODCALLTYPE Play( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Stop(
+        
+        virtual HRESULT STDMETHODCALLTYPE Stop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Eject(
+        
+        virtual HRESULT STDMETHODCALLTYPE Eject( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GoToTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GoToTimecode( 
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FastForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE FastForward( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Rewind(
+        
+        virtual HRESULT STDMETHODCALLTYPE Rewind( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepForward( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepBack(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepBack( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Jog(
+        
+        virtual HRESULT STDMETHODCALLTYPE Jog( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Shuttle(
+        
+        virtual HRESULT STDMETHODCALLTYPE Shuttle( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString( 
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD( 
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetPreroll( 
             /* [in] */ unsigned int prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPreroll( 
             /* [out] */ unsigned int *prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetExportOffset( 
             /* [in] */ int exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetExportOffset( 
             /* [out] */ int *exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset( 
             /* [out] */ int *deckManualExportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset( 
             /* [in] */ int captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset( 
             /* [out] */ int *captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartExport(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartExport( 
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartCapture(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartCapture( 
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDeviceID(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDeviceID( 
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE Abort( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkDeckControlStatusCallback *callback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDeckControlVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDeckControl * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDeckControl * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDeckControl * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Open )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Open )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Close )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Close )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetStandby )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetStandby )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *SendCommand )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SendCommand )( 
             IDeckLinkDeckControl * This,
             /* [in] */ unsigned char *inBuffer,
             /* [in] */ unsigned int inBufferSize,
@@ -3256,133 +3035,133 @@ EXTERN_C const IID IID_IDeckLinkDeckControl;
             /* [out] */ unsigned int *outDataSize,
             /* [in] */ unsigned int outBufferSize,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Play )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Play )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Stop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Stop )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Eject )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Eject )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *FastForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FastForward )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Rewind )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Rewind )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepForward )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepBack )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepBack )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Jog )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Jog )( 
             IDeckLinkDeckControl * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Shuttle )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Shuttle )( 
             IDeckLinkDeckControl * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkDeckControl * This,
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetPreroll )( 
             IDeckLinkDeckControl * This,
             /* [in] */ unsigned int prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPreroll )( 
             IDeckLinkDeckControl * This,
             /* [out] */ unsigned int *prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )( 
             IDeckLinkDeckControl * This,
             /* [in] */ int exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )( 
             IDeckLinkDeckControl * This,
             /* [out] */ int *exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )( 
             IDeckLinkDeckControl * This,
             /* [out] */ int *deckManualExportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )( 
             IDeckLinkDeckControl * This,
             /* [in] */ int captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )( 
             IDeckLinkDeckControl * This,
             /* [out] */ int *captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *StartExport )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartExport )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StartCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
             IDeckLinkDeckControl * This,
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )( 
             IDeckLinkDeckControl * This,
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Abort )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Abort )( 
             IDeckLinkDeckControl * This);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )( 
             IDeckLinkDeckControl * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkDeckControl * This,
             /* [in] */ IDeckLinkDeckControlStatusCallback *callback);
-
+        
         END_INTERFACE
     } IDeckLinkDeckControlVtbl;
 
@@ -3391,119 +3170,119 @@ EXTERN_C const IID IID_IDeckLinkDeckControl;
         CONST_VTBL struct IDeckLinkDeckControlVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDeckControl_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDeckControl_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDeckControl_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDeckControl_Open(This,timeScale,timeValue,timecodeIsDropFrame,error)	\
-    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) )
+    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) ) 
 
 #define IDeckLinkDeckControl_Close(This,standbyOn)	\
-    ( (This)->lpVtbl -> Close(This,standbyOn) )
+    ( (This)->lpVtbl -> Close(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_GetCurrentState(This,mode,vtrControlState,flags)	\
-    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) )
+    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) ) 
 
 #define IDeckLinkDeckControl_SetStandby(This,standbyOn)	\
-    ( (This)->lpVtbl -> SetStandby(This,standbyOn) )
+    ( (This)->lpVtbl -> SetStandby(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error)	\
-    ( (This)->lpVtbl -> SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error) )
+    ( (This)->lpVtbl -> SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error) ) 
 
 #define IDeckLinkDeckControl_Play(This,error)	\
-    ( (This)->lpVtbl -> Play(This,error) )
+    ( (This)->lpVtbl -> Play(This,error) ) 
 
 #define IDeckLinkDeckControl_Stop(This,error)	\
-    ( (This)->lpVtbl -> Stop(This,error) )
+    ( (This)->lpVtbl -> Stop(This,error) ) 
 
 #define IDeckLinkDeckControl_TogglePlayStop(This,error)	\
-    ( (This)->lpVtbl -> TogglePlayStop(This,error) )
+    ( (This)->lpVtbl -> TogglePlayStop(This,error) ) 
 
 #define IDeckLinkDeckControl_Eject(This,error)	\
-    ( (This)->lpVtbl -> Eject(This,error) )
+    ( (This)->lpVtbl -> Eject(This,error) ) 
 
 #define IDeckLinkDeckControl_GoToTimecode(This,timecode,error)	\
-    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) )
+    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) ) 
 
 #define IDeckLinkDeckControl_FastForward(This,viewTape,error)	\
-    ( (This)->lpVtbl -> FastForward(This,viewTape,error) )
+    ( (This)->lpVtbl -> FastForward(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_Rewind(This,viewTape,error)	\
-    ( (This)->lpVtbl -> Rewind(This,viewTape,error) )
+    ( (This)->lpVtbl -> Rewind(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_StepForward(This,error)	\
-    ( (This)->lpVtbl -> StepForward(This,error) )
+    ( (This)->lpVtbl -> StepForward(This,error) ) 
 
 #define IDeckLinkDeckControl_StepBack(This,error)	\
-    ( (This)->lpVtbl -> StepBack(This,error) )
+    ( (This)->lpVtbl -> StepBack(This,error) ) 
 
 #define IDeckLinkDeckControl_Jog(This,rate,error)	\
-    ( (This)->lpVtbl -> Jog(This,rate,error) )
+    ( (This)->lpVtbl -> Jog(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_Shuttle(This,rate,error)	\
-    ( (This)->lpVtbl -> Shuttle(This,rate,error) )
+    ( (This)->lpVtbl -> Shuttle(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_GetTimecodeString(This,currentTimeCode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) )
+    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) ) 
 
 #define IDeckLinkDeckControl_GetTimecode(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_GetTimecodeBCD(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_SetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_GetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_SetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_GetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_GetManualExportOffset(This,deckManualExportOffsetFields)	\
-    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) )
+    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_SetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_GetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_StartExport(This,inTimecode,outTimecode,exportModeOps,error)	\
-    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) )
+    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) ) 
 
 #define IDeckLinkDeckControl_StartCapture(This,useVITC,inTimecode,outTimecode,error)	\
-    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) )
+    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) ) 
 
 #define IDeckLinkDeckControl_GetDeviceID(This,deviceId,error)	\
-    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) )
+    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) ) 
 
 #define IDeckLinkDeckControl_Abort(This)	\
-    ( (This)->lpVtbl -> Abort(This) )
+    ( (This)->lpVtbl -> Abort(This) ) 
 
 #define IDeckLinkDeckControl_CrashRecordStart(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStart(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStart(This,error) ) 
 
 #define IDeckLinkDeckControl_CrashRecordStop(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStop(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStop(This,error) ) 
 
 #define IDeckLinkDeckControl_SetCallback(This,callback)	\
-    ( (This)->lpVtbl -> SetCallback(This,callback) )
+    ( (This)->lpVtbl -> SetCallback(This,callback) ) 
 
 #endif /* COBJMACROS */
 
@@ -3520,61 +3299,61 @@ EXTERN_C const IID IID_IDeckLinkDeckControl;
 #define __IBMDStreamingDeviceNotificationCallback_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingDeviceNotificationCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingDeviceNotificationCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("F9531D64-3305-4B29-A387-7F74BB0D0E84")
     IBMDStreamingDeviceNotificationCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceArrived(
+        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceArrived( 
             /* [in] */ IDeckLink *device) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceRemoved(
+        
+        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceRemoved( 
             /* [in] */ IDeckLink *device) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceModeChanged(
+        
+        virtual HRESULT STDMETHODCALLTYPE StreamingDeviceModeChanged( 
             /* [in] */ IDeckLink *device,
             /* [in] */ BMDStreamingDeviceMode mode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingDeviceNotificationCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingDeviceNotificationCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingDeviceNotificationCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingDeviceNotificationCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceArrived )( 
             IBMDStreamingDeviceNotificationCallback * This,
             /* [in] */ IDeckLink *device);
-
-        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceRemoved )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceRemoved )( 
             IBMDStreamingDeviceNotificationCallback * This,
             /* [in] */ IDeckLink *device);
-
-        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceModeChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StreamingDeviceModeChanged )( 
             IBMDStreamingDeviceNotificationCallback * This,
             /* [in] */ IDeckLink *device,
             /* [in] */ BMDStreamingDeviceMode mode);
-
+        
         END_INTERFACE
     } IBMDStreamingDeviceNotificationCallbackVtbl;
 
@@ -3583,29 +3362,29 @@ EXTERN_C const IID IID_IBMDStreamingDeviceNotificationCallback;
         CONST_VTBL struct IBMDStreamingDeviceNotificationCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingDeviceNotificationCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingDeviceNotificationCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingDeviceNotificationCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingDeviceNotificationCallback_StreamingDeviceArrived(This,device)	\
-    ( (This)->lpVtbl -> StreamingDeviceArrived(This,device) )
+    ( (This)->lpVtbl -> StreamingDeviceArrived(This,device) ) 
 
 #define IBMDStreamingDeviceNotificationCallback_StreamingDeviceRemoved(This,device)	\
-    ( (This)->lpVtbl -> StreamingDeviceRemoved(This,device) )
+    ( (This)->lpVtbl -> StreamingDeviceRemoved(This,device) ) 
 
 #define IBMDStreamingDeviceNotificationCallback_StreamingDeviceModeChanged(This,device,mode)	\
-    ( (This)->lpVtbl -> StreamingDeviceModeChanged(This,device,mode) )
+    ( (This)->lpVtbl -> StreamingDeviceModeChanged(This,device,mode) ) 
 
 #endif /* COBJMACROS */
 
@@ -3622,74 +3401,74 @@ EXTERN_C const IID IID_IBMDStreamingDeviceNotificationCallback;
 #define __IBMDStreamingH264InputCallback_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingH264InputCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingH264InputCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("823C475F-55AE-46F9-890C-537CC5CEDCCA")
     IBMDStreamingH264InputCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE H264NALPacketArrived(
+        virtual HRESULT STDMETHODCALLTYPE H264NALPacketArrived( 
             /* [in] */ IBMDStreamingH264NALPacket *nalPacket) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE H264AudioPacketArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE H264AudioPacketArrived( 
             /* [in] */ IBMDStreamingAudioPacket *audioPacket) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE MPEG2TSPacketArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE MPEG2TSPacketArrived( 
             /* [in] */ IBMDStreamingMPEG2TSPacket *tsPacket) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE H264VideoInputConnectorScanningChanged( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE H264VideoInputConnectorChanged( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE H264VideoInputModeChanged( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingH264InputCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingH264InputCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingH264InputCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingH264InputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *H264NALPacketArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *H264NALPacketArrived )( 
             IBMDStreamingH264InputCallback * This,
             /* [in] */ IBMDStreamingH264NALPacket *nalPacket);
-
-        HRESULT ( STDMETHODCALLTYPE *H264AudioPacketArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *H264AudioPacketArrived )( 
             IBMDStreamingH264InputCallback * This,
             /* [in] */ IBMDStreamingAudioPacket *audioPacket);
-
-        HRESULT ( STDMETHODCALLTYPE *MPEG2TSPacketArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *MPEG2TSPacketArrived )( 
             IBMDStreamingH264InputCallback * This,
             /* [in] */ IBMDStreamingMPEG2TSPacket *tsPacket);
-
-        HRESULT ( STDMETHODCALLTYPE *H264VideoInputConnectorScanningChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *H264VideoInputConnectorScanningChanged )( 
             IBMDStreamingH264InputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *H264VideoInputConnectorChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *H264VideoInputConnectorChanged )( 
             IBMDStreamingH264InputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *H264VideoInputModeChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *H264VideoInputModeChanged )( 
             IBMDStreamingH264InputCallback * This);
-
+        
         END_INTERFACE
     } IBMDStreamingH264InputCallbackVtbl;
 
@@ -3698,38 +3477,38 @@ EXTERN_C const IID IID_IBMDStreamingH264InputCallback;
         CONST_VTBL struct IBMDStreamingH264InputCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingH264InputCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingH264InputCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingH264InputCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingH264InputCallback_H264NALPacketArrived(This,nalPacket)	\
-    ( (This)->lpVtbl -> H264NALPacketArrived(This,nalPacket) )
+    ( (This)->lpVtbl -> H264NALPacketArrived(This,nalPacket) ) 
 
 #define IBMDStreamingH264InputCallback_H264AudioPacketArrived(This,audioPacket)	\
-    ( (This)->lpVtbl -> H264AudioPacketArrived(This,audioPacket) )
+    ( (This)->lpVtbl -> H264AudioPacketArrived(This,audioPacket) ) 
 
 #define IBMDStreamingH264InputCallback_MPEG2TSPacketArrived(This,tsPacket)	\
-    ( (This)->lpVtbl -> MPEG2TSPacketArrived(This,tsPacket) )
+    ( (This)->lpVtbl -> MPEG2TSPacketArrived(This,tsPacket) ) 
 
 #define IBMDStreamingH264InputCallback_H264VideoInputConnectorScanningChanged(This)	\
-    ( (This)->lpVtbl -> H264VideoInputConnectorScanningChanged(This) )
+    ( (This)->lpVtbl -> H264VideoInputConnectorScanningChanged(This) ) 
 
 #define IBMDStreamingH264InputCallback_H264VideoInputConnectorChanged(This)	\
-    ( (This)->lpVtbl -> H264VideoInputConnectorChanged(This) )
+    ( (This)->lpVtbl -> H264VideoInputConnectorChanged(This) ) 
 
 #define IBMDStreamingH264InputCallback_H264VideoInputModeChanged(This)	\
-    ( (This)->lpVtbl -> H264VideoInputModeChanged(This) )
+    ( (This)->lpVtbl -> H264VideoInputModeChanged(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -3746,50 +3525,50 @@ EXTERN_C const IID IID_IBMDStreamingH264InputCallback;
 #define __IBMDStreamingDiscovery_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingDiscovery */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingDiscovery;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("2C837444-F989-4D87-901A-47C8A36D096D")
     IBMDStreamingDiscovery : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE InstallDeviceNotifications(
+        virtual HRESULT STDMETHODCALLTYPE InstallDeviceNotifications( 
             /* [in] */ IBMDStreamingDeviceNotificationCallback *theCallback) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE UninstallDeviceNotifications( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingDiscoveryVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingDiscovery * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingDiscovery * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingDiscovery * This);
-
-        HRESULT ( STDMETHODCALLTYPE *InstallDeviceNotifications )(
+        
+        HRESULT ( STDMETHODCALLTYPE *InstallDeviceNotifications )( 
             IBMDStreamingDiscovery * This,
             /* [in] */ IBMDStreamingDeviceNotificationCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *UninstallDeviceNotifications )(
+        
+        HRESULT ( STDMETHODCALLTYPE *UninstallDeviceNotifications )( 
             IBMDStreamingDiscovery * This);
-
+        
         END_INTERFACE
     } IBMDStreamingDiscoveryVtbl;
 
@@ -3798,26 +3577,26 @@ EXTERN_C const IID IID_IBMDStreamingDiscovery;
         CONST_VTBL struct IBMDStreamingDiscoveryVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingDiscovery_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingDiscovery_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingDiscovery_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingDiscovery_InstallDeviceNotifications(This,theCallback)	\
-    ( (This)->lpVtbl -> InstallDeviceNotifications(This,theCallback) )
+    ( (This)->lpVtbl -> InstallDeviceNotifications(This,theCallback) ) 
 
 #define IBMDStreamingDiscovery_UninstallDeviceNotifications(This)	\
-    ( (This)->lpVtbl -> UninstallDeviceNotifications(This) )
+    ( (This)->lpVtbl -> UninstallDeviceNotifications(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -3834,123 +3613,123 @@ EXTERN_C const IID IID_IBMDStreamingDiscovery;
 #define __IBMDStreamingVideoEncodingMode_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingVideoEncodingMode */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingVideoEncodingMode;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("1AB8035B-CD13-458D-B6DF-5E8F7C2141D9")
     IBMDStreamingVideoEncodingMode : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetName(
+        virtual HRESULT STDMETHODCALLTYPE GetName( 
             /* [out] */ BSTR *name) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetPresetID( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetSourcePositionX( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetSourcePositionY( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetSourceWidth( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetSourceHeight( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetDestWidth( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetDestHeight( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BSTR *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateMutableVideoEncodingMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateMutableVideoEncodingMode( 
             /* [out] */ IBMDStreamingMutableVideoEncodingMode **newEncodingMode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingVideoEncodingModeVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetName )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [out] */ BSTR *name);
-
-        unsigned int ( STDMETHODCALLTYPE *GetPresetID )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetPresetID )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionX )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionX )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionY )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionY )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourceWidth )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourceWidth )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourceHeight )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourceHeight )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetDestWidth )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetDestWidth )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetDestHeight )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetDestHeight )( 
             IBMDStreamingVideoEncodingMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateMutableVideoEncodingMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateMutableVideoEncodingMode )( 
             IBMDStreamingVideoEncodingMode * This,
             /* [out] */ IBMDStreamingMutableVideoEncodingMode **newEncodingMode);
-
+        
         END_INTERFACE
     } IBMDStreamingVideoEncodingModeVtbl;
 
@@ -3959,59 +3738,59 @@ EXTERN_C const IID IID_IBMDStreamingVideoEncodingMode;
         CONST_VTBL struct IBMDStreamingVideoEncodingModeVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingVideoEncodingMode_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingVideoEncodingMode_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingVideoEncodingMode_GetName(This,name)	\
-    ( (This)->lpVtbl -> GetName(This,name) )
+    ( (This)->lpVtbl -> GetName(This,name) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetPresetID(This)	\
-    ( (This)->lpVtbl -> GetPresetID(This) )
+    ( (This)->lpVtbl -> GetPresetID(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetSourcePositionX(This)	\
-    ( (This)->lpVtbl -> GetSourcePositionX(This) )
+    ( (This)->lpVtbl -> GetSourcePositionX(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetSourcePositionY(This)	\
-    ( (This)->lpVtbl -> GetSourcePositionY(This) )
+    ( (This)->lpVtbl -> GetSourcePositionY(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetSourceWidth(This)	\
-    ( (This)->lpVtbl -> GetSourceWidth(This) )
+    ( (This)->lpVtbl -> GetSourceWidth(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetSourceHeight(This)	\
-    ( (This)->lpVtbl -> GetSourceHeight(This) )
+    ( (This)->lpVtbl -> GetSourceHeight(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetDestWidth(This)	\
-    ( (This)->lpVtbl -> GetDestWidth(This) )
+    ( (This)->lpVtbl -> GetDestWidth(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetDestHeight(This)	\
-    ( (This)->lpVtbl -> GetDestHeight(This) )
+    ( (This)->lpVtbl -> GetDestHeight(This) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IBMDStreamingVideoEncodingMode_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IBMDStreamingVideoEncodingMode_CreateMutableVideoEncodingMode(This,newEncodingMode)	\
-    ( (This)->lpVtbl -> CreateMutableVideoEncodingMode(This,newEncodingMode) )
+    ( (This)->lpVtbl -> CreateMutableVideoEncodingMode(This,newEncodingMode) ) 
 
 #endif /* COBJMACROS */
 
@@ -4028,145 +3807,145 @@ EXTERN_C const IID IID_IBMDStreamingVideoEncodingMode;
 #define __IBMDStreamingMutableVideoEncodingMode_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingMutableVideoEncodingMode */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingMutableVideoEncodingMode;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("19BF7D90-1E0A-400D-B2C6-FFC4E78AD49D")
     IBMDStreamingMutableVideoEncodingMode : public IBMDStreamingVideoEncodingMode
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetSourceRect(
+        virtual HRESULT STDMETHODCALLTYPE SetSourceRect( 
             /* [in] */ unsigned int posX,
             /* [in] */ unsigned int posY,
             /* [in] */ unsigned int width,
             /* [in] */ unsigned int height) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetDestSize(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetDestSize( 
             /* [in] */ unsigned int width,
             /* [in] */ unsigned int height) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ BSTR value) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingMutableVideoEncodingModeVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetName )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [out] */ BSTR *name);
-
-        unsigned int ( STDMETHODCALLTYPE *GetPresetID )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetPresetID )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionX )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionX )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionY )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourcePositionY )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourceWidth )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourceWidth )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetSourceHeight )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetSourceHeight )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetDestWidth )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetDestWidth )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetDestHeight )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetDestHeight )( 
             IBMDStreamingMutableVideoEncodingMode * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateMutableVideoEncodingMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateMutableVideoEncodingMode )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [out] */ IBMDStreamingMutableVideoEncodingMode **newEncodingMode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetSourceRect )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetSourceRect )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ unsigned int posX,
             /* [in] */ unsigned int posY,
             /* [in] */ unsigned int width,
             /* [in] */ unsigned int height);
-
-        HRESULT ( STDMETHODCALLTYPE *SetDestSize )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetDestSize )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ unsigned int width,
             /* [in] */ unsigned int height);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IBMDStreamingMutableVideoEncodingMode * This,
             /* [in] */ BMDStreamingEncodingModePropertyID cfgID,
             /* [in] */ BSTR value);
-
+        
         END_INTERFACE
     } IBMDStreamingMutableVideoEncodingModeVtbl;
 
@@ -4175,78 +3954,78 @@ EXTERN_C const IID IID_IBMDStreamingMutableVideoEncodingMode;
         CONST_VTBL struct IBMDStreamingMutableVideoEncodingModeVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingMutableVideoEncodingMode_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetName(This,name)	\
-    ( (This)->lpVtbl -> GetName(This,name) )
+    ( (This)->lpVtbl -> GetName(This,name) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetPresetID(This)	\
-    ( (This)->lpVtbl -> GetPresetID(This) )
+    ( (This)->lpVtbl -> GetPresetID(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetSourcePositionX(This)	\
-    ( (This)->lpVtbl -> GetSourcePositionX(This) )
+    ( (This)->lpVtbl -> GetSourcePositionX(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetSourcePositionY(This)	\
-    ( (This)->lpVtbl -> GetSourcePositionY(This) )
+    ( (This)->lpVtbl -> GetSourcePositionY(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetSourceWidth(This)	\
-    ( (This)->lpVtbl -> GetSourceWidth(This) )
+    ( (This)->lpVtbl -> GetSourceWidth(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetSourceHeight(This)	\
-    ( (This)->lpVtbl -> GetSourceHeight(This) )
+    ( (This)->lpVtbl -> GetSourceHeight(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetDestWidth(This)	\
-    ( (This)->lpVtbl -> GetDestWidth(This) )
+    ( (This)->lpVtbl -> GetDestWidth(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetDestHeight(This)	\
-    ( (This)->lpVtbl -> GetDestHeight(This) )
+    ( (This)->lpVtbl -> GetDestHeight(This) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_CreateMutableVideoEncodingMode(This,newEncodingMode)	\
-    ( (This)->lpVtbl -> CreateMutableVideoEncodingMode(This,newEncodingMode) )
+    ( (This)->lpVtbl -> CreateMutableVideoEncodingMode(This,newEncodingMode) ) 
 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetSourceRect(This,posX,posY,width,height)	\
-    ( (This)->lpVtbl -> SetSourceRect(This,posX,posY,width,height) )
+    ( (This)->lpVtbl -> SetSourceRect(This,posX,posY,width,height) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetDestSize(This,width,height)	\
-    ( (This)->lpVtbl -> SetDestSize(This,width,height) )
+    ( (This)->lpVtbl -> SetDestSize(This,width,height) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IBMDStreamingMutableVideoEncodingMode_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #endif /* COBJMACROS */
 
@@ -4263,45 +4042,45 @@ EXTERN_C const IID IID_IBMDStreamingMutableVideoEncodingMode;
 #define __IBMDStreamingVideoEncodingModePresetIterator_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingVideoEncodingModePresetIterator */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingVideoEncodingModePresetIterator;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("7AC731A3-C950-4AD0-804A-8377AA51C6C4")
     IBMDStreamingVideoEncodingModePresetIterator : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IBMDStreamingVideoEncodingMode **videoEncodingMode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingVideoEncodingModePresetIteratorVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingVideoEncodingModePresetIterator * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingVideoEncodingModePresetIterator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingVideoEncodingModePresetIterator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IBMDStreamingVideoEncodingModePresetIterator * This,
             /* [out] */ IBMDStreamingVideoEncodingMode **videoEncodingMode);
-
+        
         END_INTERFACE
     } IBMDStreamingVideoEncodingModePresetIteratorVtbl;
 
@@ -4310,23 +4089,23 @@ EXTERN_C const IID IID_IBMDStreamingVideoEncodingModePresetIterator;
         CONST_VTBL struct IBMDStreamingVideoEncodingModePresetIteratorVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingVideoEncodingModePresetIterator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingVideoEncodingModePresetIterator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingVideoEncodingModePresetIterator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingVideoEncodingModePresetIterator_Next(This,videoEncodingMode)	\
-    ( (This)->lpVtbl -> Next(This,videoEncodingMode) )
+    ( (This)->lpVtbl -> Next(This,videoEncodingMode) ) 
 
 #endif /* COBJMACROS */
 
@@ -4343,121 +4122,121 @@ EXTERN_C const IID IID_IBMDStreamingVideoEncodingModePresetIterator;
 #define __IBMDStreamingDeviceInput_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingDeviceInput */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingDeviceInput;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("24B6B6EC-1727-44BB-9818-34FF086ACF98")
     IBMDStreamingDeviceInput : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoInputMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoInputMode( 
             /* [in] */ BMDDisplayMode inputMode,
             /* [out] */ BOOL *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoInputModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoInputModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoInputMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoInputMode( 
             /* [in] */ BMDDisplayMode inputMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCurrentDetectedVideoInputMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCurrentDetectedVideoInputMode( 
             /* [out] */ BMDDisplayMode *detectedMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoEncodingMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoEncodingMode( 
             /* [out] */ IBMDStreamingVideoEncodingMode **encodingMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoEncodingModePresetIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoEncodingModePresetIterator( 
             /* [in] */ BMDDisplayMode inputMode,
             /* [out] */ IBMDStreamingVideoEncodingModePresetIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoEncodingMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoEncodingMode( 
             /* [in] */ BMDDisplayMode inputMode,
             /* [in] */ IBMDStreamingVideoEncodingMode *encodingMode,
             /* [out] */ BMDStreamingEncodingSupport *result,
             /* [out] */ IBMDStreamingVideoEncodingMode **changedEncodingMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoEncodingMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoEncodingMode( 
             /* [in] */ IBMDStreamingVideoEncodingMode *encodingMode) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartCapture( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopCapture( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IUnknown *theCallback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingDeviceInputVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingDeviceInput * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingDeviceInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoInputMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoInputMode )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ BMDDisplayMode inputMode,
             /* [out] */ BOOL *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoInputModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoInputModeIterator )( 
             IBMDStreamingDeviceInput * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoInputMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoInputMode )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ BMDDisplayMode inputMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCurrentDetectedVideoInputMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCurrentDetectedVideoInputMode )( 
             IBMDStreamingDeviceInput * This,
             /* [out] */ BMDDisplayMode *detectedMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoEncodingMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoEncodingMode )( 
             IBMDStreamingDeviceInput * This,
             /* [out] */ IBMDStreamingVideoEncodingMode **encodingMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoEncodingModePresetIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoEncodingModePresetIterator )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ BMDDisplayMode inputMode,
             /* [out] */ IBMDStreamingVideoEncodingModePresetIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoEncodingMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoEncodingMode )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ BMDDisplayMode inputMode,
             /* [in] */ IBMDStreamingVideoEncodingMode *encodingMode,
             /* [out] */ BMDStreamingEncodingSupport *result,
             /* [out] */ IBMDStreamingVideoEncodingMode **changedEncodingMode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoEncodingMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoEncodingMode )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ IBMDStreamingVideoEncodingMode *encodingMode);
-
-        HRESULT ( STDMETHODCALLTYPE *StartCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
             IBMDStreamingDeviceInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
             IBMDStreamingDeviceInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IBMDStreamingDeviceInput * This,
             /* [in] */ IUnknown *theCallback);
-
+        
         END_INTERFACE
     } IBMDStreamingDeviceInputVtbl;
 
@@ -4466,53 +4245,53 @@ EXTERN_C const IID IID_IBMDStreamingDeviceInput;
         CONST_VTBL struct IBMDStreamingDeviceInputVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingDeviceInput_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingDeviceInput_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingDeviceInput_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingDeviceInput_DoesSupportVideoInputMode(This,inputMode,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoInputMode(This,inputMode,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoInputMode(This,inputMode,result) ) 
 
 #define IBMDStreamingDeviceInput_GetVideoInputModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetVideoInputModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetVideoInputModeIterator(This,iterator) ) 
 
 #define IBMDStreamingDeviceInput_SetVideoInputMode(This,inputMode)	\
-    ( (This)->lpVtbl -> SetVideoInputMode(This,inputMode) )
+    ( (This)->lpVtbl -> SetVideoInputMode(This,inputMode) ) 
 
 #define IBMDStreamingDeviceInput_GetCurrentDetectedVideoInputMode(This,detectedMode)	\
-    ( (This)->lpVtbl -> GetCurrentDetectedVideoInputMode(This,detectedMode) )
+    ( (This)->lpVtbl -> GetCurrentDetectedVideoInputMode(This,detectedMode) ) 
 
 #define IBMDStreamingDeviceInput_GetVideoEncodingMode(This,encodingMode)	\
-    ( (This)->lpVtbl -> GetVideoEncodingMode(This,encodingMode) )
+    ( (This)->lpVtbl -> GetVideoEncodingMode(This,encodingMode) ) 
 
 #define IBMDStreamingDeviceInput_GetVideoEncodingModePresetIterator(This,inputMode,iterator)	\
-    ( (This)->lpVtbl -> GetVideoEncodingModePresetIterator(This,inputMode,iterator) )
+    ( (This)->lpVtbl -> GetVideoEncodingModePresetIterator(This,inputMode,iterator) ) 
 
 #define IBMDStreamingDeviceInput_DoesSupportVideoEncodingMode(This,inputMode,encodingMode,result,changedEncodingMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoEncodingMode(This,inputMode,encodingMode,result,changedEncodingMode) )
+    ( (This)->lpVtbl -> DoesSupportVideoEncodingMode(This,inputMode,encodingMode,result,changedEncodingMode) ) 
 
 #define IBMDStreamingDeviceInput_SetVideoEncodingMode(This,encodingMode)	\
-    ( (This)->lpVtbl -> SetVideoEncodingMode(This,encodingMode) )
+    ( (This)->lpVtbl -> SetVideoEncodingMode(This,encodingMode) ) 
 
 #define IBMDStreamingDeviceInput_StartCapture(This)	\
-    ( (This)->lpVtbl -> StartCapture(This) )
+    ( (This)->lpVtbl -> StartCapture(This) ) 
 
 #define IBMDStreamingDeviceInput_StopCapture(This)	\
-    ( (This)->lpVtbl -> StopCapture(This) )
+    ( (This)->lpVtbl -> StopCapture(This) ) 
 
 #define IBMDStreamingDeviceInput_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #endif /* COBJMACROS */
 
@@ -4529,73 +4308,73 @@ EXTERN_C const IID IID_IBMDStreamingDeviceInput;
 #define __IBMDStreamingH264NALPacket_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingH264NALPacket */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingH264NALPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("E260E955-14BE-4395-9775-9F02CC0A9D89")
     IBMDStreamingH264NALPacket : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetPayloadSize( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytesWithSizePrefix(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytesWithSizePrefix( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayTime( 
             /* [in] */ ULONGLONG requestedTimeScale,
             /* [out] */ ULONGLONG *displayTime) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPacketIndex(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPacketIndex( 
             /* [out] */ unsigned int *packetIndex) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingH264NALPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingH264NALPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingH264NALPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingH264NALPacket * This);
-
-        long ( STDMETHODCALLTYPE *GetPayloadSize )(
+        
+        long ( STDMETHODCALLTYPE *GetPayloadSize )( 
             IBMDStreamingH264NALPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IBMDStreamingH264NALPacket * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytesWithSizePrefix )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytesWithSizePrefix )( 
             IBMDStreamingH264NALPacket * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayTime )( 
             IBMDStreamingH264NALPacket * This,
             /* [in] */ ULONGLONG requestedTimeScale,
             /* [out] */ ULONGLONG *displayTime);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPacketIndex )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPacketIndex )( 
             IBMDStreamingH264NALPacket * This,
             /* [out] */ unsigned int *packetIndex);
-
+        
         END_INTERFACE
     } IBMDStreamingH264NALPacketVtbl;
 
@@ -4604,35 +4383,35 @@ EXTERN_C const IID IID_IBMDStreamingH264NALPacket;
         CONST_VTBL struct IBMDStreamingH264NALPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingH264NALPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingH264NALPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingH264NALPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingH264NALPacket_GetPayloadSize(This)	\
-    ( (This)->lpVtbl -> GetPayloadSize(This) )
+    ( (This)->lpVtbl -> GetPayloadSize(This) ) 
 
 #define IBMDStreamingH264NALPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IBMDStreamingH264NALPacket_GetBytesWithSizePrefix(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytesWithSizePrefix(This,buffer) )
+    ( (This)->lpVtbl -> GetBytesWithSizePrefix(This,buffer) ) 
 
 #define IBMDStreamingH264NALPacket_GetDisplayTime(This,requestedTimeScale,displayTime)	\
-    ( (This)->lpVtbl -> GetDisplayTime(This,requestedTimeScale,displayTime) )
+    ( (This)->lpVtbl -> GetDisplayTime(This,requestedTimeScale,displayTime) ) 
 
 #define IBMDStreamingH264NALPacket_GetPacketIndex(This,packetIndex)	\
-    ( (This)->lpVtbl -> GetPacketIndex(This,packetIndex) )
+    ( (This)->lpVtbl -> GetPacketIndex(This,packetIndex) ) 
 
 #endif /* COBJMACROS */
 
@@ -4649,71 +4428,71 @@ EXTERN_C const IID IID_IBMDStreamingH264NALPacket;
 #define __IBMDStreamingAudioPacket_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingAudioPacket */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingAudioPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("D9EB5902-1AD2-43F4-9E2C-3CFA50B5EE19")
     IBMDStreamingAudioPacket : public IUnknown
     {
     public:
         virtual BMDStreamingAudioCodec STDMETHODCALLTYPE GetCodec( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetPayloadSize( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPlayTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPlayTime( 
             /* [in] */ ULONGLONG requestedTimeScale,
             /* [out] */ ULONGLONG *playTime) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPacketIndex(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPacketIndex( 
             /* [out] */ unsigned int *packetIndex) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingAudioPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingAudioPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingAudioPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingAudioPacket * This);
-
-        BMDStreamingAudioCodec ( STDMETHODCALLTYPE *GetCodec )(
+        
+        BMDStreamingAudioCodec ( STDMETHODCALLTYPE *GetCodec )( 
             IBMDStreamingAudioPacket * This);
-
-        long ( STDMETHODCALLTYPE *GetPayloadSize )(
+        
+        long ( STDMETHODCALLTYPE *GetPayloadSize )( 
             IBMDStreamingAudioPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IBMDStreamingAudioPacket * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPlayTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPlayTime )( 
             IBMDStreamingAudioPacket * This,
             /* [in] */ ULONGLONG requestedTimeScale,
             /* [out] */ ULONGLONG *playTime);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPacketIndex )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPacketIndex )( 
             IBMDStreamingAudioPacket * This,
             /* [out] */ unsigned int *packetIndex);
-
+        
         END_INTERFACE
     } IBMDStreamingAudioPacketVtbl;
 
@@ -4722,35 +4501,35 @@ EXTERN_C const IID IID_IBMDStreamingAudioPacket;
         CONST_VTBL struct IBMDStreamingAudioPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingAudioPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingAudioPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingAudioPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingAudioPacket_GetCodec(This)	\
-    ( (This)->lpVtbl -> GetCodec(This) )
+    ( (This)->lpVtbl -> GetCodec(This) ) 
 
 #define IBMDStreamingAudioPacket_GetPayloadSize(This)	\
-    ( (This)->lpVtbl -> GetPayloadSize(This) )
+    ( (This)->lpVtbl -> GetPayloadSize(This) ) 
 
 #define IBMDStreamingAudioPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IBMDStreamingAudioPacket_GetPlayTime(This,requestedTimeScale,playTime)	\
-    ( (This)->lpVtbl -> GetPlayTime(This,requestedTimeScale,playTime) )
+    ( (This)->lpVtbl -> GetPlayTime(This,requestedTimeScale,playTime) ) 
 
 #define IBMDStreamingAudioPacket_GetPacketIndex(This,packetIndex)	\
-    ( (This)->lpVtbl -> GetPacketIndex(This,packetIndex) )
+    ( (This)->lpVtbl -> GetPacketIndex(This,packetIndex) ) 
 
 #endif /* COBJMACROS */
 
@@ -4767,50 +4546,50 @@ EXTERN_C const IID IID_IBMDStreamingAudioPacket;
 #define __IBMDStreamingMPEG2TSPacket_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingMPEG2TSPacket */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingMPEG2TSPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("91810D1C-4FB3-4AAA-AE56-FA301D3DFA4C")
     IBMDStreamingMPEG2TSPacket : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetPayloadSize( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingMPEG2TSPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingMPEG2TSPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingMPEG2TSPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingMPEG2TSPacket * This);
-
-        long ( STDMETHODCALLTYPE *GetPayloadSize )(
+        
+        long ( STDMETHODCALLTYPE *GetPayloadSize )( 
             IBMDStreamingMPEG2TSPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IBMDStreamingMPEG2TSPacket * This,
             /* [out] */ void **buffer);
-
+        
         END_INTERFACE
     } IBMDStreamingMPEG2TSPacketVtbl;
 
@@ -4819,26 +4598,26 @@ EXTERN_C const IID IID_IBMDStreamingMPEG2TSPacket;
         CONST_VTBL struct IBMDStreamingMPEG2TSPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingMPEG2TSPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingMPEG2TSPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingMPEG2TSPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingMPEG2TSPacket_GetPayloadSize(This)	\
-    ( (This)->lpVtbl -> GetPayloadSize(This) )
+    ( (This)->lpVtbl -> GetPayloadSize(This) ) 
 
 #define IBMDStreamingMPEG2TSPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #endif /* COBJMACROS */
 
@@ -4855,65 +4634,65 @@ EXTERN_C const IID IID_IBMDStreamingMPEG2TSPacket;
 #define __IBMDStreamingH264NALParser_INTERFACE_DEFINED__
 
 /* interface IBMDStreamingH264NALParser */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IBMDStreamingH264NALParser;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("5867F18C-5BFA-4CCC-B2A7-9DFD140417D2")
     IBMDStreamingH264NALParser : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE IsNALSequenceParameterSet(
+        virtual HRESULT STDMETHODCALLTYPE IsNALSequenceParameterSet( 
             /* [in] */ IBMDStreamingH264NALPacket *nal) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsNALPictureParameterSet(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsNALPictureParameterSet( 
             /* [in] */ IBMDStreamingH264NALPacket *nal) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetProfileAndLevelFromSPS(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetProfileAndLevelFromSPS( 
             /* [in] */ IBMDStreamingH264NALPacket *nal,
             /* [out] */ unsigned int *profileIdc,
             /* [out] */ unsigned int *profileCompatability,
             /* [out] */ unsigned int *levelIdc) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IBMDStreamingH264NALParserVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IBMDStreamingH264NALParser * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IBMDStreamingH264NALParser * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IBMDStreamingH264NALParser * This);
-
-        HRESULT ( STDMETHODCALLTYPE *IsNALSequenceParameterSet )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsNALSequenceParameterSet )( 
             IBMDStreamingH264NALParser * This,
             /* [in] */ IBMDStreamingH264NALPacket *nal);
-
-        HRESULT ( STDMETHODCALLTYPE *IsNALPictureParameterSet )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsNALPictureParameterSet )( 
             IBMDStreamingH264NALParser * This,
             /* [in] */ IBMDStreamingH264NALPacket *nal);
-
-        HRESULT ( STDMETHODCALLTYPE *GetProfileAndLevelFromSPS )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetProfileAndLevelFromSPS )( 
             IBMDStreamingH264NALParser * This,
             /* [in] */ IBMDStreamingH264NALPacket *nal,
             /* [out] */ unsigned int *profileIdc,
             /* [out] */ unsigned int *profileCompatability,
             /* [out] */ unsigned int *levelIdc);
-
+        
         END_INTERFACE
     } IBMDStreamingH264NALParserVtbl;
 
@@ -4922,29 +4701,29 @@ EXTERN_C const IID IID_IBMDStreamingH264NALParser;
         CONST_VTBL struct IBMDStreamingH264NALParserVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IBMDStreamingH264NALParser_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IBMDStreamingH264NALParser_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IBMDStreamingH264NALParser_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IBMDStreamingH264NALParser_IsNALSequenceParameterSet(This,nal)	\
-    ( (This)->lpVtbl -> IsNALSequenceParameterSet(This,nal) )
+    ( (This)->lpVtbl -> IsNALSequenceParameterSet(This,nal) ) 
 
 #define IBMDStreamingH264NALParser_IsNALPictureParameterSet(This,nal)	\
-    ( (This)->lpVtbl -> IsNALPictureParameterSet(This,nal) )
+    ( (This)->lpVtbl -> IsNALPictureParameterSet(This,nal) ) 
 
 #define IBMDStreamingH264NALParser_GetProfileAndLevelFromSPS(This,nal,profileIdc,profileCompatability,levelIdc)	\
-    ( (This)->lpVtbl -> GetProfileAndLevelFromSPS(This,nal,profileIdc,profileCompatability,levelIdc) )
+    ( (This)->lpVtbl -> GetProfileAndLevelFromSPS(This,nal,profileIdc,profileCompatability,levelIdc) ) 
 
 #endif /* COBJMACROS */
 
@@ -4977,52 +4756,52 @@ CBMDStreamingH264NALParser;
 #define __IDeckLinkVideoOutputCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoOutputCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoOutputCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("20AA5225-1958-47CB-820B-80A8D521A6EE")
     IDeckLinkVideoOutputCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted(
+        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted( 
             /* [in] */ IDeckLinkVideoFrame *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE ScheduledPlaybackHasStopped( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoOutputCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoOutputCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoOutputCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoOutputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )( 
             IDeckLinkVideoOutputCallback * This,
             /* [in] */ IDeckLinkVideoFrame *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduledPlaybackHasStopped )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduledPlaybackHasStopped )( 
             IDeckLinkVideoOutputCallback * This);
-
+        
         END_INTERFACE
     } IDeckLinkVideoOutputCallbackVtbl;
 
@@ -5031,26 +4810,26 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback;
         CONST_VTBL struct IDeckLinkVideoOutputCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoOutputCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoOutputCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoOutputCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoOutputCallback_ScheduledFrameCompleted(This,completedFrame,result)	\
-    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) )
+    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) ) 
 
 #define IDeckLinkVideoOutputCallback_ScheduledPlaybackHasStopped(This)	\
-    ( (This)->lpVtbl -> ScheduledPlaybackHasStopped(This) )
+    ( (This)->lpVtbl -> ScheduledPlaybackHasStopped(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -5067,58 +4846,58 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback;
 #define __IDeckLinkInputCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInputCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInputCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("DD04E5EC-7415-42AB-AE4A-E80C4DFC044A")
     IDeckLinkInputCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged(
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged( 
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived( 
             /* [in] */ IDeckLinkVideoInputFrame *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInputCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInputCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInputCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )( 
             IDeckLinkInputCallback * This,
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )( 
             IDeckLinkInputCallback * This,
             /* [in] */ IDeckLinkVideoInputFrame *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket);
-
+        
         END_INTERFACE
     } IDeckLinkInputCallbackVtbl;
 
@@ -5127,26 +4906,26 @@ EXTERN_C const IID IID_IDeckLinkInputCallback;
         CONST_VTBL struct IDeckLinkInputCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInputCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInputCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInputCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInputCallback_VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags)	\
-    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) )
+    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) ) 
 
 #define IDeckLinkInputCallback_VideoInputFrameArrived(This,videoFrame,audioPacket)	\
-    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) )
+    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) ) 
 
 #endif /* COBJMACROS */
 
@@ -5163,63 +4942,63 @@ EXTERN_C const IID IID_IDeckLinkInputCallback;
 #define __IDeckLinkEncoderInputCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderInputCallback */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderInputCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("ACF13E61-F4A0-4974-A6A7-59AFF6268B31")
     IDeckLinkEncoderInputCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE VideoInputSignalChanged(
+        virtual HRESULT STDMETHODCALLTYPE VideoInputSignalChanged( 
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VideoPacketArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE VideoPacketArrived( 
             /* [in] */ IDeckLinkEncoderVideoPacket *videoPacket) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE AudioPacketArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE AudioPacketArrived( 
             /* [in] */ IDeckLinkEncoderAudioPacket *audioPacket) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderInputCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderInputCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderInputCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderInputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputSignalChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputSignalChanged )( 
             IDeckLinkEncoderInputCallback * This,
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoPacketArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoPacketArrived )( 
             IDeckLinkEncoderInputCallback * This,
             /* [in] */ IDeckLinkEncoderVideoPacket *videoPacket);
-
-        HRESULT ( STDMETHODCALLTYPE *AudioPacketArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *AudioPacketArrived )( 
             IDeckLinkEncoderInputCallback * This,
             /* [in] */ IDeckLinkEncoderAudioPacket *audioPacket);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderInputCallbackVtbl;
 
@@ -5228,29 +5007,29 @@ EXTERN_C const IID IID_IDeckLinkEncoderInputCallback;
         CONST_VTBL struct IDeckLinkEncoderInputCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderInputCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderInputCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderInputCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderInputCallback_VideoInputSignalChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags)	\
-    ( (This)->lpVtbl -> VideoInputSignalChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) )
+    ( (This)->lpVtbl -> VideoInputSignalChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) ) 
 
 #define IDeckLinkEncoderInputCallback_VideoPacketArrived(This,videoPacket)	\
-    ( (This)->lpVtbl -> VideoPacketArrived(This,videoPacket) )
+    ( (This)->lpVtbl -> VideoPacketArrived(This,videoPacket) ) 
 
 #define IDeckLinkEncoderInputCallback_AudioPacketArrived(This,audioPacket)	\
-    ( (This)->lpVtbl -> AudioPacketArrived(This,audioPacket) )
+    ( (This)->lpVtbl -> AudioPacketArrived(This,audioPacket) ) 
 
 #endif /* COBJMACROS */
 
@@ -5267,64 +5046,64 @@ EXTERN_C const IID IID_IDeckLinkEncoderInputCallback;
 #define __IDeckLinkMemoryAllocator_INTERFACE_DEFINED__
 
 /* interface IDeckLinkMemoryAllocator */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkMemoryAllocator;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("B36EB6E7-9D29-4AA8-92EF-843B87A289E8")
     IDeckLinkMemoryAllocator : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE AllocateBuffer(
+        virtual HRESULT STDMETHODCALLTYPE AllocateBuffer( 
             /* [in] */ unsigned int bufferSize,
             /* [out] */ void **allocatedBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer(
+        
+        virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer( 
             /* [in] */ void *buffer) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE Commit( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE Decommit( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkMemoryAllocatorVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkMemoryAllocator * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkMemoryAllocator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkMemoryAllocator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *AllocateBuffer )(
+        
+        HRESULT ( STDMETHODCALLTYPE *AllocateBuffer )( 
             IDeckLinkMemoryAllocator * This,
             /* [in] */ unsigned int bufferSize,
             /* [out] */ void **allocatedBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( 
             IDeckLinkMemoryAllocator * This,
             /* [in] */ void *buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *Commit )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Commit )( 
             IDeckLinkMemoryAllocator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Decommit )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Decommit )( 
             IDeckLinkMemoryAllocator * This);
-
+        
         END_INTERFACE
     } IDeckLinkMemoryAllocatorVtbl;
 
@@ -5333,32 +5112,32 @@ EXTERN_C const IID IID_IDeckLinkMemoryAllocator;
         CONST_VTBL struct IDeckLinkMemoryAllocatorVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkMemoryAllocator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkMemoryAllocator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkMemoryAllocator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkMemoryAllocator_AllocateBuffer(This,bufferSize,allocatedBuffer)	\
-    ( (This)->lpVtbl -> AllocateBuffer(This,bufferSize,allocatedBuffer) )
+    ( (This)->lpVtbl -> AllocateBuffer(This,bufferSize,allocatedBuffer) ) 
 
 #define IDeckLinkMemoryAllocator_ReleaseBuffer(This,buffer)	\
-    ( (This)->lpVtbl -> ReleaseBuffer(This,buffer) )
+    ( (This)->lpVtbl -> ReleaseBuffer(This,buffer) ) 
 
 #define IDeckLinkMemoryAllocator_Commit(This)	\
-    ( (This)->lpVtbl -> Commit(This) )
+    ( (This)->lpVtbl -> Commit(This) ) 
 
 #define IDeckLinkMemoryAllocator_Decommit(This)	\
-    ( (This)->lpVtbl -> Decommit(This) )
+    ( (This)->lpVtbl -> Decommit(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -5375,45 +5154,45 @@ EXTERN_C const IID IID_IDeckLinkMemoryAllocator;
 #define __IDeckLinkAudioOutputCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAudioOutputCallback */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAudioOutputCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("403C681B-7F46-4A12-B993-2BB127084EE6")
     IDeckLinkAudioOutputCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE RenderAudioSamples(
+        virtual HRESULT STDMETHODCALLTYPE RenderAudioSamples( 
             /* [in] */ BOOL preroll) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAudioOutputCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAudioOutputCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAudioOutputCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAudioOutputCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *RenderAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *RenderAudioSamples )( 
             IDeckLinkAudioOutputCallback * This,
             /* [in] */ BOOL preroll);
-
+        
         END_INTERFACE
     } IDeckLinkAudioOutputCallbackVtbl;
 
@@ -5422,23 +5201,23 @@ EXTERN_C const IID IID_IDeckLinkAudioOutputCallback;
         CONST_VTBL struct IDeckLinkAudioOutputCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAudioOutputCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAudioOutputCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAudioOutputCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAudioOutputCallback_RenderAudioSamples(This,preroll)	\
-    ( (This)->lpVtbl -> RenderAudioSamples(This,preroll) )
+    ( (This)->lpVtbl -> RenderAudioSamples(This,preroll) ) 
 
 #endif /* COBJMACROS */
 
@@ -5455,45 +5234,45 @@ EXTERN_C const IID IID_IDeckLinkAudioOutputCallback;
 #define __IDeckLinkIterator_INTERFACE_DEFINED__
 
 /* interface IDeckLinkIterator */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkIterator;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("50FB36CD-3063-4B73-BDBB-958087F2D8BA")
     IDeckLinkIterator : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLink **deckLinkInstance) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkIteratorVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkIterator * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkIterator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkIterator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkIterator * This,
             /* [out] */ IDeckLink **deckLinkInstance);
-
+        
         END_INTERFACE
     } IDeckLinkIteratorVtbl;
 
@@ -5502,23 +5281,23 @@ EXTERN_C const IID IID_IDeckLinkIterator;
         CONST_VTBL struct IDeckLinkIteratorVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkIterator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkIterator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkIterator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkIterator_Next(This,deckLinkInstance)	\
-    ( (This)->lpVtbl -> Next(This,deckLinkInstance) )
+    ( (This)->lpVtbl -> Next(This,deckLinkInstance) ) 
 
 #endif /* COBJMACROS */
 
@@ -5535,74 +5314,74 @@ EXTERN_C const IID IID_IDeckLinkIterator;
 #define __IDeckLinkAPIInformation_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAPIInformation */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAPIInformation;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("7BEA3C68-730D-4322-AF34-8A7152B532A4")
     IDeckLinkAPIInformation : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAPIInformationVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAPIInformation * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAPIInformation * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAPIInformation * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkAPIInformation * This,
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkAPIInformation * This,
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkAPIInformation * This,
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkAPIInformation * This,
             /* [in] */ BMDDeckLinkAPIInformationID cfgID,
             /* [out] */ BSTR *value);
-
+        
         END_INTERFACE
     } IDeckLinkAPIInformationVtbl;
 
@@ -5611,32 +5390,32 @@ EXTERN_C const IID IID_IDeckLinkAPIInformation;
         CONST_VTBL struct IDeckLinkAPIInformationVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAPIInformation_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAPIInformation_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAPIInformation_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAPIInformation_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkAPIInformation_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkAPIInformation_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkAPIInformation_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #endif /* COBJMACROS */
 
@@ -5653,191 +5432,180 @@ EXTERN_C const IID IID_IDeckLinkAPIInformation;
 #define __IDeckLinkOutput_INTERFACE_DEFINED__
 
 /* interface IDeckLinkOutput */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkOutput;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("065A0F6C-C508-4D0D-B919-F5EB0EBFC96B")
+    
+    MIDL_INTERFACE("CC5C8A6E-3F2F-4B3A-87EA-FD78AF300564")
     IDeckLinkOutput : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedPixelFormat,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BMDDisplayMode *actualMode,
-            /* [out] */ BOOL *supported) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoOutputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDVideoOutputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame( 
             /* [in] */ int width,
             /* [in] */ int height,
             /* [in] */ int rowBytes,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData( 
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync( 
             /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame( 
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeValue displayTime,
             /* [in] */ BMDTimeValue displayDuration,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback( 
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount( 
             /* [out] */ unsigned int *bufferedFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput( 
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount,
             /* [in] */ BMDAudioOutputStreamType streamType) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync( 
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples( 
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [in] */ BMDTimeValue streamTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback( 
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback( 
             /* [in] */ BMDTimeValue playbackStartTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback( 
             /* [in] */ BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning( 
             /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetReferenceStatus(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetReferenceStatus( 
             /* [out] */ BMDReferenceStatus *referenceStatus) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameCompletionReferenceTimestamp(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFrameCompletionReferenceTimestamp( 
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *frameCompletionTimestamp) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkOutputVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkOutput * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkOutput * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkOutput * This,
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedPixelFormat,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BMDDisplayMode *actualMode,
-            /* [out] */ BOOL *supported);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoOutputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkOutput * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDVideoOutputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )( 
             IDeckLinkOutput * This,
             /* [in] */ int width,
             /* [in] */ int height,
@@ -5845,111 +5613,111 @@ EXTERN_C const IID IID_IDeckLinkOutput;
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeValue displayTime,
             /* [in] */ BMDTimeValue displayDuration,
             /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )( 
             IDeckLinkOutput * This,
             /* [out] */ unsigned int *bufferedFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount,
             /* [in] */ BMDAudioOutputStreamType streamType);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )( 
             IDeckLinkOutput * This,
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )( 
             IDeckLinkOutput * This,
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [in] */ BMDTimeValue streamTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkOutput * This,
             /* [out] */ unsigned int *bufferedSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )( 
             IDeckLinkOutput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDTimeValue playbackStartTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )( 
             IDeckLinkOutput * This,
             /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *GetReferenceStatus )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetReferenceStatus )( 
             IDeckLinkOutput * This,
             /* [out] */ BMDReferenceStatus *referenceStatus);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkOutput * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameCompletionReferenceTimestamp )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameCompletionReferenceTimestamp )( 
             IDeckLinkOutput * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *frameCompletionTimestamp);
-
+        
         END_INTERFACE
     } IDeckLinkOutputVtbl;
 
@@ -5958,107 +5726,104 @@ EXTERN_C const IID IID_IDeckLinkOutput;
         CONST_VTBL struct IDeckLinkOutputVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkOutput_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkOutput_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkOutput_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
-#define IDeckLinkOutput_DoesSupportVideoMode(This,connection,requestedMode,requestedPixelFormat,flags,actualMode,supported)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,connection,requestedMode,requestedPixelFormat,flags,actualMode,supported) )
-
-#define IDeckLinkOutput_GetDisplayMode(This,displayMode,resultDisplayMode)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This,displayMode,resultDisplayMode) )
+#define IDeckLinkOutput_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) ) 
 
 #define IDeckLinkOutput_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkOutput_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkOutput_EnableVideoOutput(This,displayMode,flags)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) )
+    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) ) 
 
 #define IDeckLinkOutput_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
+    ( (This)->lpVtbl -> DisableVideoOutput(This) ) 
 
 #define IDeckLinkOutput_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkOutput_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_CreateAncillaryData(This,pixelFormat,outBuffer)	\
-    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) )
+    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) ) 
 
 #define IDeckLinkOutput_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
+    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) ) 
 
 #define IDeckLinkOutput_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
+    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) ) 
 
 #define IDeckLinkOutput_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_GetBufferedVideoFrameCount(This,bufferedFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) ) 
 
 #define IDeckLinkOutput_EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) )
+    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) ) 
 
 #define IDeckLinkOutput_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
+    ( (This)->lpVtbl -> DisableAudioOutput(This) ) 
 
 #define IDeckLinkOutput_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
+    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
+    ( (This)->lpVtbl -> BeginAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
+    ( (This)->lpVtbl -> EndAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
+    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) ) 
 
 #define IDeckLinkOutput_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
+    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) ) 
 
 #define IDeckLinkOutput_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
+    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) ) 
 
 #define IDeckLinkOutput_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
+    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) ) 
 
 #define IDeckLinkOutput_IsScheduledPlaybackRunning(This,active)	\
-    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) )
+    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) ) 
 
 #define IDeckLinkOutput_GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed)	\
-    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) )
+    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) ) 
 
 #define IDeckLinkOutput_GetReferenceStatus(This,referenceStatus)	\
-    ( (This)->lpVtbl -> GetReferenceStatus(This,referenceStatus) )
+    ( (This)->lpVtbl -> GetReferenceStatus(This,referenceStatus) ) 
 
 #define IDeckLinkOutput_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #define IDeckLinkOutput_GetFrameCompletionReferenceTimestamp(This,theFrame,desiredTimeScale,frameCompletionTimestamp)	\
-    ( (This)->lpVtbl -> GetFrameCompletionReferenceTimestamp(This,theFrame,desiredTimeScale,frameCompletionTimestamp) )
+    ( (This)->lpVtbl -> GetFrameCompletionReferenceTimestamp(This,theFrame,desiredTimeScale,frameCompletionTimestamp) ) 
 
 #endif /* COBJMACROS */
 
@@ -6075,169 +5840,160 @@ EXTERN_C const IID IID_IDeckLinkOutput;
 #define __IDeckLinkInput_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInput */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInput;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("2A88CF76-F494-4216-A7EF-DC74EEB83882")
+    
+    MIDL_INTERFACE("AF22762B-DFAC-4846-AA79-FA8883560995")
     IDeckLinkInput : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedPixelFormat,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BOOL *supported) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoInputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount( 
             /* [out] */ unsigned int *availableFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoInputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoInputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount( 
             /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkInputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInputVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInput * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInput * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkInput * This,
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedPixelFormat,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BOOL *supported);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkInput * This,
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoInputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkInput * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkInput * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkInput * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )( 
             IDeckLinkInput * This,
             /* [out] */ unsigned int *availableFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoInputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoInputFrameMemoryAllocator )( 
             IDeckLinkInput * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkInput * This,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )( 
             IDeckLinkInput * This,
             /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushStreams )( 
             IDeckLinkInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkInput * This,
             /* [in] */ IDeckLinkInputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkInput * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkInputVtbl;
 
@@ -6246,71 +6002,68 @@ EXTERN_C const IID IID_IDeckLinkInput;
         CONST_VTBL struct IDeckLinkInputVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInput_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInput_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInput_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
-#define IDeckLinkInput_DoesSupportVideoMode(This,connection,requestedMode,requestedPixelFormat,flags,supported)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,connection,requestedMode,requestedPixelFormat,flags,supported) )
-
-#define IDeckLinkInput_GetDisplayMode(This,displayMode,resultDisplayMode)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This,displayMode,resultDisplayMode) )
+#define IDeckLinkInput_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) ) 
 
 #define IDeckLinkInput_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkInput_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkInput_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkInput_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkInput_GetAvailableVideoFrameCount(This,availableFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) ) 
 
 #define IDeckLinkInput_SetVideoInputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoInputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoInputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkInput_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkInput_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkInput_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) ) 
 
 #define IDeckLinkInput_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkInput_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkInput_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkInput_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+    ( (This)->lpVtbl -> FlushStreams(This) ) 
 
 #define IDeckLinkInput_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #define IDeckLinkInput_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -6327,61 +6080,61 @@ EXTERN_C const IID IID_IDeckLinkInput;
 #define __IDeckLinkHDMIInputEDID_INTERFACE_DEFINED__
 
 /* interface IDeckLinkHDMIInputEDID */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkHDMIInputEDID;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("ABBBACBC-45BC-4665-9D92-ACE6E5A97902")
     IDeckLinkHDMIInputEDID : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkHDMIInputEDIDID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkHDMIInputEDIDID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteToEDID( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkHDMIInputEDIDVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkHDMIInputEDID * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkHDMIInputEDID * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkHDMIInputEDID * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkHDMIInputEDID * This,
             /* [in] */ BMDDeckLinkHDMIInputEDIDID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkHDMIInputEDID * This,
             /* [in] */ BMDDeckLinkHDMIInputEDIDID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteToEDID )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteToEDID )( 
             IDeckLinkHDMIInputEDID * This);
-
+        
         END_INTERFACE
     } IDeckLinkHDMIInputEDIDVtbl;
 
@@ -6390,29 +6143,29 @@ EXTERN_C const IID IID_IDeckLinkHDMIInputEDID;
         CONST_VTBL struct IDeckLinkHDMIInputEDIDVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkHDMIInputEDID_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkHDMIInputEDID_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkHDMIInputEDID_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkHDMIInputEDID_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkHDMIInputEDID_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkHDMIInputEDID_WriteToEDID(This)	\
-    ( (This)->lpVtbl -> WriteToEDID(This) )
+    ( (This)->lpVtbl -> WriteToEDID(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -6429,166 +6182,155 @@ EXTERN_C const IID IID_IDeckLinkHDMIInputEDID;
 #define __IDeckLinkEncoderInput_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderInput */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderInput;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("F222551D-13DF-4FD8-B587-9D4F19EC12C9")
+    
+    MIDL_INTERFACE("270587DA-6B7D-42E7-A1F0-6D853F581185")
     IDeckLinkEncoderInput : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedCodec,
-            /* [in] */ unsigned int requestedCodecProfile,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BOOL *supported) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoInputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailablePacketsCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailablePacketsCount( 
             /* [out] */ unsigned int *availablePacketsCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             /* [in] */ BMDAudioFormat audioFormat,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount( 
             /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkEncoderInputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderInputVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderInput * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkEncoderInput * This,
-            /* [in] */ BMDVideoConnection connection,
-            /* [in] */ BMDDisplayMode requestedMode,
-            /* [in] */ BMDPixelFormat requestedCodec,
-            /* [in] */ unsigned int requestedCodecProfile,
-            /* [in] */ BMDSupportedVideoModeFlags flags,
-            /* [out] */ BOOL *supported);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ BMDDisplayMode displayMode,
+            /* [in] */ BMDPixelFormat pixelFormat,
+            /* [in] */ BMDVideoInputFlags flags,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkEncoderInput * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailablePacketsCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailablePacketsCount )( 
             IDeckLinkEncoderInput * This,
             /* [out] */ unsigned int *availablePacketsCount);
-
-        HRESULT ( STDMETHODCALLTYPE *SetMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetMemoryAllocator )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ BMDAudioFormat audioFormat,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )( 
             IDeckLinkEncoderInput * This,
             /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushStreams )( 
             IDeckLinkEncoderInput * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ IDeckLinkEncoderInputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkEncoderInput * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderInputVtbl;
 
@@ -6597,68 +6339,65 @@ EXTERN_C const IID IID_IDeckLinkEncoderInput;
         CONST_VTBL struct IDeckLinkEncoderInputVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderInput_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderInput_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderInput_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
+    ( (This)->lpVtbl -> Release(This) ) 
 
-#define IDeckLinkEncoderInput_DoesSupportVideoMode(This,connection,requestedMode,requestedCodec,requestedCodecProfile,flags,supported)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,connection,requestedMode,requestedCodec,requestedCodecProfile,flags,supported) )
 
-#define IDeckLinkEncoderInput_GetDisplayMode(This,displayMode,resultDisplayMode)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This,displayMode,resultDisplayMode) )
+#define IDeckLinkEncoderInput_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) ) 
 
 #define IDeckLinkEncoderInput_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkEncoderInput_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkEncoderInput_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkEncoderInput_GetAvailablePacketsCount(This,availablePacketsCount)	\
-    ( (This)->lpVtbl -> GetAvailablePacketsCount(This,availablePacketsCount) )
+    ( (This)->lpVtbl -> GetAvailablePacketsCount(This,availablePacketsCount) ) 
 
 #define IDeckLinkEncoderInput_SetMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkEncoderInput_EnableAudioInput(This,audioFormat,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,audioFormat,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,audioFormat,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkEncoderInput_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkEncoderInput_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) ) 
 
 #define IDeckLinkEncoderInput_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkEncoderInput_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkEncoderInput_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkEncoderInput_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+    ( (This)->lpVtbl -> FlushStreams(This) ) 
 
 #define IDeckLinkEncoderInput_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #define IDeckLinkEncoderInput_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -6675,86 +6414,86 @@ EXTERN_C const IID IID_IDeckLinkEncoderInput;
 #define __IDeckLinkVideoFrame_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrame */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrame;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("3F716FE0-F023-4111-BE5D-EF4414C05B17")
     IDeckLinkVideoFrame : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetRowBytes( void) = 0;
-
+        
         virtual BMDPixelFormat STDMETHODCALLTYPE GetPixelFormat( void) = 0;
-
+        
         virtual BMDFrameFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAncillaryData( 
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrameVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrame * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrame * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoFrame * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoFrame * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoFrame * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoFrame * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkVideoFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkVideoFrame * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrameVtbl;
 
@@ -6763,44 +6502,44 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame;
         CONST_VTBL struct IDeckLinkVideoFrameVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrame_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrame_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrame_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrame_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoFrame_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoFrame_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoFrame_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoFrame_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoFrame_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkVideoFrame_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkVideoFrame_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 #endif /* COBJMACROS */
 
@@ -6817,98 +6556,98 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame;
 #define __IDeckLinkMutableVideoFrame_INTERFACE_DEFINED__
 
 /* interface IDeckLinkMutableVideoFrame */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkMutableVideoFrame;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("69E2639F-40DA-4E19-B6F2-20ACE815C390")
     IDeckLinkMutableVideoFrame : public IDeckLinkVideoFrame
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlags(
+        virtual HRESULT STDMETHODCALLTYPE SetFlags( 
             /* [in] */ BMDFrameFlags newFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetTimecode( 
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ IDeckLinkTimecode *timecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetTimecodeFromComponents(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetTimecodeFromComponents( 
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ unsigned char hours,
             /* [in] */ unsigned char minutes,
             /* [in] */ unsigned char seconds,
             /* [in] */ unsigned char frames,
             /* [in] */ BMDTimecodeFlags flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAncillaryData( 
             /* [in] */ IDeckLinkVideoFrameAncillary *ancillary) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetTimecodeUserBits(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetTimecodeUserBits( 
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ BMDTimecodeUserBits userBits) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkMutableVideoFrameVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkMutableVideoFrame * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkMutableVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkMutableVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkMutableVideoFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkMutableVideoFrame * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkMutableVideoFrame * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkMutableVideoFrame * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkMutableVideoFrame * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkMutableVideoFrame * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlags )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ BMDFrameFlags newFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetTimecode )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ IDeckLinkTimecode *timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetTimecodeFromComponents )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetTimecodeFromComponents )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ unsigned char hours,
@@ -6916,16 +6655,16 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame;
             /* [in] */ unsigned char seconds,
             /* [in] */ unsigned char frames,
             /* [in] */ BMDTimecodeFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAncillaryData )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ IDeckLinkVideoFrameAncillary *ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *SetTimecodeUserBits )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetTimecodeUserBits )( 
             IDeckLinkMutableVideoFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [in] */ BMDTimecodeUserBits userBits);
-
+        
         END_INTERFACE
     } IDeckLinkMutableVideoFrameVtbl;
 
@@ -6934,60 +6673,60 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame;
         CONST_VTBL struct IDeckLinkMutableVideoFrameVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkMutableVideoFrame_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkMutableVideoFrame_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkMutableVideoFrame_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkMutableVideoFrame_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkMutableVideoFrame_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkMutableVideoFrame_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkMutableVideoFrame_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkMutableVideoFrame_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkMutableVideoFrame_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkMutableVideoFrame_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkMutableVideoFrame_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 
 #define IDeckLinkMutableVideoFrame_SetFlags(This,newFlags)	\
-    ( (This)->lpVtbl -> SetFlags(This,newFlags) )
+    ( (This)->lpVtbl -> SetFlags(This,newFlags) ) 
 
 #define IDeckLinkMutableVideoFrame_SetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> SetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> SetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkMutableVideoFrame_SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags)	\
-    ( (This)->lpVtbl -> SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags) )
+    ( (This)->lpVtbl -> SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags) ) 
 
 #define IDeckLinkMutableVideoFrame_SetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> SetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> SetAncillaryData(This,ancillary) ) 
 
 #define IDeckLinkMutableVideoFrame_SetTimecodeUserBits(This,format,userBits)	\
-    ( (This)->lpVtbl -> SetTimecodeUserBits(This,format,userBits) )
+    ( (This)->lpVtbl -> SetTimecodeUserBits(This,format,userBits) ) 
 
 #endif /* COBJMACROS */
 
@@ -7004,50 +6743,50 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame;
 #define __IDeckLinkVideoFrame3DExtensions_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrame3DExtensions */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrame3DExtensions;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("DA0F7E4A-EDC7-48A8-9CDD-2DB51C729CD7")
     IDeckLinkVideoFrame3DExtensions : public IUnknown
     {
     public:
         virtual BMDVideo3DPackingFormat STDMETHODCALLTYPE Get3DPackingFormat( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameForRightEye(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFrameForRightEye( 
             /* [out] */ IDeckLinkVideoFrame **rightEyeFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrame3DExtensionsVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrame3DExtensions * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrame3DExtensions * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrame3DExtensions * This);
-
-        BMDVideo3DPackingFormat ( STDMETHODCALLTYPE *Get3DPackingFormat )(
+        
+        BMDVideo3DPackingFormat ( STDMETHODCALLTYPE *Get3DPackingFormat )( 
             IDeckLinkVideoFrame3DExtensions * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameForRightEye )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameForRightEye )( 
             IDeckLinkVideoFrame3DExtensions * This,
             /* [out] */ IDeckLinkVideoFrame **rightEyeFrame);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrame3DExtensionsVtbl;
 
@@ -7056,26 +6795,26 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame3DExtensions;
         CONST_VTBL struct IDeckLinkVideoFrame3DExtensionsVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrame3DExtensions_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrame3DExtensions_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrame3DExtensions_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrame3DExtensions_Get3DPackingFormat(This)	\
-    ( (This)->lpVtbl -> Get3DPackingFormat(This) )
+    ( (This)->lpVtbl -> Get3DPackingFormat(This) ) 
 
 #define IDeckLinkVideoFrame3DExtensions_GetFrameForRightEye(This,rightEyeFrame)	\
-    ( (This)->lpVtbl -> GetFrameForRightEye(This,rightEyeFrame) )
+    ( (This)->lpVtbl -> GetFrameForRightEye(This,rightEyeFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -7092,74 +6831,74 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame3DExtensions;
 #define __IDeckLinkVideoFrameMetadataExtensions_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrameMetadataExtensions */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrameMetadataExtensions;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("D5973DC9-6432-46D0-8F0B-2496F8A1238F")
     IDeckLinkVideoFrameMetadataExtensions : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ BSTR *value) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrameMetadataExtensionsVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrameMetadataExtensions * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrameMetadataExtensions * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrameMetadataExtensions * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkVideoFrameMetadataExtensions * This,
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkVideoFrameMetadataExtensions * This,
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkVideoFrameMetadataExtensions * This,
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkVideoFrameMetadataExtensions * This,
             /* [in] */ BMDDeckLinkFrameMetadataID metadataID,
             /* [out] */ BSTR *value);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrameMetadataExtensionsVtbl;
 
@@ -7168,32 +6907,32 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameMetadataExtensions;
         CONST_VTBL struct IDeckLinkVideoFrameMetadataExtensionsVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrameMetadataExtensions_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrameMetadataExtensions_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrameMetadataExtensions_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrameMetadataExtensions_GetInt(This,metadataID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,metadataID,value) )
+    ( (This)->lpVtbl -> GetInt(This,metadataID,value) ) 
 
 #define IDeckLinkVideoFrameMetadataExtensions_GetFloat(This,metadataID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,metadataID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,metadataID,value) ) 
 
 #define IDeckLinkVideoFrameMetadataExtensions_GetFlag(This,metadataID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,metadataID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,metadataID,value) ) 
 
 #define IDeckLinkVideoFrameMetadataExtensions_GetString(This,metadataID,value)	\
-    ( (This)->lpVtbl -> GetString(This,metadataID,value) )
+    ( (This)->lpVtbl -> GetString(This,metadataID,value) ) 
 
 #endif /* COBJMACROS */
 
@@ -7210,88 +6949,88 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameMetadataExtensions;
 #define __IDeckLinkVideoInputFrame_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoInputFrame */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoInputFrame;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("05CFE374-537C-4094-9A57-680525118F44")
     IDeckLinkVideoInputFrame : public IDeckLinkVideoFrame
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetStreamTime(
+        virtual HRESULT STDMETHODCALLTYPE GetStreamTime( 
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp( 
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoInputFrameVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoInputFrame * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoInputFrame * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoInputFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoInputFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoInputFrame * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoInputFrame * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoInputFrame * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoInputFrame * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoInputFrame * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkVideoInputFrame * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkVideoInputFrame * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkVideoInputFrame * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )( 
             IDeckLinkVideoInputFrame * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration);
-
+        
         END_INTERFACE
     } IDeckLinkVideoInputFrameVtbl;
 
@@ -7300,51 +7039,51 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame;
         CONST_VTBL struct IDeckLinkVideoInputFrameVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoInputFrame_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoInputFrame_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoInputFrame_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoInputFrame_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoInputFrame_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoInputFrame_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoInputFrame_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoInputFrame_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoInputFrame_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkVideoInputFrame_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkVideoInputFrame_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 
 #define IDeckLinkVideoInputFrame_GetStreamTime(This,frameTime,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) ) 
 
 #define IDeckLinkVideoInputFrame_GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) )
+    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) ) 
 
 #endif /* COBJMACROS */
 
@@ -7361,69 +7100,69 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame;
 #define __IDeckLinkAncillaryPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAncillaryPacket */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAncillaryPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("CC5BBF7E-029C-4D3B-9158-6000EF5E3670")
     IDeckLinkAncillaryPacket : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [in] */ BMDAncillaryPacketFormat format,
             /* [out] */ const void **data,
             /* [out] */ unsigned int *size) = 0;
-
+        
         virtual unsigned char STDMETHODCALLTYPE GetDID( void) = 0;
-
+        
         virtual unsigned char STDMETHODCALLTYPE GetSDID( void) = 0;
-
+        
         virtual unsigned int STDMETHODCALLTYPE GetLineNumber( void) = 0;
-
+        
         virtual unsigned char STDMETHODCALLTYPE GetDataStreamIndex( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAncillaryPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAncillaryPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAncillaryPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAncillaryPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkAncillaryPacket * This,
             /* [in] */ BMDAncillaryPacketFormat format,
             /* [out] */ const void **data,
             /* [out] */ unsigned int *size);
-
-        unsigned char ( STDMETHODCALLTYPE *GetDID )(
+        
+        unsigned char ( STDMETHODCALLTYPE *GetDID )( 
             IDeckLinkAncillaryPacket * This);
-
-        unsigned char ( STDMETHODCALLTYPE *GetSDID )(
+        
+        unsigned char ( STDMETHODCALLTYPE *GetSDID )( 
             IDeckLinkAncillaryPacket * This);
-
-        unsigned int ( STDMETHODCALLTYPE *GetLineNumber )(
+        
+        unsigned int ( STDMETHODCALLTYPE *GetLineNumber )( 
             IDeckLinkAncillaryPacket * This);
-
-        unsigned char ( STDMETHODCALLTYPE *GetDataStreamIndex )(
+        
+        unsigned char ( STDMETHODCALLTYPE *GetDataStreamIndex )( 
             IDeckLinkAncillaryPacket * This);
-
+        
         END_INTERFACE
     } IDeckLinkAncillaryPacketVtbl;
 
@@ -7432,35 +7171,35 @@ EXTERN_C const IID IID_IDeckLinkAncillaryPacket;
         CONST_VTBL struct IDeckLinkAncillaryPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAncillaryPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAncillaryPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAncillaryPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAncillaryPacket_GetBytes(This,format,data,size)	\
-    ( (This)->lpVtbl -> GetBytes(This,format,data,size) )
+    ( (This)->lpVtbl -> GetBytes(This,format,data,size) ) 
 
 #define IDeckLinkAncillaryPacket_GetDID(This)	\
-    ( (This)->lpVtbl -> GetDID(This) )
+    ( (This)->lpVtbl -> GetDID(This) ) 
 
 #define IDeckLinkAncillaryPacket_GetSDID(This)	\
-    ( (This)->lpVtbl -> GetSDID(This) )
+    ( (This)->lpVtbl -> GetSDID(This) ) 
 
 #define IDeckLinkAncillaryPacket_GetLineNumber(This)	\
-    ( (This)->lpVtbl -> GetLineNumber(This) )
+    ( (This)->lpVtbl -> GetLineNumber(This) ) 
 
 #define IDeckLinkAncillaryPacket_GetDataStreamIndex(This)	\
-    ( (This)->lpVtbl -> GetDataStreamIndex(This) )
+    ( (This)->lpVtbl -> GetDataStreamIndex(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -7477,45 +7216,45 @@ EXTERN_C const IID IID_IDeckLinkAncillaryPacket;
 #define __IDeckLinkAncillaryPacketIterator_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAncillaryPacketIterator */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAncillaryPacketIterator;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("3FC8994B-88FB-4C17-968F-9AAB69D964A7")
     IDeckLinkAncillaryPacketIterator : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLinkAncillaryPacket **packet) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAncillaryPacketIteratorVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAncillaryPacketIterator * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAncillaryPacketIterator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAncillaryPacketIterator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkAncillaryPacketIterator * This,
             /* [out] */ IDeckLinkAncillaryPacket **packet);
-
+        
         END_INTERFACE
     } IDeckLinkAncillaryPacketIteratorVtbl;
 
@@ -7524,23 +7263,23 @@ EXTERN_C const IID IID_IDeckLinkAncillaryPacketIterator;
         CONST_VTBL struct IDeckLinkAncillaryPacketIteratorVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAncillaryPacketIterator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAncillaryPacketIterator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAncillaryPacketIterator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAncillaryPacketIterator_Next(This,packet)	\
-    ( (This)->lpVtbl -> Next(This,packet) )
+    ( (This)->lpVtbl -> Next(This,packet) ) 
 
 #endif /* COBJMACROS */
 
@@ -7557,75 +7296,75 @@ EXTERN_C const IID IID_IDeckLinkAncillaryPacketIterator;
 #define __IDeckLinkVideoFrameAncillaryPackets_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrameAncillaryPackets */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrameAncillaryPackets;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("6C186C0F-459E-41D8-AEE2-4812D81AEE68")
     IDeckLinkVideoFrameAncillaryPackets : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetPacketIterator(
+        virtual HRESULT STDMETHODCALLTYPE GetPacketIterator( 
             /* [out] */ IDeckLinkAncillaryPacketIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFirstPacketByID(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFirstPacketByID( 
             /* [in] */ unsigned char DID,
             /* [in] */ unsigned char SDID,
             /* [out] */ IDeckLinkAncillaryPacket **packet) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE AttachPacket(
+        
+        virtual HRESULT STDMETHODCALLTYPE AttachPacket( 
             /* [in] */ IDeckLinkAncillaryPacket *packet) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DetachPacket(
+        
+        virtual HRESULT STDMETHODCALLTYPE DetachPacket( 
             /* [in] */ IDeckLinkAncillaryPacket *packet) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DetachAllPackets( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrameAncillaryPacketsVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrameAncillaryPackets * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrameAncillaryPackets * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrameAncillaryPackets * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPacketIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPacketIterator )( 
             IDeckLinkVideoFrameAncillaryPackets * This,
             /* [out] */ IDeckLinkAncillaryPacketIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFirstPacketByID )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFirstPacketByID )( 
             IDeckLinkVideoFrameAncillaryPackets * This,
             /* [in] */ unsigned char DID,
             /* [in] */ unsigned char SDID,
             /* [out] */ IDeckLinkAncillaryPacket **packet);
-
-        HRESULT ( STDMETHODCALLTYPE *AttachPacket )(
+        
+        HRESULT ( STDMETHODCALLTYPE *AttachPacket )( 
             IDeckLinkVideoFrameAncillaryPackets * This,
             /* [in] */ IDeckLinkAncillaryPacket *packet);
-
-        HRESULT ( STDMETHODCALLTYPE *DetachPacket )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DetachPacket )( 
             IDeckLinkVideoFrameAncillaryPackets * This,
             /* [in] */ IDeckLinkAncillaryPacket *packet);
-
-        HRESULT ( STDMETHODCALLTYPE *DetachAllPackets )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DetachAllPackets )( 
             IDeckLinkVideoFrameAncillaryPackets * This);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrameAncillaryPacketsVtbl;
 
@@ -7634,35 +7373,35 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameAncillaryPackets;
         CONST_VTBL struct IDeckLinkVideoFrameAncillaryPacketsVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrameAncillaryPackets_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrameAncillaryPackets_GetPacketIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetPacketIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetPacketIterator(This,iterator) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_GetFirstPacketByID(This,DID,SDID,packet)	\
-    ( (This)->lpVtbl -> GetFirstPacketByID(This,DID,SDID,packet) )
+    ( (This)->lpVtbl -> GetFirstPacketByID(This,DID,SDID,packet) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_AttachPacket(This,packet)	\
-    ( (This)->lpVtbl -> AttachPacket(This,packet) )
+    ( (This)->lpVtbl -> AttachPacket(This,packet) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_DetachPacket(This,packet)	\
-    ( (This)->lpVtbl -> DetachPacket(This,packet) )
+    ( (This)->lpVtbl -> DetachPacket(This,packet) ) 
 
 #define IDeckLinkVideoFrameAncillaryPackets_DetachAllPackets(This)	\
-    ( (This)->lpVtbl -> DetachAllPackets(This) )
+    ( (This)->lpVtbl -> DetachAllPackets(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -7679,57 +7418,57 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameAncillaryPackets;
 #define __IDeckLinkVideoFrameAncillary_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrameAncillary */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrameAncillary;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("732E723C-D1A4-4E29-9E8E-4A88797A0004")
     IDeckLinkVideoFrameAncillary : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetBufferForVerticalBlankingLine(
+        virtual HRESULT STDMETHODCALLTYPE GetBufferForVerticalBlankingLine( 
             /* [in] */ unsigned int lineNumber,
             /* [out] */ void **buffer) = 0;
-
+        
         virtual BMDPixelFormat STDMETHODCALLTYPE GetPixelFormat( void) = 0;
-
+        
         virtual BMDDisplayMode STDMETHODCALLTYPE GetDisplayMode( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrameAncillaryVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrameAncillary * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrameAncillary * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrameAncillary * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferForVerticalBlankingLine )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferForVerticalBlankingLine )( 
             IDeckLinkVideoFrameAncillary * This,
             /* [in] */ unsigned int lineNumber,
             /* [out] */ void **buffer);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoFrameAncillary * This);
-
-        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )( 
             IDeckLinkVideoFrameAncillary * This);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrameAncillaryVtbl;
 
@@ -7738,29 +7477,29 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameAncillary;
         CONST_VTBL struct IDeckLinkVideoFrameAncillaryVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrameAncillary_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrameAncillary_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrameAncillary_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrameAncillary_GetBufferForVerticalBlankingLine(This,lineNumber,buffer)	\
-    ( (This)->lpVtbl -> GetBufferForVerticalBlankingLine(This,lineNumber,buffer) )
+    ( (This)->lpVtbl -> GetBufferForVerticalBlankingLine(This,lineNumber,buffer) ) 
 
 #define IDeckLinkVideoFrameAncillary_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoFrameAncillary_GetDisplayMode(This)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This) )
+    ( (This)->lpVtbl -> GetDisplayMode(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -7777,64 +7516,64 @@ EXTERN_C const IID IID_IDeckLinkVideoFrameAncillary;
 #define __IDeckLinkEncoderPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderPacket */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("B693F36C-316E-4AF1-B6C2-F389A4BCA620")
     IDeckLinkEncoderPacket : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetSize( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetStreamTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetStreamTime( 
             /* [out] */ BMDTimeValue *frameTime,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
+        
         virtual BMDPacketType STDMETHODCALLTYPE GetPacketType( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkEncoderPacket * This,
             /* [out] */ void **buffer);
-
-        long ( STDMETHODCALLTYPE *GetSize )(
+        
+        long ( STDMETHODCALLTYPE *GetSize )( 
             IDeckLinkEncoderPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkEncoderPacket * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )(
+        
+        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )( 
             IDeckLinkEncoderPacket * This);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderPacketVtbl;
 
@@ -7843,32 +7582,32 @@ EXTERN_C const IID IID_IDeckLinkEncoderPacket;
         CONST_VTBL struct IDeckLinkEncoderPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkEncoderPacket_GetSize(This)	\
-    ( (This)->lpVtbl -> GetSize(This) )
+    ( (This)->lpVtbl -> GetSize(This) ) 
 
 #define IDeckLinkEncoderPacket_GetStreamTime(This,frameTime,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) ) 
 
 #define IDeckLinkEncoderPacket_GetPacketType(This)	\
-    ( (This)->lpVtbl -> GetPacketType(This) )
+    ( (This)->lpVtbl -> GetPacketType(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -7885,78 +7624,78 @@ EXTERN_C const IID IID_IDeckLinkEncoderPacket;
 #define __IDeckLinkEncoderVideoPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderVideoPacket */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderVideoPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("4E7FD944-E8C7-4EAC-B8C0-7B77F80F5AE0")
     IDeckLinkEncoderVideoPacket : public IDeckLinkEncoderPacket
     {
     public:
         virtual BMDPixelFormat STDMETHODCALLTYPE GetPixelFormat( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp( 
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderVideoPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderVideoPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderVideoPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderVideoPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkEncoderVideoPacket * This,
             /* [out] */ void **buffer);
-
-        long ( STDMETHODCALLTYPE *GetSize )(
+        
+        long ( STDMETHODCALLTYPE *GetSize )( 
             IDeckLinkEncoderVideoPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkEncoderVideoPacket * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )(
+        
+        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )( 
             IDeckLinkEncoderVideoPacket * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkEncoderVideoPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )( 
             IDeckLinkEncoderVideoPacket * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkEncoderVideoPacket * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderVideoPacketVtbl;
 
@@ -7965,42 +7704,42 @@ EXTERN_C const IID IID_IDeckLinkEncoderVideoPacket;
         CONST_VTBL struct IDeckLinkEncoderVideoPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderVideoPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderVideoPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderVideoPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderVideoPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkEncoderVideoPacket_GetSize(This)	\
-    ( (This)->lpVtbl -> GetSize(This) )
+    ( (This)->lpVtbl -> GetSize(This) ) 
 
 #define IDeckLinkEncoderVideoPacket_GetStreamTime(This,frameTime,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) ) 
 
 #define IDeckLinkEncoderVideoPacket_GetPacketType(This)	\
-    ( (This)->lpVtbl -> GetPacketType(This) )
+    ( (This)->lpVtbl -> GetPacketType(This) ) 
 
 
 #define IDeckLinkEncoderVideoPacket_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkEncoderVideoPacket_GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) )
+    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) ) 
 
 #define IDeckLinkEncoderVideoPacket_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #endif /* COBJMACROS */
 
@@ -8017,58 +7756,58 @@ EXTERN_C const IID IID_IDeckLinkEncoderVideoPacket;
 #define __IDeckLinkEncoderAudioPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderAudioPacket */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderAudioPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("49E8EDC8-693B-4E14-8EF6-12C658F5A07A")
     IDeckLinkEncoderAudioPacket : public IDeckLinkEncoderPacket
     {
     public:
         virtual BMDAudioFormat STDMETHODCALLTYPE GetAudioFormat( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderAudioPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderAudioPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderAudioPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderAudioPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkEncoderAudioPacket * This,
             /* [out] */ void **buffer);
-
-        long ( STDMETHODCALLTYPE *GetSize )(
+        
+        long ( STDMETHODCALLTYPE *GetSize )( 
             IDeckLinkEncoderAudioPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkEncoderAudioPacket * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )(
+        
+        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )( 
             IDeckLinkEncoderAudioPacket * This);
-
-        BMDAudioFormat ( STDMETHODCALLTYPE *GetAudioFormat )(
+        
+        BMDAudioFormat ( STDMETHODCALLTYPE *GetAudioFormat )( 
             IDeckLinkEncoderAudioPacket * This);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderAudioPacketVtbl;
 
@@ -8077,36 +7816,36 @@ EXTERN_C const IID IID_IDeckLinkEncoderAudioPacket;
         CONST_VTBL struct IDeckLinkEncoderAudioPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderAudioPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderAudioPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderAudioPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderAudioPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkEncoderAudioPacket_GetSize(This)	\
-    ( (This)->lpVtbl -> GetSize(This) )
+    ( (This)->lpVtbl -> GetSize(This) ) 
 
 #define IDeckLinkEncoderAudioPacket_GetStreamTime(This,frameTime,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) ) 
 
 #define IDeckLinkEncoderAudioPacket_GetPacketType(This)	\
-    ( (This)->lpVtbl -> GetPacketType(This) )
+    ( (This)->lpVtbl -> GetPacketType(This) ) 
 
 
 #define IDeckLinkEncoderAudioPacket_GetAudioFormat(This)	\
-    ( (This)->lpVtbl -> GetAudioFormat(This) )
+    ( (This)->lpVtbl -> GetAudioFormat(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -8123,86 +7862,86 @@ EXTERN_C const IID IID_IDeckLinkEncoderAudioPacket;
 #define __IDeckLinkH265NALPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkH265NALPacket */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkH265NALPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("639C8E0B-68D5-4BDE-A6D4-95F3AEAFF2E7")
     IDeckLinkH265NALPacket : public IDeckLinkEncoderVideoPacket
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetUnitType(
+        virtual HRESULT STDMETHODCALLTYPE GetUnitType( 
             /* [out] */ unsigned char *unitType) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytesNoPrefix(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytesNoPrefix( 
             /* [out] */ void **buffer) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetSizeNoPrefix( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkH265NALPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkH265NALPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkH265NALPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkH265NALPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkH265NALPacket * This,
             /* [out] */ void **buffer);
-
-        long ( STDMETHODCALLTYPE *GetSize )(
+        
+        long ( STDMETHODCALLTYPE *GetSize )( 
             IDeckLinkH265NALPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkH265NALPacket * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )(
+        
+        BMDPacketType ( STDMETHODCALLTYPE *GetPacketType )( 
             IDeckLinkH265NALPacket * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkH265NALPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )( 
             IDeckLinkH265NALPacket * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkH265NALPacket * This,
             /* [in] */ BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetUnitType )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetUnitType )( 
             IDeckLinkH265NALPacket * This,
             /* [out] */ unsigned char *unitType);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytesNoPrefix )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytesNoPrefix )( 
             IDeckLinkH265NALPacket * This,
             /* [out] */ void **buffer);
-
-        long ( STDMETHODCALLTYPE *GetSizeNoPrefix )(
+        
+        long ( STDMETHODCALLTYPE *GetSizeNoPrefix )( 
             IDeckLinkH265NALPacket * This);
-
+        
         END_INTERFACE
     } IDeckLinkH265NALPacketVtbl;
 
@@ -8211,52 +7950,52 @@ EXTERN_C const IID IID_IDeckLinkH265NALPacket;
         CONST_VTBL struct IDeckLinkH265NALPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkH265NALPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkH265NALPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkH265NALPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkH265NALPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkH265NALPacket_GetSize(This)	\
-    ( (This)->lpVtbl -> GetSize(This) )
+    ( (This)->lpVtbl -> GetSize(This) ) 
 
 #define IDeckLinkH265NALPacket_GetStreamTime(This,frameTime,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,timeScale) ) 
 
 #define IDeckLinkH265NALPacket_GetPacketType(This)	\
-    ( (This)->lpVtbl -> GetPacketType(This) )
+    ( (This)->lpVtbl -> GetPacketType(This) ) 
 
 
 #define IDeckLinkH265NALPacket_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkH265NALPacket_GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) )
+    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) ) 
 
 #define IDeckLinkH265NALPacket_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 
 #define IDeckLinkH265NALPacket_GetUnitType(This,unitType)	\
-    ( (This)->lpVtbl -> GetUnitType(This,unitType) )
+    ( (This)->lpVtbl -> GetUnitType(This,unitType) ) 
 
 #define IDeckLinkH265NALPacket_GetBytesNoPrefix(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytesNoPrefix(This,buffer) )
+    ( (This)->lpVtbl -> GetBytesNoPrefix(This,buffer) ) 
 
 #define IDeckLinkH265NALPacket_GetSizeNoPrefix(This)	\
-    ( (This)->lpVtbl -> GetSizeNoPrefix(This) )
+    ( (This)->lpVtbl -> GetSizeNoPrefix(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -8273,59 +8012,59 @@ EXTERN_C const IID IID_IDeckLinkH265NALPacket;
 #define __IDeckLinkAudioInputPacket_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAudioInputPacket */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAudioInputPacket;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("E43D5870-2894-11DE-8C30-0800200C9A66")
     IDeckLinkAudioInputPacket : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetSampleFrameCount( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPacketTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPacketTime( 
             /* [out] */ BMDTimeValue *packetTime,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAudioInputPacketVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAudioInputPacket * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAudioInputPacket * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAudioInputPacket * This);
-
-        long ( STDMETHODCALLTYPE *GetSampleFrameCount )(
+        
+        long ( STDMETHODCALLTYPE *GetSampleFrameCount )( 
             IDeckLinkAudioInputPacket * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkAudioInputPacket * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPacketTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPacketTime )( 
             IDeckLinkAudioInputPacket * This,
             /* [out] */ BMDTimeValue *packetTime,
             /* [in] */ BMDTimeScale timeScale);
-
+        
         END_INTERFACE
     } IDeckLinkAudioInputPacketVtbl;
 
@@ -8334,29 +8073,29 @@ EXTERN_C const IID IID_IDeckLinkAudioInputPacket;
         CONST_VTBL struct IDeckLinkAudioInputPacketVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAudioInputPacket_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAudioInputPacket_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAudioInputPacket_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAudioInputPacket_GetSampleFrameCount(This)	\
-    ( (This)->lpVtbl -> GetSampleFrameCount(This) )
+    ( (This)->lpVtbl -> GetSampleFrameCount(This) ) 
 
 #define IDeckLinkAudioInputPacket_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkAudioInputPacket_GetPacketTime(This,packetTime,timeScale)	\
-    ( (This)->lpVtbl -> GetPacketTime(This,packetTime,timeScale) )
+    ( (This)->lpVtbl -> GetPacketTime(This,packetTime,timeScale) ) 
 
 #endif /* COBJMACROS */
 
@@ -8373,45 +8112,45 @@ EXTERN_C const IID IID_IDeckLinkAudioInputPacket;
 #define __IDeckLinkScreenPreviewCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkScreenPreviewCallback */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("B1D3F49A-85FE-4C5D-95C8-0B5D5DCCD438")
     IDeckLinkScreenPreviewCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DrawFrame(
+        virtual HRESULT STDMETHODCALLTYPE DrawFrame( 
             /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkScreenPreviewCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkScreenPreviewCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkScreenPreviewCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkScreenPreviewCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DrawFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DrawFrame )( 
             IDeckLinkScreenPreviewCallback * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame);
-
+        
         END_INTERFACE
     } IDeckLinkScreenPreviewCallbackVtbl;
 
@@ -8420,23 +8159,23 @@ EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback;
         CONST_VTBL struct IDeckLinkScreenPreviewCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkScreenPreviewCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkScreenPreviewCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkScreenPreviewCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkScreenPreviewCallback_DrawFrame(This,theFrame)	\
-    ( (This)->lpVtbl -> DrawFrame(This,theFrame) )
+    ( (This)->lpVtbl -> DrawFrame(This,theFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -8453,62 +8192,62 @@ EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback;
 #define __IDeckLinkGLScreenPreviewHelper_INTERFACE_DEFINED__
 
 /* interface IDeckLinkGLScreenPreviewHelper */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("504E2209-CAC7-4C1A-9FB4-C5BB6274D22F")
     IDeckLinkGLScreenPreviewHelper : public IUnknown
     {
     public:
         virtual HRESULT STDMETHODCALLTYPE InitializeGL( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PaintGL( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFrame( 
             /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Set3DPreviewFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE Set3DPreviewFormat( 
             /* [in] */ BMD3DPreviewFormat previewFormat) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkGLScreenPreviewHelperVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkGLScreenPreviewHelper * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkGLScreenPreviewHelper * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkGLScreenPreviewHelper * This);
-
-        HRESULT ( STDMETHODCALLTYPE *InitializeGL )(
+        
+        HRESULT ( STDMETHODCALLTYPE *InitializeGL )( 
             IDeckLinkGLScreenPreviewHelper * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PaintGL )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PaintGL )( 
             IDeckLinkGLScreenPreviewHelper * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFrame )( 
             IDeckLinkGLScreenPreviewHelper * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *Set3DPreviewFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Set3DPreviewFormat )( 
             IDeckLinkGLScreenPreviewHelper * This,
             /* [in] */ BMD3DPreviewFormat previewFormat);
-
+        
         END_INTERFACE
     } IDeckLinkGLScreenPreviewHelperVtbl;
 
@@ -8517,32 +8256,32 @@ EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper;
         CONST_VTBL struct IDeckLinkGLScreenPreviewHelperVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkGLScreenPreviewHelper_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkGLScreenPreviewHelper_InitializeGL(This)	\
-    ( (This)->lpVtbl -> InitializeGL(This) )
+    ( (This)->lpVtbl -> InitializeGL(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_PaintGL(This)	\
-    ( (This)->lpVtbl -> PaintGL(This) )
+    ( (This)->lpVtbl -> PaintGL(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_SetFrame(This,theFrame)	\
-    ( (This)->lpVtbl -> SetFrame(This,theFrame) )
+    ( (This)->lpVtbl -> SetFrame(This,theFrame) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_Set3DPreviewFormat(This,previewFormat)	\
-    ( (This)->lpVtbl -> Set3DPreviewFormat(This,previewFormat) )
+    ( (This)->lpVtbl -> Set3DPreviewFormat(This,previewFormat) ) 
 
 #endif /* COBJMACROS */
 
@@ -8559,66 +8298,66 @@ EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper;
 #define __IDeckLinkDX9ScreenPreviewHelper_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDX9ScreenPreviewHelper */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDX9ScreenPreviewHelper;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("2094B522-D1A1-40C0-9AC7-1C012218EF02")
     IDeckLinkDX9ScreenPreviewHelper : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Initialize(
+        virtual HRESULT STDMETHODCALLTYPE Initialize( 
             /* [in] */ void *device) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Render(
+        
+        virtual HRESULT STDMETHODCALLTYPE Render( 
             /* [in] */ RECT *rc) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFrame( 
             /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Set3DPreviewFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE Set3DPreviewFormat( 
             /* [in] */ BMD3DPreviewFormat previewFormat) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDX9ScreenPreviewHelperVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDX9ScreenPreviewHelper * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDX9ScreenPreviewHelper * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDX9ScreenPreviewHelper * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Initialize )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
             IDeckLinkDX9ScreenPreviewHelper * This,
             /* [in] */ void *device);
-
-        HRESULT ( STDMETHODCALLTYPE *Render )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Render )( 
             IDeckLinkDX9ScreenPreviewHelper * This,
             /* [in] */ RECT *rc);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFrame )( 
             IDeckLinkDX9ScreenPreviewHelper * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *Set3DPreviewFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Set3DPreviewFormat )( 
             IDeckLinkDX9ScreenPreviewHelper * This,
             /* [in] */ BMD3DPreviewFormat previewFormat);
-
+        
         END_INTERFACE
     } IDeckLinkDX9ScreenPreviewHelperVtbl;
 
@@ -8627,32 +8366,32 @@ EXTERN_C const IID IID_IDeckLinkDX9ScreenPreviewHelper;
         CONST_VTBL struct IDeckLinkDX9ScreenPreviewHelperVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDX9ScreenPreviewHelper_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDX9ScreenPreviewHelper_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDX9ScreenPreviewHelper_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDX9ScreenPreviewHelper_Initialize(This,device)	\
-    ( (This)->lpVtbl -> Initialize(This,device) )
+    ( (This)->lpVtbl -> Initialize(This,device) ) 
 
 #define IDeckLinkDX9ScreenPreviewHelper_Render(This,rc)	\
-    ( (This)->lpVtbl -> Render(This,rc) )
+    ( (This)->lpVtbl -> Render(This,rc) ) 
 
 #define IDeckLinkDX9ScreenPreviewHelper_SetFrame(This,theFrame)	\
-    ( (This)->lpVtbl -> SetFrame(This,theFrame) )
+    ( (This)->lpVtbl -> SetFrame(This,theFrame) ) 
 
 #define IDeckLinkDX9ScreenPreviewHelper_Set3DPreviewFormat(This,previewFormat)	\
-    ( (This)->lpVtbl -> Set3DPreviewFormat(This,previewFormat) )
+    ( (This)->lpVtbl -> Set3DPreviewFormat(This,previewFormat) ) 
 
 #endif /* COBJMACROS */
 
@@ -8669,49 +8408,49 @@ EXTERN_C const IID IID_IDeckLinkDX9ScreenPreviewHelper;
 #define __IDeckLinkNotificationCallback_INTERFACE_DEFINED__
 
 /* interface IDeckLinkNotificationCallback */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkNotificationCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("b002a1ec-070d-4288-8289-bd5d36e5ff0d")
     IDeckLinkNotificationCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Notify(
+        virtual HRESULT STDMETHODCALLTYPE Notify( 
             /* [in] */ BMDNotifications topic,
             /* [in] */ ULONGLONG param1,
             /* [in] */ ULONGLONG param2) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkNotificationCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkNotificationCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkNotificationCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkNotificationCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Notify )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Notify )( 
             IDeckLinkNotificationCallback * This,
             /* [in] */ BMDNotifications topic,
             /* [in] */ ULONGLONG param1,
             /* [in] */ ULONGLONG param2);
-
+        
         END_INTERFACE
     } IDeckLinkNotificationCallbackVtbl;
 
@@ -8720,23 +8459,23 @@ EXTERN_C const IID IID_IDeckLinkNotificationCallback;
         CONST_VTBL struct IDeckLinkNotificationCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkNotificationCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkNotificationCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkNotificationCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkNotificationCallback_Notify(This,topic,param1,param2)	\
-    ( (This)->lpVtbl -> Notify(This,topic,param1,param2) )
+    ( (This)->lpVtbl -> Notify(This,topic,param1,param2) ) 
 
 #endif /* COBJMACROS */
 
@@ -8753,56 +8492,56 @@ EXTERN_C const IID IID_IDeckLinkNotificationCallback;
 #define __IDeckLinkNotification_INTERFACE_DEFINED__
 
 /* interface IDeckLinkNotification */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkNotification;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("b85df4c8-bdf5-47c1-8064-28162ebdd4eb")
+    
+    MIDL_INTERFACE("0a1fb207-e215-441b-9b19-6fa1575946c5")
     IDeckLinkNotification : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Subscribe(
+        virtual HRESULT STDMETHODCALLTYPE Subscribe( 
             /* [in] */ BMDNotifications topic,
             /* [in] */ IDeckLinkNotificationCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Unsubscribe(
+        
+        virtual HRESULT STDMETHODCALLTYPE Unsubscribe( 
             /* [in] */ BMDNotifications topic,
             /* [in] */ IDeckLinkNotificationCallback *theCallback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkNotificationVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkNotification * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkNotification * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkNotification * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Subscribe )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Subscribe )( 
             IDeckLinkNotification * This,
             /* [in] */ BMDNotifications topic,
             /* [in] */ IDeckLinkNotificationCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *Unsubscribe )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Unsubscribe )( 
             IDeckLinkNotification * This,
             /* [in] */ BMDNotifications topic,
             /* [in] */ IDeckLinkNotificationCallback *theCallback);
-
+        
         END_INTERFACE
     } IDeckLinkNotificationVtbl;
 
@@ -8811,26 +8550,26 @@ EXTERN_C const IID IID_IDeckLinkNotification;
         CONST_VTBL struct IDeckLinkNotificationVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkNotification_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkNotification_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkNotification_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkNotification_Subscribe(This,topic,theCallback)	\
-    ( (This)->lpVtbl -> Subscribe(This,topic,theCallback) )
+    ( (This)->lpVtbl -> Subscribe(This,topic,theCallback) ) 
 
 #define IDeckLinkNotification_Unsubscribe(This,topic,theCallback)	\
-    ( (This)->lpVtbl -> Unsubscribe(This,topic,theCallback) )
+    ( (This)->lpVtbl -> Unsubscribe(This,topic,theCallback) ) 
 
 #endif /* COBJMACROS */
 
@@ -8843,112 +8582,112 @@ EXTERN_C const IID IID_IDeckLinkNotification;
 #endif 	/* __IDeckLinkNotification_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfileAttributes_INTERFACE_DEFINED__
-#define __IDeckLinkProfileAttributes_INTERFACE_DEFINED__
+#ifndef __IDeckLinkAttributes_INTERFACE_DEFINED__
+#define __IDeckLinkAttributes_INTERFACE_DEFINED__
 
-/* interface IDeckLinkProfileAttributes */
-/* [helpstring][local][uuid][object] */
+/* interface IDeckLinkAttributes */
+/* [helpstring][local][uuid][object] */ 
 
 
-EXTERN_C const IID IID_IDeckLinkProfileAttributes;
+EXTERN_C const IID IID_IDeckLinkAttributes;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("17D4BF8E-4911-473A-80A0-731CF6FF345B")
-    IDeckLinkProfileAttributes : public IUnknown
+    
+    MIDL_INTERFACE("ABC11843-D966-44CB-96E2-A1CB5D3135C4")
+    IDeckLinkAttributes : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkProfileAttributesVtbl
+    typedef struct IDeckLinkAttributesVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkProfileAttributes * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkAttributes * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkProfileAttributes * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkProfileAttributes * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
-            IDeckLinkProfileAttributes * This,
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkAttributes * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkAttributes * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
+            IDeckLinkAttributes * This,
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
-            IDeckLinkProfileAttributes * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
+            IDeckLinkAttributes * This,
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
-            IDeckLinkProfileAttributes * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
+            IDeckLinkAttributes * This,
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
-            IDeckLinkProfileAttributes * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
+            IDeckLinkAttributes * This,
             /* [in] */ BMDDeckLinkAttributeID cfgID,
             /* [out] */ BSTR *value);
-
+        
         END_INTERFACE
-    } IDeckLinkProfileAttributesVtbl;
+    } IDeckLinkAttributesVtbl;
 
-    interface IDeckLinkProfileAttributes
+    interface IDeckLinkAttributes
     {
-        CONST_VTBL struct IDeckLinkProfileAttributesVtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkAttributesVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkProfileAttributes_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+#define IDeckLinkAttributes_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
-#define IDeckLinkProfileAttributes_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+#define IDeckLinkAttributes_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
-#define IDeckLinkProfileAttributes_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+#define IDeckLinkAttributes_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
-#define IDeckLinkProfileAttributes_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+#define IDeckLinkAttributes_GetFlag(This,cfgID,value)	\
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
-#define IDeckLinkProfileAttributes_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+#define IDeckLinkAttributes_GetInt(This,cfgID,value)	\
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
-#define IDeckLinkProfileAttributes_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+#define IDeckLinkAttributes_GetFloat(This,cfgID,value)	\
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
-#define IDeckLinkProfileAttributes_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+#define IDeckLinkAttributes_GetString(This,cfgID,value)	\
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #endif /* COBJMACROS */
 
@@ -8958,77 +8697,129 @@ EXTERN_C const IID IID_IDeckLinkProfileAttributes;
 
 
 
-#endif 	/* __IDeckLinkProfileAttributes_INTERFACE_DEFINED__ */
+#endif 	/* __IDeckLinkAttributes_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfileIterator_INTERFACE_DEFINED__
-#define __IDeckLinkProfileIterator_INTERFACE_DEFINED__
+#ifndef __IDeckLinkStatus_INTERFACE_DEFINED__
+#define __IDeckLinkStatus_INTERFACE_DEFINED__
 
-/* interface IDeckLinkProfileIterator */
-/* [helpstring][uuid][object] */
+/* interface IDeckLinkStatus */
+/* [helpstring][local][uuid][object] */ 
 
 
-EXTERN_C const IID IID_IDeckLinkProfileIterator;
+EXTERN_C const IID IID_IDeckLinkStatus;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("29E5A8C0-8BE4-46EB-93AC-31DAAB5B7BF2")
-    IDeckLinkProfileIterator : public IUnknown
+    
+    MIDL_INTERFACE("5F558200-4028-49BC-BEAC-DB3FA4A96E46")
+    IDeckLinkStatus : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
-            /* [out] */ IDeckLinkProfile **profile) = 0;
-
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ BOOL *value) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ LONGLONG *value) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ double *value) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ BSTR *value) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ void *buffer,
+            /* [out][in] */ unsigned int *bufferSize) = 0;
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkProfileIteratorVtbl
+    typedef struct IDeckLinkStatusVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkProfileIterator * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkStatus * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkProfileIterator * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkProfileIterator * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
-            IDeckLinkProfileIterator * This,
-            /* [out] */ IDeckLinkProfile **profile);
-
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkStatus * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkStatus * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
+            IDeckLinkStatus * This,
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ BOOL *value);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
+            IDeckLinkStatus * This,
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ LONGLONG *value);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
+            IDeckLinkStatus * This,
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ double *value);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
+            IDeckLinkStatus * This,
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ BSTR *value);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
+            IDeckLinkStatus * This,
+            /* [in] */ BMDDeckLinkStatusID statusID,
+            /* [out] */ void *buffer,
+            /* [out][in] */ unsigned int *bufferSize);
+        
         END_INTERFACE
-    } IDeckLinkProfileIteratorVtbl;
+    } IDeckLinkStatusVtbl;
 
-    interface IDeckLinkProfileIterator
+    interface IDeckLinkStatus
     {
-        CONST_VTBL struct IDeckLinkProfileIteratorVtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkStatusVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkProfileIterator_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+#define IDeckLinkStatus_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
+
+#define IDeckLinkStatus_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
+
+#define IDeckLinkStatus_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
+
+
+#define IDeckLinkStatus_GetFlag(This,statusID,value)	\
+    ( (This)->lpVtbl -> GetFlag(This,statusID,value) ) 
 
-#define IDeckLinkProfileIterator_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+#define IDeckLinkStatus_GetInt(This,statusID,value)	\
+    ( (This)->lpVtbl -> GetInt(This,statusID,value) ) 
 
-#define IDeckLinkProfileIterator_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+#define IDeckLinkStatus_GetFloat(This,statusID,value)	\
+    ( (This)->lpVtbl -> GetFloat(This,statusID,value) ) 
 
+#define IDeckLinkStatus_GetString(This,statusID,value)	\
+    ( (This)->lpVtbl -> GetString(This,statusID,value) ) 
 
-#define IDeckLinkProfileIterator_Next(This,profile)	\
-    ( (This)->lpVtbl -> Next(This,profile) )
+#define IDeckLinkStatus_GetBytes(This,statusID,buffer,bufferSize)	\
+    ( (This)->lpVtbl -> GetBytes(This,statusID,buffer,bufferSize) ) 
 
 #endif /* COBJMACROS */
 
@@ -9038,105 +8829,115 @@ EXTERN_C const IID IID_IDeckLinkProfileIterator;
 
 
 
-#endif 	/* __IDeckLinkProfileIterator_INTERFACE_DEFINED__ */
+#endif 	/* __IDeckLinkStatus_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfile_INTERFACE_DEFINED__
-#define __IDeckLinkProfile_INTERFACE_DEFINED__
+#ifndef __IDeckLinkKeyer_INTERFACE_DEFINED__
+#define __IDeckLinkKeyer_INTERFACE_DEFINED__
 
-/* interface IDeckLinkProfile */
-/* [helpstring][local][uuid][object] */
+/* interface IDeckLinkKeyer */
+/* [helpstring][local][uuid][object] */ 
 
 
-EXTERN_C const IID IID_IDeckLinkProfile;
+EXTERN_C const IID IID_IDeckLinkKeyer;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("16093466-674A-432B-9DA0-1AC2C5A8241C")
-    IDeckLinkProfile : public IUnknown
+    
+    MIDL_INTERFACE("89AFCAF5-65F8-421E-98F7-96FE5F5BFBA3")
+    IDeckLinkKeyer : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetDevice(
-            /* [out] */ IDeckLink **device) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsActive(
-            /* [out] */ BOOL *isActive) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetActive( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPeers(
-            /* [out] */ IDeckLinkProfileIterator **profileIterator) = 0;
-
+        virtual HRESULT STDMETHODCALLTYPE Enable( 
+            /* [in] */ BOOL isExternal) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE SetLevel( 
+            /* [in] */ unsigned char level) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE RampUp( 
+            /* [in] */ unsigned int numberOfFrames) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE RampDown( 
+            /* [in] */ unsigned int numberOfFrames) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE Disable( void) = 0;
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkProfileVtbl
+    typedef struct IDeckLinkKeyerVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkProfile * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkKeyer * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkProfile * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkProfile * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDevice )(
-            IDeckLinkProfile * This,
-            /* [out] */ IDeckLink **device);
-
-        HRESULT ( STDMETHODCALLTYPE *IsActive )(
-            IDeckLinkProfile * This,
-            /* [out] */ BOOL *isActive);
-
-        HRESULT ( STDMETHODCALLTYPE *SetActive )(
-            IDeckLinkProfile * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPeers )(
-            IDeckLinkProfile * This,
-            /* [out] */ IDeckLinkProfileIterator **profileIterator);
-
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkKeyer * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkKeyer * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *Enable )( 
+            IDeckLinkKeyer * This,
+            /* [in] */ BOOL isExternal);
+        
+        HRESULT ( STDMETHODCALLTYPE *SetLevel )( 
+            IDeckLinkKeyer * This,
+            /* [in] */ unsigned char level);
+        
+        HRESULT ( STDMETHODCALLTYPE *RampUp )( 
+            IDeckLinkKeyer * This,
+            /* [in] */ unsigned int numberOfFrames);
+        
+        HRESULT ( STDMETHODCALLTYPE *RampDown )( 
+            IDeckLinkKeyer * This,
+            /* [in] */ unsigned int numberOfFrames);
+        
+        HRESULT ( STDMETHODCALLTYPE *Disable )( 
+            IDeckLinkKeyer * This);
+        
         END_INTERFACE
-    } IDeckLinkProfileVtbl;
+    } IDeckLinkKeyerVtbl;
 
-    interface IDeckLinkProfile
+    interface IDeckLinkKeyer
     {
-        CONST_VTBL struct IDeckLinkProfileVtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkKeyerVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkProfile_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+#define IDeckLinkKeyer_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
+
+#define IDeckLinkKeyer_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
-#define IDeckLinkProfile_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+#define IDeckLinkKeyer_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
 
-#define IDeckLinkProfile_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
 
+#define IDeckLinkKeyer_Enable(This,isExternal)	\
+    ( (This)->lpVtbl -> Enable(This,isExternal) ) 
 
-#define IDeckLinkProfile_GetDevice(This,device)	\
-    ( (This)->lpVtbl -> GetDevice(This,device) )
+#define IDeckLinkKeyer_SetLevel(This,level)	\
+    ( (This)->lpVtbl -> SetLevel(This,level) ) 
 
-#define IDeckLinkProfile_IsActive(This,isActive)	\
-    ( (This)->lpVtbl -> IsActive(This,isActive) )
+#define IDeckLinkKeyer_RampUp(This,numberOfFrames)	\
+    ( (This)->lpVtbl -> RampUp(This,numberOfFrames) ) 
 
-#define IDeckLinkProfile_SetActive(This)	\
-    ( (This)->lpVtbl -> SetActive(This) )
+#define IDeckLinkKeyer_RampDown(This,numberOfFrames)	\
+    ( (This)->lpVtbl -> RampDown(This,numberOfFrames) ) 
 
-#define IDeckLinkProfile_GetPeers(This,profileIterator)	\
-    ( (This)->lpVtbl -> GetPeers(This,profileIterator) )
+#define IDeckLinkKeyer_Disable(This)	\
+    ( (This)->lpVtbl -> Disable(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -9146,89 +8947,79 @@ EXTERN_C const IID IID_IDeckLinkProfile;
 
 
 
-#endif 	/* __IDeckLinkProfile_INTERFACE_DEFINED__ */
+#endif 	/* __IDeckLinkKeyer_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfileCallback_INTERFACE_DEFINED__
-#define __IDeckLinkProfileCallback_INTERFACE_DEFINED__
+#ifndef __IDeckLinkVideoConversion_INTERFACE_DEFINED__
+#define __IDeckLinkVideoConversion_INTERFACE_DEFINED__
 
-/* interface IDeckLinkProfileCallback */
-/* [helpstring][uuid][object] */
+/* interface IDeckLinkVideoConversion */
+/* [helpstring][local][uuid][object] */ 
 
 
-EXTERN_C const IID IID_IDeckLinkProfileCallback;
+EXTERN_C const IID IID_IDeckLinkVideoConversion;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("A4F9341E-97AA-4E04-8935-15F809898CEA")
-    IDeckLinkProfileCallback : public IUnknown
+    
+    MIDL_INTERFACE("3BBCB8A2-DA2C-42D9-B5D8-88083644E99A")
+    IDeckLinkVideoConversion : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE ProfileChanging(
-            /* [in] */ IDeckLinkProfile *profileToBeActivated,
-            /* [in] */ BOOL streamsWillBeForcedToStop) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ProfileActivated(
-            /* [in] */ IDeckLinkProfile *activatedProfile) = 0;
-
+        virtual HRESULT STDMETHODCALLTYPE ConvertFrame( 
+            /* [in] */ IDeckLinkVideoFrame *srcFrame,
+            /* [in] */ IDeckLinkVideoFrame *dstFrame) = 0;
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkProfileCallbackVtbl
+    typedef struct IDeckLinkVideoConversionVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkProfileCallback * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkVideoConversion * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkProfileCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkProfileCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ProfileChanging )(
-            IDeckLinkProfileCallback * This,
-            /* [in] */ IDeckLinkProfile *profileToBeActivated,
-            /* [in] */ BOOL streamsWillBeForcedToStop);
-
-        HRESULT ( STDMETHODCALLTYPE *ProfileActivated )(
-            IDeckLinkProfileCallback * This,
-            /* [in] */ IDeckLinkProfile *activatedProfile);
-
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkVideoConversion * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkVideoConversion * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *ConvertFrame )( 
+            IDeckLinkVideoConversion * This,
+            /* [in] */ IDeckLinkVideoFrame *srcFrame,
+            /* [in] */ IDeckLinkVideoFrame *dstFrame);
+        
         END_INTERFACE
-    } IDeckLinkProfileCallbackVtbl;
+    } IDeckLinkVideoConversionVtbl;
 
-    interface IDeckLinkProfileCallback
+    interface IDeckLinkVideoConversion
     {
-        CONST_VTBL struct IDeckLinkProfileCallbackVtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkVideoConversionVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkProfileCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkProfileCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+#define IDeckLinkVideoConversion_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
-#define IDeckLinkProfileCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+#define IDeckLinkVideoConversion_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
+#define IDeckLinkVideoConversion_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
 
-#define IDeckLinkProfileCallback_ProfileChanging(This,profileToBeActivated,streamsWillBeForcedToStop)	\
-    ( (This)->lpVtbl -> ProfileChanging(This,profileToBeActivated,streamsWillBeForcedToStop) )
 
-#define IDeckLinkProfileCallback_ProfileActivated(This,activatedProfile)	\
-    ( (This)->lpVtbl -> ProfileActivated(This,activatedProfile) )
+#define IDeckLinkVideoConversion_ConvertFrame(This,srcFrame,dstFrame)	\
+    ( (This)->lpVtbl -> ConvertFrame(This,srcFrame,dstFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -9238,99 +9029,87 @@ EXTERN_C const IID IID_IDeckLinkProfileCallback;
 
 
 
-#endif 	/* __IDeckLinkProfileCallback_INTERFACE_DEFINED__ */
+#endif 	/* __IDeckLinkVideoConversion_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkProfileManager_INTERFACE_DEFINED__
-#define __IDeckLinkProfileManager_INTERFACE_DEFINED__
+#ifndef __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__
+#define __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__
 
-/* interface IDeckLinkProfileManager */
-/* [helpstring][uuid][object] */
+/* interface IDeckLinkDeviceNotificationCallback */
+/* [helpstring][uuid][object] */ 
 
 
-EXTERN_C const IID IID_IDeckLinkProfileManager;
+EXTERN_C const IID IID_IDeckLinkDeviceNotificationCallback;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("30D41429-3998-4B6D-84F8-78C94A797C6E")
-    IDeckLinkProfileManager : public IUnknown
+    
+    MIDL_INTERFACE("4997053B-0ADF-4CC8-AC70-7A50C4BE728F")
+    IDeckLinkDeviceNotificationCallback : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetProfiles(
-            /* [out] */ IDeckLinkProfileIterator **profileIterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetProfile(
-            /* [in] */ BMDProfileID profileID,
-            /* [out] */ IDeckLinkProfile **profile) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
-            /* [in] */ IDeckLinkProfileCallback *callback) = 0;
-
+        virtual HRESULT STDMETHODCALLTYPE DeckLinkDeviceArrived( 
+            /* [in] */ IDeckLink *deckLinkDevice) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE DeckLinkDeviceRemoved( 
+            /* [in] */ IDeckLink *deckLinkDevice) = 0;
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkProfileManagerVtbl
+    typedef struct IDeckLinkDeviceNotificationCallbackVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkProfileManager * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkDeviceNotificationCallback * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkProfileManager * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkProfileManager * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetProfiles )(
-            IDeckLinkProfileManager * This,
-            /* [out] */ IDeckLinkProfileIterator **profileIterator);
-
-        HRESULT ( STDMETHODCALLTYPE *GetProfile )(
-            IDeckLinkProfileManager * This,
-            /* [in] */ BMDProfileID profileID,
-            /* [out] */ IDeckLinkProfile **profile);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
-            IDeckLinkProfileManager * This,
-            /* [in] */ IDeckLinkProfileCallback *callback);
-
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkDeviceNotificationCallback * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkDeviceNotificationCallback * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckLinkDeviceArrived )( 
+            IDeckLinkDeviceNotificationCallback * This,
+            /* [in] */ IDeckLink *deckLinkDevice);
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckLinkDeviceRemoved )( 
+            IDeckLinkDeviceNotificationCallback * This,
+            /* [in] */ IDeckLink *deckLinkDevice);
+        
         END_INTERFACE
-    } IDeckLinkProfileManagerVtbl;
+    } IDeckLinkDeviceNotificationCallbackVtbl;
 
-    interface IDeckLinkProfileManager
+    interface IDeckLinkDeviceNotificationCallback
     {
-        CONST_VTBL struct IDeckLinkProfileManagerVtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkDeviceNotificationCallbackVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkProfileManager_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkProfileManager_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+#define IDeckLinkDeviceNotificationCallback_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
-#define IDeckLinkProfileManager_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+#define IDeckLinkDeviceNotificationCallback_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
+#define IDeckLinkDeviceNotificationCallback_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
 
-#define IDeckLinkProfileManager_GetProfiles(This,profileIterator)	\
-    ( (This)->lpVtbl -> GetProfiles(This,profileIterator) )
 
-#define IDeckLinkProfileManager_GetProfile(This,profileID,profile)	\
-    ( (This)->lpVtbl -> GetProfile(This,profileID,profile) )
+#define IDeckLinkDeviceNotificationCallback_DeckLinkDeviceArrived(This,deckLinkDevice)	\
+    ( (This)->lpVtbl -> DeckLinkDeviceArrived(This,deckLinkDevice) ) 
 
-#define IDeckLinkProfileManager_SetCallback(This,callback)	\
-    ( (This)->lpVtbl -> SetCallback(This,callback) )
+#define IDeckLinkDeviceNotificationCallback_DeckLinkDeviceRemoved(This,deckLinkDevice)	\
+    ( (This)->lpVtbl -> DeckLinkDeviceRemoved(This,deckLinkDevice) ) 
 
 #endif /* COBJMACROS */
 
@@ -9340,1597 +9119,85 @@ EXTERN_C const IID IID_IDeckLinkProfileManager;
 
 
 
-#endif 	/* __IDeckLinkProfileManager_INTERFACE_DEFINED__ */
+#endif 	/* __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__ */
 
 
-#ifndef __IDeckLinkStatus_INTERFACE_DEFINED__
-#define __IDeckLinkStatus_INTERFACE_DEFINED__
+#ifndef __IDeckLinkDiscovery_INTERFACE_DEFINED__
+#define __IDeckLinkDiscovery_INTERFACE_DEFINED__
 
-/* interface IDeckLinkStatus */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkStatus;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("5F558200-4028-49BC-BEAC-DB3FA4A96E46")
-    IDeckLinkStatus : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ BSTR *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ void *buffer,
-            /* [out][in] */ unsigned int *bufferSize) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkStatusVtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkStatus * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkStatus * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkStatus * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
-            IDeckLinkStatus * This,
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
-            IDeckLinkStatus * This,
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
-            IDeckLinkStatus * This,
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
-            IDeckLinkStatus * This,
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
-            IDeckLinkStatus * This,
-            /* [in] */ BMDDeckLinkStatusID statusID,
-            /* [out] */ void *buffer,
-            /* [out][in] */ unsigned int *bufferSize);
-
-        END_INTERFACE
-    } IDeckLinkStatusVtbl;
-
-    interface IDeckLinkStatus
-    {
-        CONST_VTBL struct IDeckLinkStatusVtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkStatus_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkStatus_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkStatus_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkStatus_GetFlag(This,statusID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,statusID,value) )
-
-#define IDeckLinkStatus_GetInt(This,statusID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,statusID,value) )
-
-#define IDeckLinkStatus_GetFloat(This,statusID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,statusID,value) )
-
-#define IDeckLinkStatus_GetString(This,statusID,value)	\
-    ( (This)->lpVtbl -> GetString(This,statusID,value) )
-
-#define IDeckLinkStatus_GetBytes(This,statusID,buffer,bufferSize)	\
-    ( (This)->lpVtbl -> GetBytes(This,statusID,buffer,bufferSize) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkStatus_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkKeyer_INTERFACE_DEFINED__
-#define __IDeckLinkKeyer_INTERFACE_DEFINED__
-
-/* interface IDeckLinkKeyer */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkKeyer;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("89AFCAF5-65F8-421E-98F7-96FE5F5BFBA3")
-    IDeckLinkKeyer : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE Enable(
-            /* [in] */ BOOL isExternal) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetLevel(
-            /* [in] */ unsigned char level) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE RampUp(
-            /* [in] */ unsigned int numberOfFrames) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE RampDown(
-            /* [in] */ unsigned int numberOfFrames) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Disable( void) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkKeyerVtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkKeyer * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkKeyer * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkKeyer * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Enable )(
-            IDeckLinkKeyer * This,
-            /* [in] */ BOOL isExternal);
-
-        HRESULT ( STDMETHODCALLTYPE *SetLevel )(
-            IDeckLinkKeyer * This,
-            /* [in] */ unsigned char level);
-
-        HRESULT ( STDMETHODCALLTYPE *RampUp )(
-            IDeckLinkKeyer * This,
-            /* [in] */ unsigned int numberOfFrames);
-
-        HRESULT ( STDMETHODCALLTYPE *RampDown )(
-            IDeckLinkKeyer * This,
-            /* [in] */ unsigned int numberOfFrames);
-
-        HRESULT ( STDMETHODCALLTYPE *Disable )(
-            IDeckLinkKeyer * This);
-
-        END_INTERFACE
-    } IDeckLinkKeyerVtbl;
-
-    interface IDeckLinkKeyer
-    {
-        CONST_VTBL struct IDeckLinkKeyerVtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkKeyer_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkKeyer_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkKeyer_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkKeyer_Enable(This,isExternal)	\
-    ( (This)->lpVtbl -> Enable(This,isExternal) )
-
-#define IDeckLinkKeyer_SetLevel(This,level)	\
-    ( (This)->lpVtbl -> SetLevel(This,level) )
-
-#define IDeckLinkKeyer_RampUp(This,numberOfFrames)	\
-    ( (This)->lpVtbl -> RampUp(This,numberOfFrames) )
-
-#define IDeckLinkKeyer_RampDown(This,numberOfFrames)	\
-    ( (This)->lpVtbl -> RampDown(This,numberOfFrames) )
-
-#define IDeckLinkKeyer_Disable(This)	\
-    ( (This)->lpVtbl -> Disable(This) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkKeyer_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkVideoConversion_INTERFACE_DEFINED__
-#define __IDeckLinkVideoConversion_INTERFACE_DEFINED__
-
-/* interface IDeckLinkVideoConversion */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkVideoConversion;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("3BBCB8A2-DA2C-42D9-B5D8-88083644E99A")
-    IDeckLinkVideoConversion : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE ConvertFrame(
-            /* [in] */ IDeckLinkVideoFrame *srcFrame,
-            /* [in] */ IDeckLinkVideoFrame *dstFrame) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkVideoConversionVtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkVideoConversion * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkVideoConversion * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkVideoConversion * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ConvertFrame )(
-            IDeckLinkVideoConversion * This,
-            /* [in] */ IDeckLinkVideoFrame *srcFrame,
-            /* [in] */ IDeckLinkVideoFrame *dstFrame);
-
-        END_INTERFACE
-    } IDeckLinkVideoConversionVtbl;
-
-    interface IDeckLinkVideoConversion
-    {
-        CONST_VTBL struct IDeckLinkVideoConversionVtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkVideoConversion_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkVideoConversion_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkVideoConversion_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkVideoConversion_ConvertFrame(This,srcFrame,dstFrame)	\
-    ( (This)->lpVtbl -> ConvertFrame(This,srcFrame,dstFrame) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkVideoConversion_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__
-#define __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__
-
-/* interface IDeckLinkDeviceNotificationCallback */
-/* [helpstring][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkDeviceNotificationCallback;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("4997053B-0ADF-4CC8-AC70-7A50C4BE728F")
-    IDeckLinkDeviceNotificationCallback : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE DeckLinkDeviceArrived(
-            /* [in] */ IDeckLink *deckLinkDevice) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DeckLinkDeviceRemoved(
-            /* [in] */ IDeckLink *deckLinkDevice) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkDeviceNotificationCallbackVtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkDeviceNotificationCallback * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkDeviceNotificationCallback * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkDeviceNotificationCallback * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckLinkDeviceArrived )(
-            IDeckLinkDeviceNotificationCallback * This,
-            /* [in] */ IDeckLink *deckLinkDevice);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckLinkDeviceRemoved )(
-            IDeckLinkDeviceNotificationCallback * This,
-            /* [in] */ IDeckLink *deckLinkDevice);
-
-        END_INTERFACE
-    } IDeckLinkDeviceNotificationCallbackVtbl;
-
-    interface IDeckLinkDeviceNotificationCallback
-    {
-        CONST_VTBL struct IDeckLinkDeviceNotificationCallbackVtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkDeviceNotificationCallback_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkDeviceNotificationCallback_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkDeviceNotificationCallback_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkDeviceNotificationCallback_DeckLinkDeviceArrived(This,deckLinkDevice)	\
-    ( (This)->lpVtbl -> DeckLinkDeviceArrived(This,deckLinkDevice) )
-
-#define IDeckLinkDeviceNotificationCallback_DeckLinkDeviceRemoved(This,deckLinkDevice)	\
-    ( (This)->lpVtbl -> DeckLinkDeviceRemoved(This,deckLinkDevice) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkDeviceNotificationCallback_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkDiscovery_INTERFACE_DEFINED__
-#define __IDeckLinkDiscovery_INTERFACE_DEFINED__
-
-/* interface IDeckLinkDiscovery */
-/* [helpstring][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkDiscovery;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("CDBF631C-BC76-45FA-B44D-C55059BC6101")
-    IDeckLinkDiscovery : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE InstallDeviceNotifications(
-            /* [in] */ IDeckLinkDeviceNotificationCallback *deviceNotificationCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE UninstallDeviceNotifications( void) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkDiscoveryVtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkDiscovery * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkDiscovery * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkDiscovery * This);
-
-        HRESULT ( STDMETHODCALLTYPE *InstallDeviceNotifications )(
-            IDeckLinkDiscovery * This,
-            /* [in] */ IDeckLinkDeviceNotificationCallback *deviceNotificationCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *UninstallDeviceNotifications )(
-            IDeckLinkDiscovery * This);
-
-        END_INTERFACE
-    } IDeckLinkDiscoveryVtbl;
-
-    interface IDeckLinkDiscovery
-    {
-        CONST_VTBL struct IDeckLinkDiscoveryVtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkDiscovery_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkDiscovery_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkDiscovery_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkDiscovery_InstallDeviceNotifications(This,deviceNotificationCallback)	\
-    ( (This)->lpVtbl -> InstallDeviceNotifications(This,deviceNotificationCallback) )
-
-#define IDeckLinkDiscovery_UninstallDeviceNotifications(This)	\
-    ( (This)->lpVtbl -> UninstallDeviceNotifications(This) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkDiscovery_INTERFACE_DEFINED__ */
-
-
-EXTERN_C const CLSID CLSID_CDeckLinkIterator;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("BA6C6F44-6DA5-4DCE-94AA-EE2D1372A676")
-CDeckLinkIterator;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkAPIInformation;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("263CA19F-ED09-482E-9F9D-84005783A237")
-CDeckLinkAPIInformation;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkGLScreenPreviewHelper;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("F63E77C7-B655-4A4A-9AD0-3CA85D394343")
-CDeckLinkGLScreenPreviewHelper;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkDX9ScreenPreviewHelper;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("CC010023-E01D-4525-9D59-80C8AB3DC7A0")
-CDeckLinkDX9ScreenPreviewHelper;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkVideoConversion;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("7DBBBB11-5B7B-467D-AEA4-CEA468FD368C")
-CDeckLinkVideoConversion;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkDiscovery;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("22FBFC33-8D07-495C-A5BF-DAB5EA9B82DB")
-CDeckLinkDiscovery;
-#endif
-
-EXTERN_C const CLSID CLSID_CDeckLinkVideoFrameAncillaryPackets;
-
-#ifdef __cplusplus
-
-class DECLSPEC_UUID("F891AD29-D0C2-46E9-A926-4E2D0DD8CFAD")
-CDeckLinkVideoFrameAncillaryPackets;
-#endif
-
-#ifndef __IDeckLinkConfiguration_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkConfiguration_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkConfiguration_v10_11 */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkConfiguration_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("EF90380B-4AE5-4346-9077-E288E149F129")
-    IDeckLinkConfiguration_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ BSTR *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkConfiguration_v10_11Vtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkConfiguration_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkConfiguration_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
-            IDeckLinkConfiguration_v10_11 * This,
-            /* [in] */ BMDDeckLinkConfigurationID cfgID,
-            /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
-            IDeckLinkConfiguration_v10_11 * This);
-
-        END_INTERFACE
-    } IDeckLinkConfiguration_v10_11Vtbl;
-
-    interface IDeckLinkConfiguration_v10_11
-    {
-        CONST_VTBL struct IDeckLinkConfiguration_v10_11Vtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkConfiguration_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkConfiguration_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkConfiguration_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkConfiguration_v10_11_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
-
-#define IDeckLinkConfiguration_v10_11_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkConfiguration_v10_11_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkAttributes_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkAttributes_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkAttributes_v10_11 */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkAttributes_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("ABC11843-D966-44CB-96E2-A1CB5D3135C4")
-    IDeckLinkAttributes_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ BSTR *value) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkAttributes_v10_11Vtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkAttributes_v10_11 * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkAttributes_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkAttributes_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
-            IDeckLinkAttributes_v10_11 * This,
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
-            IDeckLinkAttributes_v10_11 * This,
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
-            IDeckLinkAttributes_v10_11 * This,
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
-            IDeckLinkAttributes_v10_11 * This,
-            /* [in] */ BMDDeckLinkAttributeID cfgID,
-            /* [out] */ BSTR *value);
-
-        END_INTERFACE
-    } IDeckLinkAttributes_v10_11Vtbl;
-
-    interface IDeckLinkAttributes_v10_11
-    {
-        CONST_VTBL struct IDeckLinkAttributes_v10_11Vtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkAttributes_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkAttributes_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkAttributes_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkAttributes_v10_11_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
-
-#define IDeckLinkAttributes_v10_11_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
-
-#define IDeckLinkAttributes_v10_11_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
-
-#define IDeckLinkAttributes_v10_11_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkAttributes_v10_11_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkNotification_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkNotification_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkNotification_v10_11 */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkNotification_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("0A1FB207-E215-441B-9B19-6FA1575946C5")
-    IDeckLinkNotification_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE Subscribe(
-            /* [in] */ BMDNotifications topic,
-            /* [in] */ IDeckLinkNotificationCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Unsubscribe(
-            /* [in] */ BMDNotifications topic,
-            /* [in] */ IDeckLinkNotificationCallback *theCallback) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkNotification_v10_11Vtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkNotification_v10_11 * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkNotification_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkNotification_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Subscribe )(
-            IDeckLinkNotification_v10_11 * This,
-            /* [in] */ BMDNotifications topic,
-            /* [in] */ IDeckLinkNotificationCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *Unsubscribe )(
-            IDeckLinkNotification_v10_11 * This,
-            /* [in] */ BMDNotifications topic,
-            /* [in] */ IDeckLinkNotificationCallback *theCallback);
-
-        END_INTERFACE
-    } IDeckLinkNotification_v10_11Vtbl;
-
-    interface IDeckLinkNotification_v10_11
-    {
-        CONST_VTBL struct IDeckLinkNotification_v10_11Vtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkNotification_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkNotification_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkNotification_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkNotification_v10_11_Subscribe(This,topic,theCallback)	\
-    ( (This)->lpVtbl -> Subscribe(This,topic,theCallback) )
-
-#define IDeckLinkNotification_v10_11_Unsubscribe(This,topic,theCallback)	\
-    ( (This)->lpVtbl -> Unsubscribe(This,topic,theCallback) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkNotification_v10_11_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkOutput_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkOutput_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkOutput_v10_11 */
-/* [helpstring][local][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkOutput_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("CC5C8A6E-3F2F-4B3A-87EA-FD78AF300564")
-    IDeckLinkOutput_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoOutputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
-            /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDVideoOutputFlags flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
-            /* [in] */ int width,
-            /* [in] */ int height,
-            /* [in] */ int rowBytes,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDFrameFlags flags,
-            /* [out] */ IDeckLinkMutableVideoFrame **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData(
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
-            /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
-            /* [in] */ IDeckLinkVideoFrame *theFrame,
-            /* [in] */ BMDTimeValue displayTime,
-            /* [in] */ BMDTimeValue displayDuration,
-            /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
-            /* [in] */ IDeckLinkVideoOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount(
-            /* [out] */ unsigned int *bufferedFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount,
-            /* [in] */ BMDAudioOutputStreamType streamType) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
-            /* [in] */ void *buffer,
-            /* [in] */ unsigned int sampleFrameCount,
-            /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
-            /* [in] */ void *buffer,
-            /* [in] */ unsigned int sampleFrameCount,
-            /* [in] */ BMDTimeValue streamTime,
-            /* [in] */ BMDTimeScale timeScale,
-            /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
-            /* [out] */ unsigned int *bufferedSampleFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
-            /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
-            /* [in] */ BMDTimeValue playbackStartTime,
-            /* [in] */ BMDTimeScale timeScale,
-            /* [in] */ double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
-            /* [in] */ BMDTimeValue stopPlaybackAtTime,
-            /* [out] */ BMDTimeValue *actualStopTime,
-            /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning(
-            /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime(
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *streamTime,
-            /* [out] */ double *playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetReferenceStatus(
-            /* [out] */ BMDReferenceStatus *referenceStatus) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameCompletionReferenceTimestamp(
-            /* [in] */ IDeckLinkVideoFrame *theFrame,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *frameCompletionTimestamp) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkOutput_v10_11Vtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkOutput_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoOutputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDVideoOutputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ int width,
-            /* [in] */ int height,
-            /* [in] */ int rowBytes,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDFrameFlags flags,
-            /* [out] */ IDeckLinkMutableVideoFrame **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkVideoFrame *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkVideoFrame *theFrame,
-            /* [in] */ BMDTimeValue displayTime,
-            /* [in] */ BMDTimeValue displayDuration,
-            /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkVideoOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [out] */ unsigned int *bufferedFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount,
-            /* [in] */ BMDAudioOutputStreamType streamType);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ void *buffer,
-            /* [in] */ unsigned int sampleFrameCount,
-            /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ void *buffer,
-            /* [in] */ unsigned int sampleFrameCount,
-            /* [in] */ BMDTimeValue streamTime,
-            /* [in] */ BMDTimeScale timeScale,
-            /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [out] */ unsigned int *bufferedSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
-            IDeckLinkOutput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDTimeValue playbackStartTime,
-            /* [in] */ BMDTimeScale timeScale,
-            /* [in] */ double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDTimeValue stopPlaybackAtTime,
-            /* [out] */ BMDTimeValue *actualStopTime,
-            /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *streamTime,
-            /* [out] */ double *playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *GetReferenceStatus )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [out] */ BMDReferenceStatus *referenceStatus);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameCompletionReferenceTimestamp )(
-            IDeckLinkOutput_v10_11 * This,
-            /* [in] */ IDeckLinkVideoFrame *theFrame,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *frameCompletionTimestamp);
-
-        END_INTERFACE
-    } IDeckLinkOutput_v10_11Vtbl;
-
-    interface IDeckLinkOutput_v10_11
-    {
-        CONST_VTBL struct IDeckLinkOutput_v10_11Vtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkOutput_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkOutput_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkOutput_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkOutput_v10_11_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) )
-
-#define IDeckLinkOutput_v10_11_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
-
-#define IDeckLinkOutput_v10_11_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
-
-#define IDeckLinkOutput_v10_11_EnableVideoOutput(This,displayMode,flags)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) )
-
-#define IDeckLinkOutput_v10_11_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
-
-#define IDeckLinkOutput_v10_11_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
-
-#define IDeckLinkOutput_v10_11_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
-
-#define IDeckLinkOutput_v10_11_CreateAncillaryData(This,pixelFormat,outBuffer)	\
-    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) )
-
-#define IDeckLinkOutput_v10_11_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
-
-#define IDeckLinkOutput_v10_11_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
-
-#define IDeckLinkOutput_v10_11_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
-
-#define IDeckLinkOutput_v10_11_GetBufferedVideoFrameCount(This,bufferedFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) )
-
-#define IDeckLinkOutput_v10_11_EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) )
-
-#define IDeckLinkOutput_v10_11_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
-
-#define IDeckLinkOutput_v10_11_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
-
-#define IDeckLinkOutput_v10_11_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
-
-#define IDeckLinkOutput_v10_11_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
-
-#define IDeckLinkOutput_v10_11_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
-
-#define IDeckLinkOutput_v10_11_GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) )
-
-#define IDeckLinkOutput_v10_11_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
-
-#define IDeckLinkOutput_v10_11_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
-
-#define IDeckLinkOutput_v10_11_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
-
-#define IDeckLinkOutput_v10_11_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
-
-#define IDeckLinkOutput_v10_11_IsScheduledPlaybackRunning(This,active)	\
-    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) )
-
-#define IDeckLinkOutput_v10_11_GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed)	\
-    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) )
-
-#define IDeckLinkOutput_v10_11_GetReferenceStatus(This,referenceStatus)	\
-    ( (This)->lpVtbl -> GetReferenceStatus(This,referenceStatus) )
-
-#define IDeckLinkOutput_v10_11_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
-
-#define IDeckLinkOutput_v10_11_GetFrameCompletionReferenceTimestamp(This,theFrame,desiredTimeScale,frameCompletionTimestamp)	\
-    ( (This)->lpVtbl -> GetFrameCompletionReferenceTimestamp(This,theFrame,desiredTimeScale,frameCompletionTimestamp) )
-
-#endif /* COBJMACROS */
-
-
-#endif 	/* C style interface */
-
-
-
-
-#endif 	/* __IDeckLinkOutput_v10_11_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkInput_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkInput_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkInput_v10_11 */
-/* [helpstring][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkInput_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("AF22762B-DFAC-4846-AA79-FA8883560995")
-    IDeckLinkInput_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
-            /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount(
-            /* [out] */ unsigned int *availableFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoInputFrameMemoryAllocator(
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
-            /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
+/* interface IDeckLinkDiscovery */
+/* [helpstring][uuid][object] */ 
 
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
-            /* [in] */ IDeckLinkInputCallback *theCallback) = 0;
 
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
+EXTERN_C const IID IID_IDeckLinkDiscovery;
 
+#if defined(__cplusplus) && !defined(CINTERFACE)
+    
+    MIDL_INTERFACE("CDBF631C-BC76-45FA-B44D-C55059BC6101")
+    IDeckLinkDiscovery : public IUnknown
+    {
+    public:
+        virtual HRESULT STDMETHODCALLTYPE InstallDeviceNotifications( 
+            /* [in] */ IDeckLinkDeviceNotificationCallback *deviceNotificationCallback) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE UninstallDeviceNotifications( void) = 0;
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
-    typedef struct IDeckLinkInput_v10_11Vtbl
+    typedef struct IDeckLinkDiscoveryVtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkInput_v10_11 * This,
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
+            IDeckLinkDiscovery * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkInput_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
-            IDeckLinkInput_v10_11 * This,
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )(
-            IDeckLinkInput_v10_11 * This,
-            /* [out] */ unsigned int *availableFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoInputFrameMemoryAllocator )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
-            IDeckLinkInput_v10_11 * This,
-            /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
-            IDeckLinkInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ IDeckLinkInputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
-            IDeckLinkInput_v10_11 * This,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
+            IDeckLinkDiscovery * This);
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
+            IDeckLinkDiscovery * This);
+        
+        HRESULT ( STDMETHODCALLTYPE *InstallDeviceNotifications )( 
+            IDeckLinkDiscovery * This,
+            /* [in] */ IDeckLinkDeviceNotificationCallback *deviceNotificationCallback);
+        
+        HRESULT ( STDMETHODCALLTYPE *UninstallDeviceNotifications )( 
+            IDeckLinkDiscovery * This);
+        
         END_INTERFACE
-    } IDeckLinkInput_v10_11Vtbl;
+    } IDeckLinkDiscoveryVtbl;
 
-    interface IDeckLinkInput_v10_11
+    interface IDeckLinkDiscovery
     {
-        CONST_VTBL struct IDeckLinkInput_v10_11Vtbl *lpVtbl;
+        CONST_VTBL struct IDeckLinkDiscoveryVtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
-#define IDeckLinkInput_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkInput_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkInput_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkInput_v10_11_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) )
-
-#define IDeckLinkInput_v10_11_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
-
-#define IDeckLinkInput_v10_11_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
-
-#define IDeckLinkInput_v10_11_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
-
-#define IDeckLinkInput_v10_11_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
-
-#define IDeckLinkInput_v10_11_GetAvailableVideoFrameCount(This,availableFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) )
-
-#define IDeckLinkInput_v10_11_SetVideoInputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoInputFrameMemoryAllocator(This,theAllocator) )
-
-#define IDeckLinkInput_v10_11_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
-
-#define IDeckLinkInput_v10_11_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
-
-#define IDeckLinkInput_v10_11_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
-
-#define IDeckLinkInput_v10_11_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+#define IDeckLinkDiscovery_QueryInterface(This,riid,ppvObject)	\
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
-#define IDeckLinkInput_v10_11_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+#define IDeckLinkDiscovery_AddRef(This)	\
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
-#define IDeckLinkInput_v10_11_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+#define IDeckLinkDiscovery_Release(This)	\
+    ( (This)->lpVtbl -> Release(This) ) 
 
-#define IDeckLinkInput_v10_11_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
 
-#define IDeckLinkInput_v10_11_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+#define IDeckLinkDiscovery_InstallDeviceNotifications(This,deviceNotificationCallback)	\
+    ( (This)->lpVtbl -> InstallDeviceNotifications(This,deviceNotificationCallback) ) 
 
-#define IDeckLinkInput_v10_11_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+#define IDeckLinkDiscovery_UninstallDeviceNotifications(This)	\
+    ( (This)->lpVtbl -> UninstallDeviceNotifications(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -10940,370 +9207,178 @@ EXTERN_C const IID IID_IDeckLinkInput_v10_11;
 
 
 
-#endif 	/* __IDeckLinkInput_v10_11_INTERFACE_DEFINED__ */
-
-
-#ifndef __IDeckLinkEncoderInput_v10_11_INTERFACE_DEFINED__
-#define __IDeckLinkEncoderInput_v10_11_INTERFACE_DEFINED__
-
-/* interface IDeckLinkEncoderInput_v10_11 */
-/* [helpstring][uuid][object] */
-
-
-EXTERN_C const IID IID_IDeckLinkEncoderInput_v10_11;
-
-#if defined(__cplusplus) && !defined(CINTERFACE)
-
-    MIDL_INTERFACE("270587DA-6B7D-42E7-A1F0-6D853F581185")
-    IDeckLinkEncoderInput_v10_11 : public IUnknown
-    {
-    public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailablePacketsCount(
-            /* [out] */ unsigned int *availablePacketsCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetMemoryAllocator(
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
-            /* [in] */ BMDAudioFormat audioFormat,
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
-            /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
-            /* [in] */ IDeckLinkEncoderInputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
-    };
-
-
-#else 	/* C style interface */
-
-    typedef struct IDeckLinkEncoderInput_v10_11Vtbl
-    {
-        BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
-            _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
-            /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ BMDDisplayMode displayMode,
-            /* [in] */ BMDPixelFormat pixelFormat,
-            /* [in] */ BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailablePacketsCount )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [out] */ unsigned int *availablePacketsCount);
-
-        HRESULT ( STDMETHODCALLTYPE *SetMemoryAllocator )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ BMDAudioFormat audioFormat,
-            /* [in] */ BMDAudioSampleRate sampleRate,
-            /* [in] */ BMDAudioSampleType sampleType,
-            /* [in] */ unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
-            IDeckLinkEncoderInput_v10_11 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ IDeckLinkEncoderInputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
-            IDeckLinkEncoderInput_v10_11 * This,
-            /* [in] */ BMDTimeScale desiredTimeScale,
-            /* [out] */ BMDTimeValue *hardwareTime,
-            /* [out] */ BMDTimeValue *timeInFrame,
-            /* [out] */ BMDTimeValue *ticksPerFrame);
-
-        END_INTERFACE
-    } IDeckLinkEncoderInput_v10_11Vtbl;
-
-    interface IDeckLinkEncoderInput_v10_11
-    {
-        CONST_VTBL struct IDeckLinkEncoderInput_v10_11Vtbl *lpVtbl;
-    };
-
-
-
-#ifdef COBJMACROS
-
-
-#define IDeckLinkEncoderInput_v10_11_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
-
-#define IDeckLinkEncoderInput_v10_11_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
-
-#define IDeckLinkEncoderInput_v10_11_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
-
-
-#define IDeckLinkEncoderInput_v10_11_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) )
-
-#define IDeckLinkEncoderInput_v10_11_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
-
-#define IDeckLinkEncoderInput_v10_11_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
-
-#define IDeckLinkEncoderInput_v10_11_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
-
-#define IDeckLinkEncoderInput_v10_11_GetAvailablePacketsCount(This,availablePacketsCount)	\
-    ( (This)->lpVtbl -> GetAvailablePacketsCount(This,availablePacketsCount) )
-
-#define IDeckLinkEncoderInput_v10_11_SetMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetMemoryAllocator(This,theAllocator) )
-
-#define IDeckLinkEncoderInput_v10_11_EnableAudioInput(This,audioFormat,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,audioFormat,sampleRate,sampleType,channelCount) )
+#endif 	/* __IDeckLinkDiscovery_INTERFACE_DEFINED__ */
 
-#define IDeckLinkEncoderInput_v10_11_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
 
-#define IDeckLinkEncoderInput_v10_11_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+EXTERN_C const CLSID CLSID_CDeckLinkIterator;
 
-#define IDeckLinkEncoderInput_v10_11_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+#ifdef __cplusplus
 
-#define IDeckLinkEncoderInput_v10_11_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+class DECLSPEC_UUID("87D2693F-8D4A-45C7-B43F-10ACBA25E68F")
+CDeckLinkIterator;
+#endif
 
-#define IDeckLinkEncoderInput_v10_11_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+EXTERN_C const CLSID CLSID_CDeckLinkAPIInformation;
 
-#define IDeckLinkEncoderInput_v10_11_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+#ifdef __cplusplus
 
-#define IDeckLinkEncoderInput_v10_11_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+class DECLSPEC_UUID("263CA19F-ED09-482E-9F9D-84005783A237")
+CDeckLinkAPIInformation;
+#endif
 
-#define IDeckLinkEncoderInput_v10_11_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+EXTERN_C const CLSID CLSID_CDeckLinkGLScreenPreviewHelper;
 
-#endif /* COBJMACROS */
+#ifdef __cplusplus
 
+class DECLSPEC_UUID("F63E77C7-B655-4A4A-9AD0-3CA85D394343")
+CDeckLinkGLScreenPreviewHelper;
+#endif
 
-#endif 	/* C style interface */
+EXTERN_C const CLSID CLSID_CDeckLinkDX9ScreenPreviewHelper;
 
+#ifdef __cplusplus
 
+class DECLSPEC_UUID("CC010023-E01D-4525-9D59-80C8AB3DC7A0")
+CDeckLinkDX9ScreenPreviewHelper;
+#endif
 
+EXTERN_C const CLSID CLSID_CDeckLinkVideoConversion;
 
-#endif 	/* __IDeckLinkEncoderInput_v10_11_INTERFACE_DEFINED__ */
+#ifdef __cplusplus
 
+class DECLSPEC_UUID("7DBBBB11-5B7B-467D-AEA4-CEA468FD368C")
+CDeckLinkVideoConversion;
+#endif
 
-EXTERN_C const CLSID CLSID_CDeckLinkIterator_v10_11;
+EXTERN_C const CLSID CLSID_CDeckLinkDiscovery;
 
 #ifdef __cplusplus
 
-class DECLSPEC_UUID("87D2693F-8D4A-45C7-B43F-10ACBA25E68F")
-CDeckLinkIterator_v10_11;
+class DECLSPEC_UUID("652615D4-26CD-4514-B161-2FD5072ED008")
+CDeckLinkDiscovery;
 #endif
 
-EXTERN_C const CLSID CLSID_CDeckLinkDiscovery_v10_11;
+EXTERN_C const CLSID CLSID_CDeckLinkVideoFrameAncillaryPackets;
 
 #ifdef __cplusplus
 
-class DECLSPEC_UUID("652615D4-26CD-4514-B161-2FD5072ED008")
-CDeckLinkDiscovery_v10_11;
+class DECLSPEC_UUID("F891AD29-D0C2-46E9-A926-4E2D0DD8CFAD")
+CDeckLinkVideoFrameAncillaryPackets;
 #endif
 
 #ifndef __IDeckLinkConfiguration_v10_9_INTERFACE_DEFINED__
 #define __IDeckLinkConfiguration_v10_9_INTERFACE_DEFINED__
 
 /* interface IDeckLinkConfiguration_v10_9 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkConfiguration_v10_9;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("CB71734A-FE37-4E8D-8E13-802133A1C3F2")
     IDeckLinkConfiguration_v10_9 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkConfiguration_v10_9Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkConfiguration_v10_9 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkConfiguration_v10_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkConfiguration_v10_9 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )( 
             IDeckLinkConfiguration_v10_9 * This);
-
+        
         END_INTERFACE
     } IDeckLinkConfiguration_v10_9Vtbl;
 
@@ -11312,47 +9387,47 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v10_9;
         CONST_VTBL struct IDeckLinkConfiguration_v10_9Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkConfiguration_v10_9_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkConfiguration_v10_9_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkConfiguration_v10_9_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkConfiguration_v10_9_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_9_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
+    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -11393,121 +9468,121 @@ CDeckLinkDiscovery_v10_8;
 #define __IDeckLinkEncoderConfiguration_v10_5_INTERFACE_DEFINED__
 
 /* interface IDeckLinkEncoderConfiguration_v10_5 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkEncoderConfiguration_v10_5;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("67455668-0848-45DF-8D8E-350A77C9A028")
     IDeckLinkEncoderConfiguration_v10_5 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDecoderConfigurationInfo(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDecoderConfigurationInfo( 
             /* [out] */ void *buffer,
             /* [in] */ long bufferSize,
             /* [out] */ long *returnedSize) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkEncoderConfiguration_v10_5Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkEncoderConfiguration_v10_5 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkEncoderConfiguration_v10_5 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [in] */ BMDDeckLinkEncoderConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDecoderConfigurationInfo )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDecoderConfigurationInfo )( 
             IDeckLinkEncoderConfiguration_v10_5 * This,
             /* [out] */ void *buffer,
             /* [in] */ long bufferSize,
             /* [out] */ long *returnedSize);
-
+        
         END_INTERFACE
     } IDeckLinkEncoderConfiguration_v10_5Vtbl;
 
@@ -11516,47 +9591,47 @@ EXTERN_C const IID IID_IDeckLinkEncoderConfiguration_v10_5;
         CONST_VTBL struct IDeckLinkEncoderConfiguration_v10_5Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkEncoderConfiguration_v10_5_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkEncoderConfiguration_v10_5_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkEncoderConfiguration_v10_5_GetDecoderConfigurationInfo(This,buffer,bufferSize,returnedSize)	\
-    ( (This)->lpVtbl -> GetDecoderConfigurationInfo(This,buffer,bufferSize,returnedSize) )
+    ( (This)->lpVtbl -> GetDecoderConfigurationInfo(This,buffer,bufferSize,returnedSize) ) 
 
 #endif /* COBJMACROS */
 
@@ -11573,115 +9648,115 @@ EXTERN_C const IID IID_IDeckLinkEncoderConfiguration_v10_5;
 #define __IDeckLinkConfiguration_v10_4_INTERFACE_DEFINED__
 
 /* interface IDeckLinkConfiguration_v10_4 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkConfiguration_v10_4;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("1E69FCF6-4203-4936-8076-2A9F4CFD50CB")
     IDeckLinkConfiguration_v10_4 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkConfiguration_v10_4Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkConfiguration_v10_4 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkConfiguration_v10_4 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkConfiguration_v10_4 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )( 
             IDeckLinkConfiguration_v10_4 * This);
-
+        
         END_INTERFACE
     } IDeckLinkConfiguration_v10_4Vtbl;
 
@@ -11690,47 +9765,47 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v10_4;
         CONST_VTBL struct IDeckLinkConfiguration_v10_4Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkConfiguration_v10_4_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkConfiguration_v10_4_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkConfiguration_v10_4_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkConfiguration_v10_4_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_4_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
+    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -11747,115 +9822,115 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v10_4;
 #define __IDeckLinkConfiguration_v10_2_INTERFACE_DEFINED__
 
 /* interface IDeckLinkConfiguration_v10_2 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkConfiguration_v10_2;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("C679A35B-610C-4D09-B748-1D0478100FC0")
     IDeckLinkConfiguration_v10_2 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlag(
+        virtual HRESULT STDMETHODCALLTYPE SetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFlag(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFlag( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetInt(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetInt( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFloat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFloat( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkConfiguration_v10_2Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkConfiguration_v10_2 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkConfiguration_v10_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlag )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BOOL value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFlag )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFlag )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BOOL *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetInt )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ LONGLONG value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetInt )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetInt )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ LONGLONG *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFloat )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ double value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFloat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFloat )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ double *value);
-
-        HRESULT ( STDMETHODCALLTYPE *SetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetString )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [in] */ BSTR value);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkConfiguration_v10_2 * This,
             /* [in] */ BMDDeckLinkConfigurationID cfgID,
             /* [out] */ BSTR *value);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )( 
             IDeckLinkConfiguration_v10_2 * This);
-
+        
         END_INTERFACE
     } IDeckLinkConfiguration_v10_2Vtbl;
 
@@ -11864,47 +9939,47 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v10_2;
         CONST_VTBL struct IDeckLinkConfiguration_v10_2Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkConfiguration_v10_2_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkConfiguration_v10_2_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkConfiguration_v10_2_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkConfiguration_v10_2_SetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_GetFlag(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFlag(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_SetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_GetInt(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetInt(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetInt(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_SetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_GetFloat(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetFloat(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_SetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> SetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> SetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_GetString(This,cfgID,value)	\
-    ( (This)->lpVtbl -> GetString(This,cfgID,value) )
+    ( (This)->lpVtbl -> GetString(This,cfgID,value) ) 
 
 #define IDeckLinkConfiguration_v10_2_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
+    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -11921,175 +9996,175 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v10_2;
 #define __IDeckLinkOutput_v9_9_INTERFACE_DEFINED__
 
 /* interface IDeckLinkOutput_v9_9 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkOutput_v9_9;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("A3EF0963-0862-44ED-92A9-EE89ABF431C7")
     IDeckLinkOutput_v9_9 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoOutputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDVideoOutputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame( 
             /* [in] */ int width,
             /* [in] */ int height,
             /* [in] */ int rowBytes,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData( 
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync( 
             /* [in] */ IDeckLinkVideoFrame *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame( 
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeValue displayTime,
             /* [in] */ BMDTimeValue displayDuration,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback( 
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount( 
             /* [out] */ unsigned int *bufferedFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput( 
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount,
             /* [in] */ BMDAudioOutputStreamType streamType) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync( 
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples( 
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [in] */ BMDTimeValue streamTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback( 
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback( 
             /* [in] */ BMDTimeValue playbackStartTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback( 
             /* [in] */ BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             /* [in] */ BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning( 
             /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetReferenceStatus(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetReferenceStatus( 
             /* [out] */ BMDReferenceStatus *referenceStatus) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkOutput_v9_9Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkOutput_v9_9 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoOutputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkOutput_v9_9 * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDVideoOutputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ int width,
             /* [in] */ int height,
@@ -12097,105 +10172,105 @@ EXTERN_C const IID IID_IDeckLinkOutput_v9_9;
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkVideoFrame *theFrame,
             /* [in] */ BMDTimeValue displayTime,
             /* [in] */ BMDTimeValue displayDuration,
             /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )( 
             IDeckLinkOutput_v9_9 * This,
             /* [out] */ unsigned int *bufferedFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount,
             /* [in] */ BMDAudioOutputStreamType streamType);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ void *buffer,
             /* [in] */ unsigned int sampleFrameCount,
             /* [in] */ BMDTimeValue streamTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkOutput_v9_9 * This,
             /* [out] */ unsigned int *bufferedSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )( 
             IDeckLinkOutput_v9_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDTimeValue playbackStartTime,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             /* [in] */ BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )( 
             IDeckLinkOutput_v9_9 * This,
             /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *GetReferenceStatus )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetReferenceStatus )( 
             IDeckLinkOutput_v9_9 * This,
             /* [out] */ BMDReferenceStatus *referenceStatus);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkOutput_v9_9 * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkOutput_v9_9Vtbl;
 
@@ -12204,101 +10279,101 @@ EXTERN_C const IID IID_IDeckLinkOutput_v9_9;
         CONST_VTBL struct IDeckLinkOutput_v9_9Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkOutput_v9_9_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkOutput_v9_9_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkOutput_v9_9_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkOutput_v9_9_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) ) 
 
 #define IDeckLinkOutput_v9_9_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkOutput_v9_9_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkOutput_v9_9_EnableVideoOutput(This,displayMode,flags)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) )
+    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) ) 
 
 #define IDeckLinkOutput_v9_9_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
+    ( (This)->lpVtbl -> DisableVideoOutput(This) ) 
 
 #define IDeckLinkOutput_v9_9_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkOutput_v9_9_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_v9_9_CreateAncillaryData(This,pixelFormat,outBuffer)	\
-    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) )
+    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) ) 
 
 #define IDeckLinkOutput_v9_9_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
+    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) ) 
 
 #define IDeckLinkOutput_v9_9_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
+    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) ) 
 
 #define IDeckLinkOutput_v9_9_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v9_9_GetBufferedVideoFrameCount(This,bufferedFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) ) 
 
 #define IDeckLinkOutput_v9_9_EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) )
+    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) ) 
 
 #define IDeckLinkOutput_v9_9_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
+    ( (This)->lpVtbl -> DisableAudioOutput(This) ) 
 
 #define IDeckLinkOutput_v9_9_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
+    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v9_9_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
+    ( (This)->lpVtbl -> BeginAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v9_9_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
+    ( (This)->lpVtbl -> EndAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v9_9_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
+    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v9_9_GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) ) 
 
 #define IDeckLinkOutput_v9_9_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
+    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) ) 
 
 #define IDeckLinkOutput_v9_9_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v9_9_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
+    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v9_9_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
+    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) ) 
 
 #define IDeckLinkOutput_v9_9_IsScheduledPlaybackRunning(This,active)	\
-    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) )
+    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) ) 
 
 #define IDeckLinkOutput_v9_9_GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed)	\
-    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) )
+    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v9_9_GetReferenceStatus(This,referenceStatus)	\
-    ( (This)->lpVtbl -> GetReferenceStatus(This,referenceStatus) )
+    ( (This)->lpVtbl -> GetReferenceStatus(This,referenceStatus) ) 
 
 #define IDeckLinkOutput_v9_9_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -12315,153 +10390,153 @@ EXTERN_C const IID IID_IDeckLinkOutput_v9_9;
 #define __IDeckLinkInput_v9_2_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInput_v9_2 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInput_v9_2;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("6D40EF78-28B9-4E21-990D-95BB7750A04F")
     IDeckLinkInput_v9_2 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount( 
             /* [out] */ unsigned int *availableFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount( 
             /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkInputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInput_v9_2Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInput_v9_2 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result,
+            /* [out] */ BMDDisplayModeSupport *result,
             /* [out] */ IDeckLinkDisplayMode **resultDisplayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkInput_v9_2 * This,
             /* [out] */ IDeckLinkDisplayModeIterator **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ BMDDisplayMode displayMode,
             /* [in] */ BMDPixelFormat pixelFormat,
             /* [in] */ BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )( 
             IDeckLinkInput_v9_2 * This,
             /* [out] */ unsigned int *availableFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ BMDAudioSampleRate sampleRate,
             /* [in] */ BMDAudioSampleType sampleType,
             /* [in] */ unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )( 
             IDeckLinkInput_v9_2 * This,
             /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushStreams )( 
             IDeckLinkInput_v9_2 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ IDeckLinkInputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkInput_v9_2 * This,
             /* [in] */ BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkInput_v9_2Vtbl;
 
@@ -12470,65 +10545,65 @@ EXTERN_C const IID IID_IDeckLinkInput_v9_2;
         CONST_VTBL struct IDeckLinkInput_v9_2Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInput_v9_2_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInput_v9_2_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInput_v9_2_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInput_v9_2_DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,flags,result,resultDisplayMode) ) 
 
 #define IDeckLinkInput_v9_2_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkInput_v9_2_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkInput_v9_2_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkInput_v9_2_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkInput_v9_2_GetAvailableVideoFrameCount(This,availableFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) ) 
 
 #define IDeckLinkInput_v9_2_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkInput_v9_2_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkInput_v9_2_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) ) 
 
 #define IDeckLinkInput_v9_2_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkInput_v9_2_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkInput_v9_2_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkInput_v9_2_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+    ( (This)->lpVtbl -> FlushStreams(This) ) 
 
 #define IDeckLinkInput_v9_2_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #define IDeckLinkInput_v9_2_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -12545,72 +10620,72 @@ EXTERN_C const IID IID_IDeckLinkInput_v9_2;
 #define __IDeckLinkDeckControlStatusCallback_v8_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDeckControlStatusCallback_v8_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback_v8_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("E5F693C1-4283-4716-B18F-C1431521955B")
     IDeckLinkDeckControlStatusCallback_v8_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE TimecodeUpdate(
+        virtual HRESULT STDMETHODCALLTYPE TimecodeUpdate( 
             /* [in] */ BMDTimecodeBCD currentTimecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VTRControlStateChanged(
+        
+        virtual HRESULT STDMETHODCALLTYPE VTRControlStateChanged( 
             /* [in] */ BMDDeckControlVTRControlState_v8_1 newState,
             /* [in] */ BMDDeckControlError error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DeckControlEventReceived(
+        
+        virtual HRESULT STDMETHODCALLTYPE DeckControlEventReceived( 
             /* [in] */ BMDDeckControlEvent event,
             /* [in] */ BMDDeckControlError error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DeckControlStatusChanged(
+        
+        virtual HRESULT STDMETHODCALLTYPE DeckControlStatusChanged( 
             /* [in] */ BMDDeckControlStatusFlags flags,
             /* [in] */ unsigned int mask) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDeckControlStatusCallback_v8_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *TimecodeUpdate )(
+        
+        HRESULT ( STDMETHODCALLTYPE *TimecodeUpdate )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This,
             /* [in] */ BMDTimecodeBCD currentTimecode);
-
-        HRESULT ( STDMETHODCALLTYPE *VTRControlStateChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VTRControlStateChanged )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This,
             /* [in] */ BMDDeckControlVTRControlState_v8_1 newState,
             /* [in] */ BMDDeckControlError error);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckControlEventReceived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckControlEventReceived )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This,
             /* [in] */ BMDDeckControlEvent event,
             /* [in] */ BMDDeckControlError error);
-
-        HRESULT ( STDMETHODCALLTYPE *DeckControlStatusChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DeckControlStatusChanged )( 
             IDeckLinkDeckControlStatusCallback_v8_1 * This,
             /* [in] */ BMDDeckControlStatusFlags flags,
             /* [in] */ unsigned int mask);
-
+        
         END_INTERFACE
     } IDeckLinkDeckControlStatusCallback_v8_1Vtbl;
 
@@ -12619,32 +10694,32 @@ EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback_v8_1;
         CONST_VTBL struct IDeckLinkDeckControlStatusCallback_v8_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_TimecodeUpdate(This,currentTimecode)	\
-    ( (This)->lpVtbl -> TimecodeUpdate(This,currentTimecode) )
+    ( (This)->lpVtbl -> TimecodeUpdate(This,currentTimecode) ) 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_VTRControlStateChanged(This,newState,error)	\
-    ( (This)->lpVtbl -> VTRControlStateChanged(This,newState,error) )
+    ( (This)->lpVtbl -> VTRControlStateChanged(This,newState,error) ) 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_DeckControlEventReceived(This,event,error)	\
-    ( (This)->lpVtbl -> DeckControlEventReceived(This,event,error) )
+    ( (This)->lpVtbl -> DeckControlEventReceived(This,event,error) ) 
 
 #define IDeckLinkDeckControlStatusCallback_v8_1_DeckControlStatusChanged(This,flags,mask)	\
-    ( (This)->lpVtbl -> DeckControlStatusChanged(This,flags,mask) )
+    ( (This)->lpVtbl -> DeckControlStatusChanged(This,flags,mask) ) 
 
 #endif /* COBJMACROS */
 
@@ -12661,183 +10736,183 @@ EXTERN_C const IID IID_IDeckLinkDeckControlStatusCallback_v8_1;
 #define __IDeckLinkDeckControl_v8_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDeckControl_v8_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDeckControl_v8_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("522A9E39-0F3C-4742-94EE-D80DE335DA1D")
     IDeckLinkDeckControl_v8_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Open(
+        virtual HRESULT STDMETHODCALLTYPE Open( 
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Close(
+        
+        virtual HRESULT STDMETHODCALLTYPE Close( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCurrentState(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCurrentState( 
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState_v8_1 *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetStandby(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetStandby( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SendCommand(
+        
+        virtual HRESULT STDMETHODCALLTYPE SendCommand( 
             /* [in] */ unsigned char *inBuffer,
             /* [in] */ unsigned int inBufferSize,
             /* [out] */ unsigned char *outBuffer,
             /* [out] */ unsigned int *outDataSize,
             /* [in] */ unsigned int outBufferSize,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Play(
+        
+        virtual HRESULT STDMETHODCALLTYPE Play( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Stop(
+        
+        virtual HRESULT STDMETHODCALLTYPE Stop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Eject(
+        
+        virtual HRESULT STDMETHODCALLTYPE Eject( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GoToTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GoToTimecode( 
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FastForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE FastForward( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Rewind(
+        
+        virtual HRESULT STDMETHODCALLTYPE Rewind( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepForward( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepBack(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepBack( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Jog(
+        
+        virtual HRESULT STDMETHODCALLTYPE Jog( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Shuttle(
+        
+        virtual HRESULT STDMETHODCALLTYPE Shuttle( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString( 
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD( 
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetPreroll( 
             /* [in] */ unsigned int prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPreroll( 
             /* [out] */ unsigned int *prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetExportOffset( 
             /* [in] */ int exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetExportOffset( 
             /* [out] */ int *exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset( 
             /* [out] */ int *deckManualExportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset( 
             /* [in] */ int captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset( 
             /* [out] */ int *captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartExport(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartExport( 
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartCapture(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartCapture( 
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDeviceID(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDeviceID( 
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE Abort( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkDeckControlStatusCallback_v8_1 *callback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDeckControl_v8_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDeckControl_v8_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDeckControl_v8_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Open )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Open )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Close )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Close )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState_v8_1 *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetStandby )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetStandby )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *SendCommand )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SendCommand )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ unsigned char *inBuffer,
             /* [in] */ unsigned int inBufferSize,
@@ -12845,133 +10920,133 @@ EXTERN_C const IID IID_IDeckLinkDeckControl_v8_1;
             /* [out] */ unsigned int *outDataSize,
             /* [in] */ unsigned int outBufferSize,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Play )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Play )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Stop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Stop )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Eject )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Eject )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *FastForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FastForward )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Rewind )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Rewind )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepForward )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepBack )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepBack )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Jog )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Jog )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Shuttle )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Shuttle )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetPreroll )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ unsigned int prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPreroll )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ unsigned int *prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ int exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ int *exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ int *deckManualExportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ int captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ int *captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *StartExport )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartExport )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StartCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Abort )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Abort )( 
             IDeckLinkDeckControl_v8_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkDeckControl_v8_1 * This,
             /* [in] */ IDeckLinkDeckControlStatusCallback_v8_1 *callback);
-
+        
         END_INTERFACE
     } IDeckLinkDeckControl_v8_1Vtbl;
 
@@ -12980,119 +11055,119 @@ EXTERN_C const IID IID_IDeckLinkDeckControl_v8_1;
         CONST_VTBL struct IDeckLinkDeckControl_v8_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDeckControl_v8_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDeckControl_v8_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDeckControl_v8_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDeckControl_v8_1_Open(This,timeScale,timeValue,timecodeIsDropFrame,error)	\
-    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) )
+    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Close(This,standbyOn)	\
-    ( (This)->lpVtbl -> Close(This,standbyOn) )
+    ( (This)->lpVtbl -> Close(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetCurrentState(This,mode,vtrControlState,flags)	\
-    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) )
+    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) ) 
 
 #define IDeckLinkDeckControl_v8_1_SetStandby(This,standbyOn)	\
-    ( (This)->lpVtbl -> SetStandby(This,standbyOn) )
+    ( (This)->lpVtbl -> SetStandby(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_v8_1_SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error)	\
-    ( (This)->lpVtbl -> SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error) )
+    ( (This)->lpVtbl -> SendCommand(This,inBuffer,inBufferSize,outBuffer,outDataSize,outBufferSize,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Play(This,error)	\
-    ( (This)->lpVtbl -> Play(This,error) )
+    ( (This)->lpVtbl -> Play(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Stop(This,error)	\
-    ( (This)->lpVtbl -> Stop(This,error) )
+    ( (This)->lpVtbl -> Stop(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_TogglePlayStop(This,error)	\
-    ( (This)->lpVtbl -> TogglePlayStop(This,error) )
+    ( (This)->lpVtbl -> TogglePlayStop(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Eject(This,error)	\
-    ( (This)->lpVtbl -> Eject(This,error) )
+    ( (This)->lpVtbl -> Eject(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_GoToTimecode(This,timecode,error)	\
-    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) )
+    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_FastForward(This,viewTape,error)	\
-    ( (This)->lpVtbl -> FastForward(This,viewTape,error) )
+    ( (This)->lpVtbl -> FastForward(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Rewind(This,viewTape,error)	\
-    ( (This)->lpVtbl -> Rewind(This,viewTape,error) )
+    ( (This)->lpVtbl -> Rewind(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_StepForward(This,error)	\
-    ( (This)->lpVtbl -> StepForward(This,error) )
+    ( (This)->lpVtbl -> StepForward(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_StepBack(This,error)	\
-    ( (This)->lpVtbl -> StepBack(This,error) )
+    ( (This)->lpVtbl -> StepBack(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Jog(This,rate,error)	\
-    ( (This)->lpVtbl -> Jog(This,rate,error) )
+    ( (This)->lpVtbl -> Jog(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Shuttle(This,rate,error)	\
-    ( (This)->lpVtbl -> Shuttle(This,rate,error) )
+    ( (This)->lpVtbl -> Shuttle(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetTimecodeString(This,currentTimeCode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) )
+    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetTimecode(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetTimecodeBCD(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_SetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_v8_1_SetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetManualExportOffset(This,deckManualExportOffsetFields)	\
-    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) )
+    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v8_1_SetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v8_1_StartExport(This,inTimecode,outTimecode,exportModeOps,error)	\
-    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) )
+    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_StartCapture(This,useVITC,inTimecode,outTimecode,error)	\
-    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) )
+    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_GetDeviceID(This,deviceId,error)	\
-    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) )
+    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_Abort(This)	\
-    ( (This)->lpVtbl -> Abort(This) )
+    ( (This)->lpVtbl -> Abort(This) ) 
 
 #define IDeckLinkDeckControl_v8_1_CrashRecordStart(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStart(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStart(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_CrashRecordStop(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStop(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStop(This,error) ) 
 
 #define IDeckLinkDeckControl_v8_1_SetCallback(This,callback)	\
-    ( (This)->lpVtbl -> SetCallback(This,callback) )
+    ( (This)->lpVtbl -> SetCallback(This,callback) ) 
 
 #endif /* COBJMACROS */
 
@@ -13109,45 +11184,45 @@ EXTERN_C const IID IID_IDeckLinkDeckControl_v8_1;
 #define __IDeckLink_v8_0_INTERFACE_DEFINED__
 
 /* interface IDeckLink_v8_0 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLink_v8_0;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("62BFF75D-6569-4E55-8D4D-66AA03829ABC")
     IDeckLink_v8_0 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetModelName(
+        virtual HRESULT STDMETHODCALLTYPE GetModelName( 
             /* [out] */ BSTR *modelName) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLink_v8_0Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLink_v8_0 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLink_v8_0 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLink_v8_0 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetModelName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetModelName )( 
             IDeckLink_v8_0 * This,
             /* [out] */ BSTR *modelName);
-
+        
         END_INTERFACE
     } IDeckLink_v8_0Vtbl;
 
@@ -13156,23 +11231,23 @@ EXTERN_C const IID IID_IDeckLink_v8_0;
         CONST_VTBL struct IDeckLink_v8_0Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLink_v8_0_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLink_v8_0_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLink_v8_0_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLink_v8_0_GetModelName(This,modelName)	\
-    ( (This)->lpVtbl -> GetModelName(This,modelName) )
+    ( (This)->lpVtbl -> GetModelName(This,modelName) ) 
 
 #endif /* COBJMACROS */
 
@@ -13189,45 +11264,45 @@ EXTERN_C const IID IID_IDeckLink_v8_0;
 #define __IDeckLinkIterator_v8_0_INTERFACE_DEFINED__
 
 /* interface IDeckLinkIterator_v8_0 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkIterator_v8_0;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("74E936FC-CC28-4A67-81A0-1E94E52D4E69")
     IDeckLinkIterator_v8_0 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLink_v8_0 **deckLinkInstance) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkIterator_v8_0Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkIterator_v8_0 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkIterator_v8_0 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkIterator_v8_0 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkIterator_v8_0 * This,
             /* [out] */ IDeckLink_v8_0 **deckLinkInstance);
-
+        
         END_INTERFACE
     } IDeckLinkIterator_v8_0Vtbl;
 
@@ -13236,23 +11311,23 @@ EXTERN_C const IID IID_IDeckLinkIterator_v8_0;
         CONST_VTBL struct IDeckLinkIterator_v8_0Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkIterator_v8_0_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkIterator_v8_0_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkIterator_v8_0_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkIterator_v8_0_Next(This,deckLinkInstance)	\
-    ( (This)->lpVtbl -> Next(This,deckLinkInstance) )
+    ( (This)->lpVtbl -> Next(This,deckLinkInstance) ) 
 
 #endif /* COBJMACROS */
 
@@ -13277,300 +11352,300 @@ CDeckLinkIterator_v8_0;
 #define __IDeckLinkDeckControl_v7_9_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDeckControl_v7_9 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDeckControl_v7_9;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("A4D81043-0619-42B7-8ED6-602D29041DF7")
     IDeckLinkDeckControl_v7_9 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Open(
+        virtual HRESULT STDMETHODCALLTYPE Open( 
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Close(
+        
+        virtual HRESULT STDMETHODCALLTYPE Close( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCurrentState(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCurrentState( 
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetStandby(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetStandby( 
             /* [in] */ BOOL standbyOn) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Play(
+        
+        virtual HRESULT STDMETHODCALLTYPE Play( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Stop(
+        
+        virtual HRESULT STDMETHODCALLTYPE Stop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE TogglePlayStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Eject(
+        
+        virtual HRESULT STDMETHODCALLTYPE Eject( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GoToTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GoToTimecode( 
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE FastForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE FastForward( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Rewind(
+        
+        virtual HRESULT STDMETHODCALLTYPE Rewind( 
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepForward(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepForward( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StepBack(
+        
+        virtual HRESULT STDMETHODCALLTYPE StepBack( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Jog(
+        
+        virtual HRESULT STDMETHODCALLTYPE Jog( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Shuttle(
+        
+        virtual HRESULT STDMETHODCALLTYPE Shuttle( 
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeString( 
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecodeBCD( 
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetPreroll( 
             /* [in] */ unsigned int prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetPreroll(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetPreroll( 
             /* [out] */ unsigned int *prerollSeconds) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetExportOffset( 
             /* [in] */ int exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetExportOffset( 
             /* [out] */ int *exportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetManualExportOffset( 
             /* [out] */ int *deckManualExportOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCaptureOffset( 
             /* [in] */ int captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetCaptureOffset( 
             /* [out] */ int *captureOffsetFields) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartExport(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartExport( 
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartCapture(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartCapture( 
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDeviceID(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDeviceID( 
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE Abort( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStart( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop(
+        
+        virtual HRESULT STDMETHODCALLTYPE CrashRecordStop( 
             /* [out] */ BMDDeckControlError *error) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkDeckControlStatusCallback *callback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDeckControl_v7_9Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDeckControl_v7_9 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDeckControl_v7_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Open )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Open )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BMDTimeScale timeScale,
             /* [in] */ BMDTimeValue timeValue,
             /* [in] */ BOOL timecodeIsDropFrame,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Close )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Close )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlMode *mode,
             /* [out] */ BMDDeckControlVTRControlState *vtrControlState,
             /* [out] */ BMDDeckControlStatusFlags *flags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetStandby )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetStandby )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BOOL standbyOn);
-
-        HRESULT ( STDMETHODCALLTYPE *Play )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Play )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Stop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Stop )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *TogglePlayStop )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Eject )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Eject )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GoToTimecode )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BMDTimecodeBCD timecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *FastForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FastForward )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Rewind )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Rewind )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BOOL viewTape,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepForward )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepForward )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StepBack )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StepBack )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Jog )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Jog )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Shuttle )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Shuttle )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ double rate,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeString )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BSTR *currentTimeCode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ IDeckLinkTimecode **currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecodeBCD )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDTimecodeBCD *currentTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetPreroll )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ unsigned int prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *GetPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetPreroll )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ unsigned int *prerollSeconds);
-
-        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetExportOffset )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ int exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetExportOffset )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ int *exportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetManualExportOffset )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ int *deckManualExportOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCaptureOffset )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ int captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetCaptureOffset )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ int *captureOffsetFields);
-
-        HRESULT ( STDMETHODCALLTYPE *StartExport )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartExport )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [in] */ BMDDeckControlExportModeOpsFlags exportModeOps,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *StartCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ BOOL useVITC,
             /* [in] */ BMDTimecodeBCD inTimecode,
             /* [in] */ BMDTimecodeBCD outTimecode,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ unsigned short *deviceId,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *Abort )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Abort )( 
             IDeckLinkDeckControl_v7_9 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStart )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CrashRecordStop )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [out] */ BMDDeckControlError *error);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkDeckControl_v7_9 * This,
             /* [in] */ IDeckLinkDeckControlStatusCallback *callback);
-
+        
         END_INTERFACE
     } IDeckLinkDeckControl_v7_9Vtbl;
 
@@ -13579,116 +11654,116 @@ EXTERN_C const IID IID_IDeckLinkDeckControl_v7_9;
         CONST_VTBL struct IDeckLinkDeckControl_v7_9Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDeckControl_v7_9_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDeckControl_v7_9_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDeckControl_v7_9_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDeckControl_v7_9_Open(This,timeScale,timeValue,timecodeIsDropFrame,error)	\
-    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) )
+    ( (This)->lpVtbl -> Open(This,timeScale,timeValue,timecodeIsDropFrame,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Close(This,standbyOn)	\
-    ( (This)->lpVtbl -> Close(This,standbyOn) )
+    ( (This)->lpVtbl -> Close(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetCurrentState(This,mode,vtrControlState,flags)	\
-    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) )
+    ( (This)->lpVtbl -> GetCurrentState(This,mode,vtrControlState,flags) ) 
 
 #define IDeckLinkDeckControl_v7_9_SetStandby(This,standbyOn)	\
-    ( (This)->lpVtbl -> SetStandby(This,standbyOn) )
+    ( (This)->lpVtbl -> SetStandby(This,standbyOn) ) 
 
 #define IDeckLinkDeckControl_v7_9_Play(This,error)	\
-    ( (This)->lpVtbl -> Play(This,error) )
+    ( (This)->lpVtbl -> Play(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Stop(This,error)	\
-    ( (This)->lpVtbl -> Stop(This,error) )
+    ( (This)->lpVtbl -> Stop(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_TogglePlayStop(This,error)	\
-    ( (This)->lpVtbl -> TogglePlayStop(This,error) )
+    ( (This)->lpVtbl -> TogglePlayStop(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Eject(This,error)	\
-    ( (This)->lpVtbl -> Eject(This,error) )
+    ( (This)->lpVtbl -> Eject(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_GoToTimecode(This,timecode,error)	\
-    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) )
+    ( (This)->lpVtbl -> GoToTimecode(This,timecode,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_FastForward(This,viewTape,error)	\
-    ( (This)->lpVtbl -> FastForward(This,viewTape,error) )
+    ( (This)->lpVtbl -> FastForward(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Rewind(This,viewTape,error)	\
-    ( (This)->lpVtbl -> Rewind(This,viewTape,error) )
+    ( (This)->lpVtbl -> Rewind(This,viewTape,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_StepForward(This,error)	\
-    ( (This)->lpVtbl -> StepForward(This,error) )
+    ( (This)->lpVtbl -> StepForward(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_StepBack(This,error)	\
-    ( (This)->lpVtbl -> StepBack(This,error) )
+    ( (This)->lpVtbl -> StepBack(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Jog(This,rate,error)	\
-    ( (This)->lpVtbl -> Jog(This,rate,error) )
+    ( (This)->lpVtbl -> Jog(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Shuttle(This,rate,error)	\
-    ( (This)->lpVtbl -> Shuttle(This,rate,error) )
+    ( (This)->lpVtbl -> Shuttle(This,rate,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetTimecodeString(This,currentTimeCode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) )
+    ( (This)->lpVtbl -> GetTimecodeString(This,currentTimeCode,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetTimecode(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecode(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetTimecodeBCD(This,currentTimecode,error)	\
-    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) )
+    ( (This)->lpVtbl -> GetTimecodeBCD(This,currentTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_SetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> SetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetPreroll(This,prerollSeconds)	\
-    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) )
+    ( (This)->lpVtbl -> GetPreroll(This,prerollSeconds) ) 
 
 #define IDeckLinkDeckControl_v7_9_SetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> SetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetExportOffset(This,exportOffsetFields)	\
-    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) )
+    ( (This)->lpVtbl -> GetExportOffset(This,exportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetManualExportOffset(This,deckManualExportOffsetFields)	\
-    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) )
+    ( (This)->lpVtbl -> GetManualExportOffset(This,deckManualExportOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v7_9_SetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> SetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetCaptureOffset(This,captureOffsetFields)	\
-    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) )
+    ( (This)->lpVtbl -> GetCaptureOffset(This,captureOffsetFields) ) 
 
 #define IDeckLinkDeckControl_v7_9_StartExport(This,inTimecode,outTimecode,exportModeOps,error)	\
-    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) )
+    ( (This)->lpVtbl -> StartExport(This,inTimecode,outTimecode,exportModeOps,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_StartCapture(This,useVITC,inTimecode,outTimecode,error)	\
-    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) )
+    ( (This)->lpVtbl -> StartCapture(This,useVITC,inTimecode,outTimecode,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_GetDeviceID(This,deviceId,error)	\
-    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) )
+    ( (This)->lpVtbl -> GetDeviceID(This,deviceId,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_Abort(This)	\
-    ( (This)->lpVtbl -> Abort(This) )
+    ( (This)->lpVtbl -> Abort(This) ) 
 
 #define IDeckLinkDeckControl_v7_9_CrashRecordStart(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStart(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStart(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_CrashRecordStop(This,error)	\
-    ( (This)->lpVtbl -> CrashRecordStop(This,error) )
+    ( (This)->lpVtbl -> CrashRecordStop(This,error) ) 
 
 #define IDeckLinkDeckControl_v7_9_SetCallback(This,callback)	\
-    ( (This)->lpVtbl -> SetCallback(This,callback) )
+    ( (This)->lpVtbl -> SetCallback(This,callback) ) 
 
 #endif /* COBJMACROS */
 
@@ -13705,45 +11780,45 @@ EXTERN_C const IID IID_IDeckLinkDeckControl_v7_9;
 #define __IDeckLinkDisplayModeIterator_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayModeIterator_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("455D741F-1779-4800-86F5-0B5D13D79751")
     IDeckLinkDisplayModeIterator_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLinkDisplayMode_v7_6 **deckLinkDisplayMode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayModeIterator_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayModeIterator_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayModeIterator_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayModeIterator_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkDisplayModeIterator_v7_6 * This,
             /* [out] */ IDeckLinkDisplayMode_v7_6 **deckLinkDisplayMode);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayModeIterator_v7_6Vtbl;
 
@@ -13752,23 +11827,23 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_6;
         CONST_VTBL struct IDeckLinkDisplayModeIterator_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayModeIterator_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayModeIterator_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayModeIterator_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayModeIterator_v7_6_Next(This,deckLinkDisplayMode)	\
-    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) )
+    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) ) 
 
 #endif /* COBJMACROS */
 
@@ -13785,74 +11860,74 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_6;
 #define __IDeckLinkDisplayMode_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayMode_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("87451E84-2B7E-439E-A629-4393EA4A8550")
     IDeckLinkDisplayMode_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetName(
+        virtual HRESULT STDMETHODCALLTYPE GetName( 
             /* [out] */ BSTR *name) = 0;
-
+        
         virtual BMDDisplayMode STDMETHODCALLTYPE GetDisplayMode( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameRate(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFrameRate( 
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale) = 0;
-
+        
         virtual BMDFieldDominance STDMETHODCALLTYPE GetFieldDominance( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayMode_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayMode_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetName )( 
             IDeckLinkDisplayMode_v7_6 * This,
             /* [out] */ BSTR *name);
-
-        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )( 
             IDeckLinkDisplayMode_v7_6 * This,
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale);
-
-        BMDFieldDominance ( STDMETHODCALLTYPE *GetFieldDominance )(
+        
+        BMDFieldDominance ( STDMETHODCALLTYPE *GetFieldDominance )( 
             IDeckLinkDisplayMode_v7_6 * This);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayMode_v7_6Vtbl;
 
@@ -13861,38 +11936,38 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_6;
         CONST_VTBL struct IDeckLinkDisplayMode_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayMode_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayMode_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayMode_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayMode_v7_6_GetName(This,name)	\
-    ( (This)->lpVtbl -> GetName(This,name) )
+    ( (This)->lpVtbl -> GetName(This,name) ) 
 
 #define IDeckLinkDisplayMode_v7_6_GetDisplayMode(This)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This) )
+    ( (This)->lpVtbl -> GetDisplayMode(This) ) 
 
 #define IDeckLinkDisplayMode_v7_6_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkDisplayMode_v7_6_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkDisplayMode_v7_6_GetFrameRate(This,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) ) 
 
 #define IDeckLinkDisplayMode_v7_6_GetFieldDominance(This)	\
-    ( (This)->lpVtbl -> GetFieldDominance(This) )
+    ( (This)->lpVtbl -> GetFieldDominance(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -13909,168 +11984,168 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_6;
 #define __IDeckLinkOutput_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkOutput_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkOutput_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("29228142-EB8C-4141-A621-F74026450955")
     IDeckLinkOutput_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback_v7_6 *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput( 
             BMDDisplayMode displayMode,
             BMDVideoOutputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame( 
             int width,
             int height,
             int rowBytes,
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame_v7_6 **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData( 
             BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback( 
             /* [in] */ IDeckLinkVideoOutputCallback_v7_6 *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount( 
             /* [out] */ unsigned int *bufferedFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount,
             BMDAudioOutputStreamType streamType) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync( 
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples( 
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback( 
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback( 
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback( 
             BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning( 
             /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetScheduledStreamTime( 
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkOutput_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkOutput_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkOutput_v7_6 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkOutput_v7_6 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback_v7_6 *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )( 
             IDeckLinkOutput_v7_6 * This,
             BMDDisplayMode displayMode,
             BMDVideoOutputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )( 
             IDeckLinkOutput_v7_6 * This,
             int width,
             int height,
@@ -14078,101 +12153,101 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_6;
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame_v7_6 **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )( 
             IDeckLinkOutput_v7_6 * This,
             BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkVideoOutputCallback_v7_6 *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )( 
             IDeckLinkOutput_v7_6 * This,
             /* [out] */ unsigned int *bufferedFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )( 
             IDeckLinkOutput_v7_6 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount,
             BMDAudioOutputStreamType streamType);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkOutput_v7_6 * This,
             /* [out] */ unsigned int *bufferedSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )( 
             IDeckLinkOutput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )( 
             IDeckLinkOutput_v7_6 * This,
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )( 
             IDeckLinkOutput_v7_6 * This,
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )( 
             IDeckLinkOutput_v7_6 * This,
             BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )( 
             IDeckLinkOutput_v7_6 * This,
             /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetScheduledStreamTime )( 
             IDeckLinkOutput_v7_6 * This,
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *streamTime,
             /* [out] */ double *playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkOutput_v7_6 * This,
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkOutput_v7_6Vtbl;
 
@@ -14181,98 +12256,98 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_6;
         CONST_VTBL struct IDeckLinkOutput_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkOutput_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkOutput_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkOutput_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkOutput_v7_6_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkOutput_v7_6_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkOutput_v7_6_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkOutput_v7_6_EnableVideoOutput(This,displayMode,flags)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) )
+    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) ) 
 
 #define IDeckLinkOutput_v7_6_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
+    ( (This)->lpVtbl -> DisableVideoOutput(This) ) 
 
 #define IDeckLinkOutput_v7_6_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkOutput_v7_6_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_v7_6_CreateAncillaryData(This,pixelFormat,outBuffer)	\
-    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) )
+    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) ) 
 
 #define IDeckLinkOutput_v7_6_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
+    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) ) 
 
 #define IDeckLinkOutput_v7_6_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
+    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) ) 
 
 #define IDeckLinkOutput_v7_6_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_6_GetBufferedVideoFrameCount(This,bufferedFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) ) 
 
 #define IDeckLinkOutput_v7_6_EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) )
+    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) ) 
 
 #define IDeckLinkOutput_v7_6_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
+    ( (This)->lpVtbl -> DisableAudioOutput(This) ) 
 
 #define IDeckLinkOutput_v7_6_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
+    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_6_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
+    ( (This)->lpVtbl -> BeginAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_6_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
+    ( (This)->lpVtbl -> EndAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_6_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
+    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_6_GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) ) 
 
 #define IDeckLinkOutput_v7_6_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
+    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) ) 
 
 #define IDeckLinkOutput_v7_6_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_6_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
+    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v7_6_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
+    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) ) 
 
 #define IDeckLinkOutput_v7_6_IsScheduledPlaybackRunning(This,active)	\
-    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) )
+    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) ) 
 
 #define IDeckLinkOutput_v7_6_GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed)	\
-    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) )
+    ( (This)->lpVtbl -> GetScheduledStreamTime(This,desiredTimeScale,streamTime,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v7_6_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -14289,149 +12364,149 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_6;
 #define __IDeckLinkInput_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInput_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInput_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("300C135A-9F43-48E2-9906-6D7911D93CF1")
     IDeckLinkInput_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback_v7_6 *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount( 
             /* [out] */ unsigned int *availableFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount( 
             /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkInputCallback_v7_6 *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInput_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInput_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInput_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkInput_v7_6 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkInput_v7_6 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkInput_v7_6 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback_v7_6 *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkInput_v7_6 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )( 
             IDeckLinkInput_v7_6 * This,
             /* [out] */ unsigned int *availableFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkInput_v7_6 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )( 
             IDeckLinkInput_v7_6 * This,
             /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushStreams )( 
             IDeckLinkInput_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkInput_v7_6 * This,
             /* [in] */ IDeckLinkInputCallback_v7_6 *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkInput_v7_6 * This,
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *hardwareTime,
             /* [out] */ BMDTimeValue *timeInFrame,
             /* [out] */ BMDTimeValue *ticksPerFrame);
-
+        
         END_INTERFACE
     } IDeckLinkInput_v7_6Vtbl;
 
@@ -14440,65 +12515,65 @@ EXTERN_C const IID IID_IDeckLinkInput_v7_6;
         CONST_VTBL struct IDeckLinkInput_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInput_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInput_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInput_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInput_v7_6_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkInput_v7_6_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkInput_v7_6_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkInput_v7_6_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkInput_v7_6_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkInput_v7_6_GetAvailableVideoFrameCount(This,availableFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) ) 
 
 #define IDeckLinkInput_v7_6_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkInput_v7_6_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkInput_v7_6_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) ) 
 
 #define IDeckLinkInput_v7_6_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkInput_v7_6_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkInput_v7_6_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkInput_v7_6_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+    ( (This)->lpVtbl -> FlushStreams(This) ) 
 
 #define IDeckLinkInput_v7_6_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #define IDeckLinkInput_v7_6_GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,hardwareTime,timeInFrame,ticksPerFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -14515,68 +12590,68 @@ EXTERN_C const IID IID_IDeckLinkInput_v7_6;
 #define __IDeckLinkTimecode_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkTimecode_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkTimecode_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("EFB9BCA6-A521-44F7-BD69-2332F24D9EE6")
     IDeckLinkTimecode_v7_6 : public IUnknown
     {
     public:
         virtual BMDTimecodeBCD STDMETHODCALLTYPE GetBCD( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetComponents(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetComponents( 
             /* [out] */ unsigned char *hours,
             /* [out] */ unsigned char *minutes,
             /* [out] */ unsigned char *seconds,
             /* [out] */ unsigned char *frames) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetString(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetString( 
             /* [out] */ BSTR *timecode) = 0;
-
+        
         virtual BMDTimecodeFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkTimecode_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkTimecode_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkTimecode_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkTimecode_v7_6 * This);
-
-        BMDTimecodeBCD ( STDMETHODCALLTYPE *GetBCD )(
+        
+        BMDTimecodeBCD ( STDMETHODCALLTYPE *GetBCD )( 
             IDeckLinkTimecode_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetComponents )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetComponents )( 
             IDeckLinkTimecode_v7_6 * This,
             /* [out] */ unsigned char *hours,
             /* [out] */ unsigned char *minutes,
             /* [out] */ unsigned char *seconds,
             /* [out] */ unsigned char *frames);
-
-        HRESULT ( STDMETHODCALLTYPE *GetString )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetString )( 
             IDeckLinkTimecode_v7_6 * This,
             /* [out] */ BSTR *timecode);
-
-        BMDTimecodeFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDTimecodeFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkTimecode_v7_6 * This);
-
+        
         END_INTERFACE
     } IDeckLinkTimecode_v7_6Vtbl;
 
@@ -14585,32 +12660,32 @@ EXTERN_C const IID IID_IDeckLinkTimecode_v7_6;
         CONST_VTBL struct IDeckLinkTimecode_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkTimecode_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkTimecode_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkTimecode_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkTimecode_v7_6_GetBCD(This)	\
-    ( (This)->lpVtbl -> GetBCD(This) )
+    ( (This)->lpVtbl -> GetBCD(This) ) 
 
 #define IDeckLinkTimecode_v7_6_GetComponents(This,hours,minutes,seconds,frames)	\
-    ( (This)->lpVtbl -> GetComponents(This,hours,minutes,seconds,frames) )
+    ( (This)->lpVtbl -> GetComponents(This,hours,minutes,seconds,frames) ) 
 
 #define IDeckLinkTimecode_v7_6_GetString(This,timecode)	\
-    ( (This)->lpVtbl -> GetString(This,timecode) )
+    ( (This)->lpVtbl -> GetString(This,timecode) ) 
 
 #define IDeckLinkTimecode_v7_6_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -14627,86 +12702,86 @@ EXTERN_C const IID IID_IDeckLinkTimecode_v7_6;
 #define __IDeckLinkVideoFrame_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrame_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("A8D8238E-6B18-4196-99E1-5AF717B83D32")
     IDeckLinkVideoFrame_v7_6 : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetRowBytes( void) = 0;
-
+        
         virtual BMDPixelFormat STDMETHODCALLTYPE GetPixelFormat( void) = 0;
-
+        
         virtual BMDFrameFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             /* [out] */ void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetTimecode( 
             BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode_v7_6 **timecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAncillaryData( 
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrame_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrame_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoFrame_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoFrame_v7_6 * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkVideoFrame_v7_6 * This,
             BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode_v7_6 **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkVideoFrame_v7_6 * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrame_v7_6Vtbl;
 
@@ -14715,44 +12790,44 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_6;
         CONST_VTBL struct IDeckLinkVideoFrame_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrame_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrame_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrame_v7_6_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkVideoFrame_v7_6_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 #endif /* COBJMACROS */
 
@@ -14769,94 +12844,94 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_6;
 #define __IDeckLinkMutableVideoFrame_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkMutableVideoFrame_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkMutableVideoFrame_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("46FCEE00-B4E6-43D0-91C0-023A7FCEB34F")
     IDeckLinkMutableVideoFrame_v7_6 : public IDeckLinkVideoFrame_v7_6
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE SetFlags(
+        virtual HRESULT STDMETHODCALLTYPE SetFlags( 
             BMDFrameFlags newFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetTimecode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetTimecode( 
             BMDTimecodeFormat format,
             /* [in] */ IDeckLinkTimecode_v7_6 *timecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetTimecodeFromComponents(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetTimecodeFromComponents( 
             BMDTimecodeFormat format,
             unsigned char hours,
             unsigned char minutes,
             unsigned char seconds,
             unsigned char frames,
             BMDTimecodeFlags flags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAncillaryData( 
             /* [in] */ IDeckLinkVideoFrameAncillary *ancillary) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkMutableVideoFrame_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkMutableVideoFrame_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode_v7_6 **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFlags )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             BMDFrameFlags newFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetTimecode )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             BMDTimecodeFormat format,
             /* [in] */ IDeckLinkTimecode_v7_6 *timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetTimecodeFromComponents )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetTimecodeFromComponents )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             BMDTimecodeFormat format,
             unsigned char hours,
@@ -14864,11 +12939,11 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame_v7_6;
             unsigned char seconds,
             unsigned char frames,
             BMDTimecodeFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAncillaryData )( 
             IDeckLinkMutableVideoFrame_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrameAncillary *ancillary);
-
+        
         END_INTERFACE
     } IDeckLinkMutableVideoFrame_v7_6Vtbl;
 
@@ -14877,57 +12952,57 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame_v7_6;
         CONST_VTBL struct IDeckLinkMutableVideoFrame_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkMutableVideoFrame_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 
 #define IDeckLinkMutableVideoFrame_v7_6_SetFlags(This,newFlags)	\
-    ( (This)->lpVtbl -> SetFlags(This,newFlags) )
+    ( (This)->lpVtbl -> SetFlags(This,newFlags) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_SetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> SetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> SetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags)	\
-    ( (This)->lpVtbl -> SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags) )
+    ( (This)->lpVtbl -> SetTimecodeFromComponents(This,format,hours,minutes,seconds,frames,flags) ) 
 
 #define IDeckLinkMutableVideoFrame_v7_6_SetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> SetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> SetAncillaryData(This,ancillary) ) 
 
 #endif /* COBJMACROS */
 
@@ -14944,88 +13019,88 @@ EXTERN_C const IID IID_IDeckLinkMutableVideoFrame_v7_6;
 #define __IDeckLinkVideoInputFrame_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoInputFrame_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("9A74FA41-AE9F-47AC-8CF4-01F42DD59965")
     IDeckLinkVideoInputFrame_v7_6 : public IDeckLinkVideoFrame_v7_6
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetStreamTime(
+        virtual HRESULT STDMETHODCALLTYPE GetStreamTime( 
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceTimestamp( 
             BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoInputFrame_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoInputFrame_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode_v7_6 **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceTimestamp )( 
             IDeckLinkVideoInputFrame_v7_6 * This,
             BMDTimeScale timeScale,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration);
-
+        
         END_INTERFACE
     } IDeckLinkVideoInputFrame_v7_6Vtbl;
 
@@ -15034,51 +13109,51 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_6;
         CONST_VTBL struct IDeckLinkVideoInputFrame_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoInputFrame_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetStreamTime(This,frameTime,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) ) 
 
 #define IDeckLinkVideoInputFrame_v7_6_GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) )
+    ( (This)->lpVtbl -> GetHardwareReferenceTimestamp(This,timeScale,frameTime,frameDuration) ) 
 
 #endif /* COBJMACROS */
 
@@ -15095,45 +13170,45 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_6;
 #define __IDeckLinkScreenPreviewCallback_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkScreenPreviewCallback_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("373F499D-4B4D-4518-AD22-6354E5A5825E")
     IDeckLinkScreenPreviewCallback_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DrawFrame(
+        virtual HRESULT STDMETHODCALLTYPE DrawFrame( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkScreenPreviewCallback_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkScreenPreviewCallback_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkScreenPreviewCallback_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkScreenPreviewCallback_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DrawFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DrawFrame )( 
             IDeckLinkScreenPreviewCallback_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame);
-
+        
         END_INTERFACE
     } IDeckLinkScreenPreviewCallback_v7_6Vtbl;
 
@@ -15142,23 +13217,23 @@ EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback_v7_6;
         CONST_VTBL struct IDeckLinkScreenPreviewCallback_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkScreenPreviewCallback_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkScreenPreviewCallback_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkScreenPreviewCallback_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkScreenPreviewCallback_v7_6_DrawFrame(This,theFrame)	\
-    ( (This)->lpVtbl -> DrawFrame(This,theFrame) )
+    ( (This)->lpVtbl -> DrawFrame(This,theFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -15175,55 +13250,55 @@ EXTERN_C const IID IID_IDeckLinkScreenPreviewCallback_v7_6;
 #define __IDeckLinkGLScreenPreviewHelper_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkGLScreenPreviewHelper_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("BA575CD9-A15E-497B-B2C2-F9AFE7BE4EBA")
     IDeckLinkGLScreenPreviewHelper_v7_6 : public IUnknown
     {
     public:
         virtual HRESULT STDMETHODCALLTYPE InitializeGL( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PaintGL( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetFrame( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkGLScreenPreviewHelper_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *InitializeGL )(
+        
+        HRESULT ( STDMETHODCALLTYPE *InitializeGL )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PaintGL )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PaintGL )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetFrame )( 
             IDeckLinkGLScreenPreviewHelper_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame);
-
+        
         END_INTERFACE
     } IDeckLinkGLScreenPreviewHelper_v7_6Vtbl;
 
@@ -15232,29 +13307,29 @@ EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper_v7_6;
         CONST_VTBL struct IDeckLinkGLScreenPreviewHelper_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_InitializeGL(This)	\
-    ( (This)->lpVtbl -> InitializeGL(This) )
+    ( (This)->lpVtbl -> InitializeGL(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_PaintGL(This)	\
-    ( (This)->lpVtbl -> PaintGL(This) )
+    ( (This)->lpVtbl -> PaintGL(This) ) 
 
 #define IDeckLinkGLScreenPreviewHelper_v7_6_SetFrame(This,theFrame)	\
-    ( (This)->lpVtbl -> SetFrame(This,theFrame) )
+    ( (This)->lpVtbl -> SetFrame(This,theFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -15271,47 +13346,47 @@ EXTERN_C const IID IID_IDeckLinkGLScreenPreviewHelper_v7_6;
 #define __IDeckLinkVideoConversion_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoConversion_v7_6 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoConversion_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("3EB504C9-F97D-40FE-A158-D407D48CB53B")
     IDeckLinkVideoConversion_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE ConvertFrame(
+        virtual HRESULT STDMETHODCALLTYPE ConvertFrame( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *srcFrame,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *dstFrame) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoConversion_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoConversion_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoConversion_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoConversion_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ConvertFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ConvertFrame )( 
             IDeckLinkVideoConversion_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *srcFrame,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *dstFrame);
-
+        
         END_INTERFACE
     } IDeckLinkVideoConversion_v7_6Vtbl;
 
@@ -15320,23 +13395,23 @@ EXTERN_C const IID IID_IDeckLinkVideoConversion_v7_6;
         CONST_VTBL struct IDeckLinkVideoConversion_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoConversion_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoConversion_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoConversion_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoConversion_v7_6_ConvertFrame(This,srcFrame,dstFrame)	\
-    ( (This)->lpVtbl -> ConvertFrame(This,srcFrame,dstFrame) )
+    ( (This)->lpVtbl -> ConvertFrame(This,srcFrame,dstFrame) ) 
 
 #endif /* COBJMACROS */
 
@@ -15353,246 +13428,246 @@ EXTERN_C const IID IID_IDeckLinkVideoConversion_v7_6;
 #define __IDeckLinkConfiguration_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkConfiguration_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkConfiguration_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("B8EAD569-B764-47F0-A73F-AE40DF6CBF10")
     IDeckLinkConfiguration_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetConfigurationValidator(
+        virtual HRESULT STDMETHODCALLTYPE GetConfigurationValidator( 
             /* [out] */ IDeckLinkConfiguration_v7_6 **configObject) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE WriteConfigurationToPreferences( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFormat( 
             /* [in] */ BMDVideoConnection_v7_6 videoOutputConnection) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsVideoOutputActive(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsVideoOutputActive( 
             /* [in] */ BMDVideoConnection_v7_6 videoOutputConnection,
             /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAnalogVideoOutputFlags(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAnalogVideoOutputFlags( 
             /* [in] */ BMDAnalogVideoFlags analogVideoFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAnalogVideoOutputFlags(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAnalogVideoOutputFlags( 
             /* [out] */ BMDAnalogVideoFlags *analogVideoFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableFieldFlickerRemovalWhenPaused(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableFieldFlickerRemovalWhenPaused( 
             /* [in] */ BOOL enable) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsEnabledFieldFlickerRemovalWhenPaused(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsEnabledFieldFlickerRemovalWhenPaused( 
             /* [out] */ BOOL *enabled) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Set444And3GBpsVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE Set444And3GBpsVideoOutput( 
             /* [in] */ BOOL enable444VideoOutput,
             /* [in] */ BOOL enable3GbsOutput) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Get444And3GBpsVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE Get444And3GBpsVideoOutput( 
             /* [out] */ BOOL *is444VideoOutputEnabled,
             /* [out] */ BOOL *threeGbsOutputEnabled) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputConversionMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputConversionMode( 
             /* [in] */ BMDVideoOutputConversionMode conversionMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoOutputConversionMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoOutputConversionMode( 
             /* [out] */ BMDVideoOutputConversionMode *conversionMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Set_HD1080p24_to_HD1080i5994_Conversion(
+        
+        virtual HRESULT STDMETHODCALLTYPE Set_HD1080p24_to_HD1080i5994_Conversion( 
             /* [in] */ BOOL enable) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Get_HD1080p24_to_HD1080i5994_Conversion(
+        
+        virtual HRESULT STDMETHODCALLTYPE Get_HD1080p24_to_HD1080i5994_Conversion( 
             /* [out] */ BOOL *enabled) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoInputFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoInputFormat( 
             /* [in] */ BMDVideoConnection_v7_6 videoInputFormat) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoInputFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoInputFormat( 
             /* [out] */ BMDVideoConnection_v7_6 *videoInputFormat) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAnalogVideoInputFlags(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAnalogVideoInputFlags( 
             /* [in] */ BMDAnalogVideoFlags analogVideoFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAnalogVideoInputFlags(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAnalogVideoInputFlags( 
             /* [out] */ BMDAnalogVideoFlags *analogVideoFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoInputConversionMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoInputConversionMode( 
             /* [in] */ BMDVideoInputConversionMode conversionMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVideoInputConversionMode(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVideoInputConversionMode( 
             /* [out] */ BMDVideoInputConversionMode *conversionMode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetBlackVideoOutputDuringCapture(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetBlackVideoOutputDuringCapture( 
             /* [in] */ BOOL blackOutInCapture) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBlackVideoOutputDuringCapture(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBlackVideoOutputDuringCapture( 
             /* [out] */ BOOL *blackOutInCapture) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Set32PulldownSequenceInitialTimecodeFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE Set32PulldownSequenceInitialTimecodeFrame( 
             /* [in] */ unsigned int aFrameTimecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE Get32PulldownSequenceInitialTimecodeFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE Get32PulldownSequenceInitialTimecodeFrame( 
             /* [out] */ unsigned int *aFrameTimecode) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVancSourceLineMapping(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVancSourceLineMapping( 
             /* [in] */ unsigned int activeLine1VANCsource,
             /* [in] */ unsigned int activeLine2VANCsource,
             /* [in] */ unsigned int activeLine3VANCsource) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetVancSourceLineMapping(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetVancSourceLineMapping( 
             /* [out] */ unsigned int *activeLine1VANCsource,
             /* [out] */ unsigned int *activeLine2VANCsource,
             /* [out] */ unsigned int *activeLine3VANCsource) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioInputFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioInputFormat( 
             /* [in] */ BMDAudioConnection_v10_2 audioInputFormat) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAudioInputFormat(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAudioInputFormat( 
             /* [out] */ BMDAudioConnection_v10_2 *audioInputFormat) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkConfiguration_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkConfiguration_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkConfiguration_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetConfigurationValidator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetConfigurationValidator )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ IDeckLinkConfiguration_v7_6 **configObject);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteConfigurationToPreferences )( 
             IDeckLinkConfiguration_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFormat )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDVideoConnection_v7_6 videoOutputConnection);
-
-        HRESULT ( STDMETHODCALLTYPE *IsVideoOutputActive )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsVideoOutputActive )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDVideoConnection_v7_6 videoOutputConnection,
             /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAnalogVideoOutputFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAnalogVideoOutputFlags )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDAnalogVideoFlags analogVideoFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAnalogVideoOutputFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAnalogVideoOutputFlags )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDAnalogVideoFlags *analogVideoFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableFieldFlickerRemovalWhenPaused )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableFieldFlickerRemovalWhenPaused )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BOOL enable);
-
-        HRESULT ( STDMETHODCALLTYPE *IsEnabledFieldFlickerRemovalWhenPaused )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsEnabledFieldFlickerRemovalWhenPaused )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BOOL *enabled);
-
-        HRESULT ( STDMETHODCALLTYPE *Set444And3GBpsVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Set444And3GBpsVideoOutput )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BOOL enable444VideoOutput,
             /* [in] */ BOOL enable3GbsOutput);
-
-        HRESULT ( STDMETHODCALLTYPE *Get444And3GBpsVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Get444And3GBpsVideoOutput )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BOOL *is444VideoOutputEnabled,
             /* [out] */ BOOL *threeGbsOutputEnabled);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputConversionMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputConversionMode )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDVideoOutputConversionMode conversionMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoOutputConversionMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoOutputConversionMode )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDVideoOutputConversionMode *conversionMode);
-
-        HRESULT ( STDMETHODCALLTYPE *Set_HD1080p24_to_HD1080i5994_Conversion )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Set_HD1080p24_to_HD1080i5994_Conversion )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BOOL enable);
-
-        HRESULT ( STDMETHODCALLTYPE *Get_HD1080p24_to_HD1080i5994_Conversion )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Get_HD1080p24_to_HD1080i5994_Conversion )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BOOL *enabled);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoInputFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoInputFormat )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDVideoConnection_v7_6 videoInputFormat);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoInputFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoInputFormat )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDVideoConnection_v7_6 *videoInputFormat);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAnalogVideoInputFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAnalogVideoInputFlags )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDAnalogVideoFlags analogVideoFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAnalogVideoInputFlags )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAnalogVideoInputFlags )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDAnalogVideoFlags *analogVideoFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoInputConversionMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoInputConversionMode )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDVideoInputConversionMode conversionMode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVideoInputConversionMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVideoInputConversionMode )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDVideoInputConversionMode *conversionMode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetBlackVideoOutputDuringCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetBlackVideoOutputDuringCapture )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BOOL blackOutInCapture);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBlackVideoOutputDuringCapture )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBlackVideoOutputDuringCapture )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BOOL *blackOutInCapture);
-
-        HRESULT ( STDMETHODCALLTYPE *Set32PulldownSequenceInitialTimecodeFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Set32PulldownSequenceInitialTimecodeFrame )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ unsigned int aFrameTimecode);
-
-        HRESULT ( STDMETHODCALLTYPE *Get32PulldownSequenceInitialTimecodeFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Get32PulldownSequenceInitialTimecodeFrame )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ unsigned int *aFrameTimecode);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVancSourceLineMapping )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVancSourceLineMapping )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ unsigned int activeLine1VANCsource,
             /* [in] */ unsigned int activeLine2VANCsource,
             /* [in] */ unsigned int activeLine3VANCsource);
-
-        HRESULT ( STDMETHODCALLTYPE *GetVancSourceLineMapping )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetVancSourceLineMapping )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ unsigned int *activeLine1VANCsource,
             /* [out] */ unsigned int *activeLine2VANCsource,
             /* [out] */ unsigned int *activeLine3VANCsource);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioInputFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioInputFormat )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [in] */ BMDAudioConnection_v10_2 audioInputFormat);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAudioInputFormat )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAudioInputFormat )( 
             IDeckLinkConfiguration_v7_6 * This,
             /* [out] */ BMDAudioConnection_v10_2 *audioInputFormat);
-
+        
         END_INTERFACE
     } IDeckLinkConfiguration_v7_6Vtbl;
 
@@ -15601,104 +13676,104 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v7_6;
         CONST_VTBL struct IDeckLinkConfiguration_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkConfiguration_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkConfiguration_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkConfiguration_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkConfiguration_v7_6_GetConfigurationValidator(This,configObject)	\
-    ( (This)->lpVtbl -> GetConfigurationValidator(This,configObject) )
+    ( (This)->lpVtbl -> GetConfigurationValidator(This,configObject) ) 
 
 #define IDeckLinkConfiguration_v7_6_WriteConfigurationToPreferences(This)	\
-    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) )
+    ( (This)->lpVtbl -> WriteConfigurationToPreferences(This) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetVideoOutputFormat(This,videoOutputConnection)	\
-    ( (This)->lpVtbl -> SetVideoOutputFormat(This,videoOutputConnection) )
+    ( (This)->lpVtbl -> SetVideoOutputFormat(This,videoOutputConnection) ) 
 
 #define IDeckLinkConfiguration_v7_6_IsVideoOutputActive(This,videoOutputConnection,active)	\
-    ( (This)->lpVtbl -> IsVideoOutputActive(This,videoOutputConnection,active) )
+    ( (This)->lpVtbl -> IsVideoOutputActive(This,videoOutputConnection,active) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetAnalogVideoOutputFlags(This,analogVideoFlags)	\
-    ( (This)->lpVtbl -> SetAnalogVideoOutputFlags(This,analogVideoFlags) )
+    ( (This)->lpVtbl -> SetAnalogVideoOutputFlags(This,analogVideoFlags) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetAnalogVideoOutputFlags(This,analogVideoFlags)	\
-    ( (This)->lpVtbl -> GetAnalogVideoOutputFlags(This,analogVideoFlags) )
+    ( (This)->lpVtbl -> GetAnalogVideoOutputFlags(This,analogVideoFlags) ) 
 
 #define IDeckLinkConfiguration_v7_6_EnableFieldFlickerRemovalWhenPaused(This,enable)	\
-    ( (This)->lpVtbl -> EnableFieldFlickerRemovalWhenPaused(This,enable) )
+    ( (This)->lpVtbl -> EnableFieldFlickerRemovalWhenPaused(This,enable) ) 
 
 #define IDeckLinkConfiguration_v7_6_IsEnabledFieldFlickerRemovalWhenPaused(This,enabled)	\
-    ( (This)->lpVtbl -> IsEnabledFieldFlickerRemovalWhenPaused(This,enabled) )
+    ( (This)->lpVtbl -> IsEnabledFieldFlickerRemovalWhenPaused(This,enabled) ) 
 
 #define IDeckLinkConfiguration_v7_6_Set444And3GBpsVideoOutput(This,enable444VideoOutput,enable3GbsOutput)	\
-    ( (This)->lpVtbl -> Set444And3GBpsVideoOutput(This,enable444VideoOutput,enable3GbsOutput) )
+    ( (This)->lpVtbl -> Set444And3GBpsVideoOutput(This,enable444VideoOutput,enable3GbsOutput) ) 
 
 #define IDeckLinkConfiguration_v7_6_Get444And3GBpsVideoOutput(This,is444VideoOutputEnabled,threeGbsOutputEnabled)	\
-    ( (This)->lpVtbl -> Get444And3GBpsVideoOutput(This,is444VideoOutputEnabled,threeGbsOutputEnabled) )
+    ( (This)->lpVtbl -> Get444And3GBpsVideoOutput(This,is444VideoOutputEnabled,threeGbsOutputEnabled) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetVideoOutputConversionMode(This,conversionMode)	\
-    ( (This)->lpVtbl -> SetVideoOutputConversionMode(This,conversionMode) )
+    ( (This)->lpVtbl -> SetVideoOutputConversionMode(This,conversionMode) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetVideoOutputConversionMode(This,conversionMode)	\
-    ( (This)->lpVtbl -> GetVideoOutputConversionMode(This,conversionMode) )
+    ( (This)->lpVtbl -> GetVideoOutputConversionMode(This,conversionMode) ) 
 
 #define IDeckLinkConfiguration_v7_6_Set_HD1080p24_to_HD1080i5994_Conversion(This,enable)	\
-    ( (This)->lpVtbl -> Set_HD1080p24_to_HD1080i5994_Conversion(This,enable) )
+    ( (This)->lpVtbl -> Set_HD1080p24_to_HD1080i5994_Conversion(This,enable) ) 
 
 #define IDeckLinkConfiguration_v7_6_Get_HD1080p24_to_HD1080i5994_Conversion(This,enabled)	\
-    ( (This)->lpVtbl -> Get_HD1080p24_to_HD1080i5994_Conversion(This,enabled) )
+    ( (This)->lpVtbl -> Get_HD1080p24_to_HD1080i5994_Conversion(This,enabled) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetVideoInputFormat(This,videoInputFormat)	\
-    ( (This)->lpVtbl -> SetVideoInputFormat(This,videoInputFormat) )
+    ( (This)->lpVtbl -> SetVideoInputFormat(This,videoInputFormat) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetVideoInputFormat(This,videoInputFormat)	\
-    ( (This)->lpVtbl -> GetVideoInputFormat(This,videoInputFormat) )
+    ( (This)->lpVtbl -> GetVideoInputFormat(This,videoInputFormat) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetAnalogVideoInputFlags(This,analogVideoFlags)	\
-    ( (This)->lpVtbl -> SetAnalogVideoInputFlags(This,analogVideoFlags) )
+    ( (This)->lpVtbl -> SetAnalogVideoInputFlags(This,analogVideoFlags) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetAnalogVideoInputFlags(This,analogVideoFlags)	\
-    ( (This)->lpVtbl -> GetAnalogVideoInputFlags(This,analogVideoFlags) )
+    ( (This)->lpVtbl -> GetAnalogVideoInputFlags(This,analogVideoFlags) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetVideoInputConversionMode(This,conversionMode)	\
-    ( (This)->lpVtbl -> SetVideoInputConversionMode(This,conversionMode) )
+    ( (This)->lpVtbl -> SetVideoInputConversionMode(This,conversionMode) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetVideoInputConversionMode(This,conversionMode)	\
-    ( (This)->lpVtbl -> GetVideoInputConversionMode(This,conversionMode) )
+    ( (This)->lpVtbl -> GetVideoInputConversionMode(This,conversionMode) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetBlackVideoOutputDuringCapture(This,blackOutInCapture)	\
-    ( (This)->lpVtbl -> SetBlackVideoOutputDuringCapture(This,blackOutInCapture) )
+    ( (This)->lpVtbl -> SetBlackVideoOutputDuringCapture(This,blackOutInCapture) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetBlackVideoOutputDuringCapture(This,blackOutInCapture)	\
-    ( (This)->lpVtbl -> GetBlackVideoOutputDuringCapture(This,blackOutInCapture) )
+    ( (This)->lpVtbl -> GetBlackVideoOutputDuringCapture(This,blackOutInCapture) ) 
 
 #define IDeckLinkConfiguration_v7_6_Set32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode)	\
-    ( (This)->lpVtbl -> Set32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode) )
+    ( (This)->lpVtbl -> Set32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode) ) 
 
 #define IDeckLinkConfiguration_v7_6_Get32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode)	\
-    ( (This)->lpVtbl -> Get32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode) )
+    ( (This)->lpVtbl -> Get32PulldownSequenceInitialTimecodeFrame(This,aFrameTimecode) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource)	\
-    ( (This)->lpVtbl -> SetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource) )
+    ( (This)->lpVtbl -> SetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource)	\
-    ( (This)->lpVtbl -> GetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource) )
+    ( (This)->lpVtbl -> GetVancSourceLineMapping(This,activeLine1VANCsource,activeLine2VANCsource,activeLine3VANCsource) ) 
 
 #define IDeckLinkConfiguration_v7_6_SetAudioInputFormat(This,audioInputFormat)	\
-    ( (This)->lpVtbl -> SetAudioInputFormat(This,audioInputFormat) )
+    ( (This)->lpVtbl -> SetAudioInputFormat(This,audioInputFormat) ) 
 
 #define IDeckLinkConfiguration_v7_6_GetAudioInputFormat(This,audioInputFormat)	\
-    ( (This)->lpVtbl -> GetAudioInputFormat(This,audioInputFormat) )
+    ( (This)->lpVtbl -> GetAudioInputFormat(This,audioInputFormat) ) 
 
 #endif /* COBJMACROS */
 
@@ -15715,52 +13790,52 @@ EXTERN_C const IID IID_IDeckLinkConfiguration_v7_6;
 #define __IDeckLinkVideoOutputCallback_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoOutputCallback_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("E763A626-4A3C-49D1-BF13-E7AD3692AE52")
     IDeckLinkVideoOutputCallback_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted(
+        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE ScheduledPlaybackHasStopped( void) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoOutputCallback_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoOutputCallback_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoOutputCallback_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoOutputCallback_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )( 
             IDeckLinkVideoOutputCallback_v7_6 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduledPlaybackHasStopped )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduledPlaybackHasStopped )( 
             IDeckLinkVideoOutputCallback_v7_6 * This);
-
+        
         END_INTERFACE
     } IDeckLinkVideoOutputCallback_v7_6Vtbl;
 
@@ -15769,26 +13844,26 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_6;
         CONST_VTBL struct IDeckLinkVideoOutputCallback_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoOutputCallback_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoOutputCallback_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoOutputCallback_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoOutputCallback_v7_6_ScheduledFrameCompleted(This,completedFrame,result)	\
-    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) )
+    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) ) 
 
 #define IDeckLinkVideoOutputCallback_v7_6_ScheduledPlaybackHasStopped(This)	\
-    ( (This)->lpVtbl -> ScheduledPlaybackHasStopped(This) )
+    ( (This)->lpVtbl -> ScheduledPlaybackHasStopped(This) ) 
 
 #endif /* COBJMACROS */
 
@@ -15805,58 +13880,58 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_6;
 #define __IDeckLinkInputCallback_v7_6_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInputCallback_v7_6 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInputCallback_v7_6;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("31D28EE7-88B6-4CB1-897A-CDBF79A26414")
     IDeckLinkInputCallback_v7_6 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged(
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged( 
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode_v7_6 *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived( 
             /* [in] */ IDeckLinkVideoInputFrame_v7_6 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInputCallback_v7_6Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInputCallback_v7_6 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInputCallback_v7_6 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInputCallback_v7_6 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )( 
             IDeckLinkInputCallback_v7_6 * This,
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode_v7_6 *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )( 
             IDeckLinkInputCallback_v7_6 * This,
             /* [in] */ IDeckLinkVideoInputFrame_v7_6 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket);
-
+        
         END_INTERFACE
     } IDeckLinkInputCallback_v7_6Vtbl;
 
@@ -15865,26 +13940,26 @@ EXTERN_C const IID IID_IDeckLinkInputCallback_v7_6;
         CONST_VTBL struct IDeckLinkInputCallback_v7_6Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInputCallback_v7_6_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInputCallback_v7_6_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInputCallback_v7_6_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInputCallback_v7_6_VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags)	\
-    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) )
+    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) ) 
 
 #define IDeckLinkInputCallback_v7_6_VideoInputFrameArrived(This,videoFrame,audioPacket)	\
-    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) )
+    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) ) 
 
 #endif /* COBJMACROS */
 
@@ -15917,58 +13992,58 @@ CDeckLinkVideoConversion_v7_6;
 #define __IDeckLinkInputCallback_v7_3_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInputCallback_v7_3 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInputCallback_v7_3;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("FD6F311D-4D00-444B-9ED4-1F25B5730AD0")
     IDeckLinkInputCallback_v7_3 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged(
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFormatChanged( 
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode_v7_6 *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived(
+        
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived( 
             /* [in] */ IDeckLinkVideoInputFrame_v7_3 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInputCallback_v7_3Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInputCallback_v7_3 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInputCallback_v7_3 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInputCallback_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFormatChanged )( 
             IDeckLinkInputCallback_v7_3 * This,
             /* [in] */ BMDVideoInputFormatChangedEvents notificationEvents,
             /* [in] */ IDeckLinkDisplayMode_v7_6 *newDisplayMode,
             /* [in] */ BMDDetectedVideoInputFormatFlags detectedSignalFlags);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )( 
             IDeckLinkInputCallback_v7_3 * This,
             /* [in] */ IDeckLinkVideoInputFrame_v7_3 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket *audioPacket);
-
+        
         END_INTERFACE
     } IDeckLinkInputCallback_v7_3Vtbl;
 
@@ -15977,26 +14052,26 @@ EXTERN_C const IID IID_IDeckLinkInputCallback_v7_3;
         CONST_VTBL struct IDeckLinkInputCallback_v7_3Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInputCallback_v7_3_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInputCallback_v7_3_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInputCallback_v7_3_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInputCallback_v7_3_VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags)	\
-    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) )
+    ( (This)->lpVtbl -> VideoInputFormatChanged(This,notificationEvents,newDisplayMode,detectedSignalFlags) ) 
 
 #define IDeckLinkInputCallback_v7_3_VideoInputFrameArrived(This,videoFrame,audioPacket)	\
-    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) )
+    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) ) 
 
 #endif /* COBJMACROS */
 
@@ -16013,161 +14088,161 @@ EXTERN_C const IID IID_IDeckLinkInputCallback_v7_3;
 #define __IDeckLinkOutput_v7_3_INTERFACE_DEFINED__
 
 /* interface IDeckLinkOutput_v7_3 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkOutput_v7_3;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("271C65E3-C323-4344-A30F-D908BCB20AA3")
     IDeckLinkOutput_v7_3 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput( 
             BMDDisplayMode displayMode,
             BMDVideoOutputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame( 
             int width,
             int height,
             int rowBytes,
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame_v7_6 **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateAncillaryData( 
             BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame( 
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback( 
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedVideoFrameCount( 
             /* [out] */ unsigned int *bufferedFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount,
             BMDAudioOutputStreamType streamType) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync( 
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples( 
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback( 
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback( 
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback( 
             BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning(
+        
+        virtual HRESULT STDMETHODCALLTYPE IsScheduledPlaybackRunning( 
             /* [out] */ BOOL *active) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *elapsedTimeSinceSchedulerBegan) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkOutput_v7_3Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkOutput_v7_3 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkOutput_v7_3 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkOutput_v7_3 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )( 
             IDeckLinkOutput_v7_3 * This,
             BMDDisplayMode displayMode,
             BMDVideoOutputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )( 
             IDeckLinkOutput_v7_3 * This,
             int width,
             int height,
@@ -16175,93 +14250,93 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_3;
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             /* [out] */ IDeckLinkMutableVideoFrame_v7_6 **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateAncillaryData )( 
             IDeckLinkOutput_v7_3 * This,
             BMDPixelFormat pixelFormat,
             /* [out] */ IDeckLinkVideoFrameAncillary **outBuffer);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_6 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkVideoOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedVideoFrameCount )( 
             IDeckLinkOutput_v7_3 * This,
             /* [out] */ unsigned int *bufferedFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )( 
             IDeckLinkOutput_v7_3 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount,
             BMDAudioOutputStreamType streamType);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkOutput_v7_3 * This,
             /* [out] */ unsigned int *bufferedSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )( 
             IDeckLinkOutput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )( 
             IDeckLinkOutput_v7_3 * This,
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )( 
             IDeckLinkOutput_v7_3 * This,
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )( 
             IDeckLinkOutput_v7_3 * This,
             BMDTimeValue stopPlaybackAtTime,
             /* [out] */ BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )(
+        
+        HRESULT ( STDMETHODCALLTYPE *IsScheduledPlaybackRunning )( 
             IDeckLinkOutput_v7_3 * This,
             /* [out] */ BOOL *active);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkOutput_v7_3 * This,
             BMDTimeScale desiredTimeScale,
             /* [out] */ BMDTimeValue *elapsedTimeSinceSchedulerBegan);
-
+        
         END_INTERFACE
     } IDeckLinkOutput_v7_3Vtbl;
 
@@ -16270,95 +14345,95 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_3;
         CONST_VTBL struct IDeckLinkOutput_v7_3Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkOutput_v7_3_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkOutput_v7_3_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkOutput_v7_3_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkOutput_v7_3_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkOutput_v7_3_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkOutput_v7_3_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkOutput_v7_3_EnableVideoOutput(This,displayMode,flags)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) )
+    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode,flags) ) 
 
 #define IDeckLinkOutput_v7_3_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
+    ( (This)->lpVtbl -> DisableVideoOutput(This) ) 
 
 #define IDeckLinkOutput_v7_3_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkOutput_v7_3_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_v7_3_CreateAncillaryData(This,pixelFormat,outBuffer)	\
-    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) )
+    ( (This)->lpVtbl -> CreateAncillaryData(This,pixelFormat,outBuffer) ) 
 
 #define IDeckLinkOutput_v7_3_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
+    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) ) 
 
 #define IDeckLinkOutput_v7_3_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
+    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) ) 
 
 #define IDeckLinkOutput_v7_3_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_3_GetBufferedVideoFrameCount(This,bufferedFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedVideoFrameCount(This,bufferedFrameCount) ) 
 
 #define IDeckLinkOutput_v7_3_EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) )
+    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount,streamType) ) 
 
 #define IDeckLinkOutput_v7_3_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
+    ( (This)->lpVtbl -> DisableAudioOutput(This) ) 
 
 #define IDeckLinkOutput_v7_3_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
+    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_3_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
+    ( (This)->lpVtbl -> BeginAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_3_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
+    ( (This)->lpVtbl -> EndAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_3_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
+    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_3_GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleFrameCount) ) 
 
 #define IDeckLinkOutput_v7_3_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
+    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) ) 
 
 #define IDeckLinkOutput_v7_3_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_3_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
+    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v7_3_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
+    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) ) 
 
 #define IDeckLinkOutput_v7_3_IsScheduledPlaybackRunning(This,active)	\
-    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) )
+    ( (This)->lpVtbl -> IsScheduledPlaybackRunning(This,active) ) 
 
 #define IDeckLinkOutput_v7_3_GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan) ) 
 
 #endif /* COBJMACROS */
 
@@ -16375,136 +14450,136 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_3;
 #define __IDeckLinkInput_v7_3_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInput_v7_3 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInput_v7_3;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("4973F012-9925-458C-871C-18774CDBBECB")
     IDeckLinkInput_v7_3 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScreenPreviewCallback( 
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableVideoFrameCount( 
             /* [out] */ unsigned int *availableFrameCount) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAvailableAudioSampleFrameCount( 
             /* [out] */ unsigned int *availableSampleFrameCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkInputCallback_v7_3 *theCallback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInput_v7_3Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInput_v7_3 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInput_v7_3 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkInput_v7_3 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkInput_v7_3 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_6 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScreenPreviewCallback )( 
             IDeckLinkInput_v7_3 * This,
             /* [in] */ IDeckLinkScreenPreviewCallback *previewCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkInput_v7_3 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoFrameCount )( 
             IDeckLinkInput_v7_3 * This,
             /* [out] */ unsigned int *availableFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkInput_v7_3 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAvailableAudioSampleFrameCount )( 
             IDeckLinkInput_v7_3 * This,
             /* [out] */ unsigned int *availableSampleFrameCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushStreams )( 
             IDeckLinkInput_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkInput_v7_3 * This,
             /* [in] */ IDeckLinkInputCallback_v7_3 *theCallback);
-
+        
         END_INTERFACE
     } IDeckLinkInput_v7_3Vtbl;
 
@@ -16513,62 +14588,62 @@ EXTERN_C const IID IID_IDeckLinkInput_v7_3;
         CONST_VTBL struct IDeckLinkInput_v7_3Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInput_v7_3_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInput_v7_3_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInput_v7_3_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInput_v7_3_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkInput_v7_3_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkInput_v7_3_SetScreenPreviewCallback(This,previewCallback)	\
-    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) )
+    ( (This)->lpVtbl -> SetScreenPreviewCallback(This,previewCallback) ) 
 
 #define IDeckLinkInput_v7_3_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkInput_v7_3_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkInput_v7_3_GetAvailableVideoFrameCount(This,availableFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableVideoFrameCount(This,availableFrameCount) ) 
 
 #define IDeckLinkInput_v7_3_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkInput_v7_3_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkInput_v7_3_GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount)	\
-    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) )
+    ( (This)->lpVtbl -> GetAvailableAudioSampleFrameCount(This,availableSampleFrameCount) ) 
 
 #define IDeckLinkInput_v7_3_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkInput_v7_3_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkInput_v7_3_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkInput_v7_3_FlushStreams(This)	\
-    ( (This)->lpVtbl -> FlushStreams(This) )
+    ( (This)->lpVtbl -> FlushStreams(This) ) 
 
 #define IDeckLinkInput_v7_3_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #endif /* COBJMACROS */
 
@@ -16585,77 +14660,77 @@ EXTERN_C const IID IID_IDeckLinkInput_v7_3;
 #define __IDeckLinkVideoInputFrame_v7_3_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoInputFrame_v7_3 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_3;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("CF317790-2894-11DE-8C30-0800200C9A66")
     IDeckLinkVideoInputFrame_v7_3 : public IDeckLinkVideoFrame_v7_6
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetStreamTime(
+        virtual HRESULT STDMETHODCALLTYPE GetStreamTime( 
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             BMDTimeScale timeScale) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoInputFrame_v7_3Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoInputFrame_v7_3 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoInputFrame_v7_3 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoInputFrame_v7_3 * This,
             /* [out] */ void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetTimecode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetTimecode )( 
             IDeckLinkVideoInputFrame_v7_3 * This,
             BMDTimecodeFormat format,
             /* [out] */ IDeckLinkTimecode_v7_6 **timecode);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAncillaryData )( 
             IDeckLinkVideoInputFrame_v7_3 * This,
             /* [out] */ IDeckLinkVideoFrameAncillary **ancillary);
-
-        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetStreamTime )( 
             IDeckLinkVideoInputFrame_v7_3 * This,
             /* [out] */ BMDTimeValue *frameTime,
             /* [out] */ BMDTimeValue *frameDuration,
             BMDTimeScale timeScale);
-
+        
         END_INTERFACE
     } IDeckLinkVideoInputFrame_v7_3Vtbl;
 
@@ -16664,48 +14739,48 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_3;
         CONST_VTBL struct IDeckLinkVideoInputFrame_v7_3Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoInputFrame_v7_3_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetTimecode(This,format,timecode)	\
-    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) )
+    ( (This)->lpVtbl -> GetTimecode(This,format,timecode) ) 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetAncillaryData(This,ancillary)	\
-    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) )
+    ( (This)->lpVtbl -> GetAncillaryData(This,ancillary) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_3_GetStreamTime(This,frameTime,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetStreamTime(This,frameTime,frameDuration,timeScale) ) 
 
 #endif /* COBJMACROS */
 
@@ -16722,45 +14797,45 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_3;
 #define __IDeckLinkDisplayModeIterator_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayModeIterator_v7_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("B28131B6-59AC-4857-B5AC-CD75D5883E2F")
     IDeckLinkDisplayModeIterator_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE Next(
+        virtual HRESULT STDMETHODCALLTYPE Next( 
             /* [out] */ IDeckLinkDisplayMode_v7_1 **deckLinkDisplayMode) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayModeIterator_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayModeIterator_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayModeIterator_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayModeIterator_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *Next )(
+        
+        HRESULT ( STDMETHODCALLTYPE *Next )( 
             IDeckLinkDisplayModeIterator_v7_1 * This,
             /* [out] */ IDeckLinkDisplayMode_v7_1 **deckLinkDisplayMode);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayModeIterator_v7_1Vtbl;
 
@@ -16769,23 +14844,23 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_1;
         CONST_VTBL struct IDeckLinkDisplayModeIterator_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayModeIterator_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayModeIterator_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayModeIterator_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayModeIterator_v7_1_Next(This,deckLinkDisplayMode)	\
-    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) )
+    ( (This)->lpVtbl -> Next(This,deckLinkDisplayMode) ) 
 
 #endif /* COBJMACROS */
 
@@ -16802,69 +14877,69 @@ EXTERN_C const IID IID_IDeckLinkDisplayModeIterator_v7_1;
 #define __IDeckLinkDisplayMode_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkDisplayMode_v7_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("AF0CD6D5-8376-435E-8433-54F9DD530AC3")
     IDeckLinkDisplayMode_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetName(
+        virtual HRESULT STDMETHODCALLTYPE GetName( 
             /* [out] */ BSTR *name) = 0;
-
+        
         virtual BMDDisplayMode STDMETHODCALLTYPE GetDisplayMode( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetFrameRate(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetFrameRate( 
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkDisplayMode_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkDisplayMode_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkDisplayMode_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkDisplayMode_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetName )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetName )( 
             IDeckLinkDisplayMode_v7_1 * This,
             /* [out] */ BSTR *name);
-
-        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )(
+        
+        BMDDisplayMode ( STDMETHODCALLTYPE *GetDisplayMode )( 
             IDeckLinkDisplayMode_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkDisplayMode_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkDisplayMode_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameRate )( 
             IDeckLinkDisplayMode_v7_1 * This,
             /* [out] */ BMDTimeValue *frameDuration,
             /* [out] */ BMDTimeScale *timeScale);
-
+        
         END_INTERFACE
     } IDeckLinkDisplayMode_v7_1Vtbl;
 
@@ -16873,35 +14948,35 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_1;
         CONST_VTBL struct IDeckLinkDisplayMode_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkDisplayMode_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkDisplayMode_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkDisplayMode_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkDisplayMode_v7_1_GetName(This,name)	\
-    ( (This)->lpVtbl -> GetName(This,name) )
+    ( (This)->lpVtbl -> GetName(This,name) ) 
 
 #define IDeckLinkDisplayMode_v7_1_GetDisplayMode(This)	\
-    ( (This)->lpVtbl -> GetDisplayMode(This) )
+    ( (This)->lpVtbl -> GetDisplayMode(This) ) 
 
 #define IDeckLinkDisplayMode_v7_1_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkDisplayMode_v7_1_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkDisplayMode_v7_1_GetFrameRate(This,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetFrameRate(This,frameDuration,timeScale) ) 
 
 #endif /* COBJMACROS */
 
@@ -16918,70 +14993,70 @@ EXTERN_C const IID IID_IDeckLinkDisplayMode_v7_1;
 #define __IDeckLinkVideoFrame_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoFrame_v7_1 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("333F3A10-8C2D-43CF-B79D-46560FEEA1CE")
     IDeckLinkVideoFrame_v7_1 : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetWidth( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetHeight( void) = 0;
-
+        
         virtual long STDMETHODCALLTYPE GetRowBytes( void) = 0;
-
+        
         virtual BMDPixelFormat STDMETHODCALLTYPE GetPixelFormat( void) = 0;
-
+        
         virtual BMDFrameFlags STDMETHODCALLTYPE GetFlags( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             void **buffer) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoFrame_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoFrame_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoFrame_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoFrame_v7_1 * This,
             void **buffer);
-
+        
         END_INTERFACE
     } IDeckLinkVideoFrame_v7_1Vtbl;
 
@@ -16990,38 +15065,38 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_1;
         CONST_VTBL struct IDeckLinkVideoFrame_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoFrame_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoFrame_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoFrame_v7_1_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoFrame_v7_1_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #endif /* COBJMACROS */
 
@@ -17038,68 +15113,68 @@ EXTERN_C const IID IID_IDeckLinkVideoFrame_v7_1;
 #define __IDeckLinkVideoInputFrame_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoInputFrame_v7_1 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("C8B41D95-8848-40EE-9B37-6E3417FB114B")
     IDeckLinkVideoInputFrame_v7_1 : public IDeckLinkVideoFrame_v7_1
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE GetFrameTime(
+        virtual HRESULT STDMETHODCALLTYPE GetFrameTime( 
             BMDTimeValue *frameTime,
             BMDTimeValue *frameDuration,
             BMDTimeScale timeScale) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoInputFrame_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoInputFrame_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetWidth )(
+        
+        long ( STDMETHODCALLTYPE *GetWidth )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetHeight )(
+        
+        long ( STDMETHODCALLTYPE *GetHeight )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetRowBytes )(
+        
+        long ( STDMETHODCALLTYPE *GetRowBytes )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )(
+        
+        BMDPixelFormat ( STDMETHODCALLTYPE *GetPixelFormat )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )(
+        
+        BMDFrameFlags ( STDMETHODCALLTYPE *GetFlags )( 
             IDeckLinkVideoInputFrame_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkVideoInputFrame_v7_1 * This,
             void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetFrameTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetFrameTime )( 
             IDeckLinkVideoInputFrame_v7_1 * This,
             BMDTimeValue *frameTime,
             BMDTimeValue *frameDuration,
             BMDTimeScale timeScale);
-
+        
         END_INTERFACE
     } IDeckLinkVideoInputFrame_v7_1Vtbl;
 
@@ -17108,42 +15183,42 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_1;
         CONST_VTBL struct IDeckLinkVideoInputFrame_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoInputFrame_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetWidth(This)	\
-    ( (This)->lpVtbl -> GetWidth(This) )
+    ( (This)->lpVtbl -> GetWidth(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetHeight(This)	\
-    ( (This)->lpVtbl -> GetHeight(This) )
+    ( (This)->lpVtbl -> GetHeight(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetRowBytes(This)	\
-    ( (This)->lpVtbl -> GetRowBytes(This) )
+    ( (This)->lpVtbl -> GetRowBytes(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetPixelFormat(This)	\
-    ( (This)->lpVtbl -> GetPixelFormat(This) )
+    ( (This)->lpVtbl -> GetPixelFormat(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetFlags(This)	\
-    ( (This)->lpVtbl -> GetFlags(This) )
+    ( (This)->lpVtbl -> GetFlags(This) ) 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 
 #define IDeckLinkVideoInputFrame_v7_1_GetFrameTime(This,frameTime,frameDuration,timeScale)	\
-    ( (This)->lpVtbl -> GetFrameTime(This,frameTime,frameDuration,timeScale) )
+    ( (This)->lpVtbl -> GetFrameTime(This,frameTime,frameDuration,timeScale) ) 
 
 #endif /* COBJMACROS */
 
@@ -17160,59 +15235,59 @@ EXTERN_C const IID IID_IDeckLinkVideoInputFrame_v7_1;
 #define __IDeckLinkAudioInputPacket_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkAudioInputPacket_v7_1 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkAudioInputPacket_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("C86DE4F6-A29F-42E3-AB3A-1363E29F0788")
     IDeckLinkAudioInputPacket_v7_1 : public IUnknown
     {
     public:
         virtual long STDMETHODCALLTYPE GetSampleCount( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBytes(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBytes( 
             void **buffer) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetAudioPacketTime(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetAudioPacketTime( 
             BMDTimeValue *packetTime,
             BMDTimeScale timeScale) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkAudioInputPacket_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkAudioInputPacket_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkAudioInputPacket_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkAudioInputPacket_v7_1 * This);
-
-        long ( STDMETHODCALLTYPE *GetSampleCount )(
+        
+        long ( STDMETHODCALLTYPE *GetSampleCount )( 
             IDeckLinkAudioInputPacket_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBytes )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBytes )( 
             IDeckLinkAudioInputPacket_v7_1 * This,
             void **buffer);
-
-        HRESULT ( STDMETHODCALLTYPE *GetAudioPacketTime )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetAudioPacketTime )( 
             IDeckLinkAudioInputPacket_v7_1 * This,
             BMDTimeValue *packetTime,
             BMDTimeScale timeScale);
-
+        
         END_INTERFACE
     } IDeckLinkAudioInputPacket_v7_1Vtbl;
 
@@ -17221,29 +15296,29 @@ EXTERN_C const IID IID_IDeckLinkAudioInputPacket_v7_1;
         CONST_VTBL struct IDeckLinkAudioInputPacket_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkAudioInputPacket_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkAudioInputPacket_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkAudioInputPacket_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkAudioInputPacket_v7_1_GetSampleCount(This)	\
-    ( (This)->lpVtbl -> GetSampleCount(This) )
+    ( (This)->lpVtbl -> GetSampleCount(This) ) 
 
 #define IDeckLinkAudioInputPacket_v7_1_GetBytes(This,buffer)	\
-    ( (This)->lpVtbl -> GetBytes(This,buffer) )
+    ( (This)->lpVtbl -> GetBytes(This,buffer) ) 
 
 #define IDeckLinkAudioInputPacket_v7_1_GetAudioPacketTime(This,packetTime,timeScale)	\
-    ( (This)->lpVtbl -> GetAudioPacketTime(This,packetTime,timeScale) )
+    ( (This)->lpVtbl -> GetAudioPacketTime(This,packetTime,timeScale) ) 
 
 #endif /* COBJMACROS */
 
@@ -17260,47 +15335,47 @@ EXTERN_C const IID IID_IDeckLinkAudioInputPacket_v7_1;
 #define __IDeckLinkVideoOutputCallback_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkVideoOutputCallback_v7_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("EBD01AFA-E4B0-49C6-A01D-EDB9D1B55FD9")
     IDeckLinkVideoOutputCallback_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted(
+        virtual HRESULT STDMETHODCALLTYPE ScheduledFrameCompleted( 
             /* [in] */ IDeckLinkVideoFrame_v7_1 *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkVideoOutputCallback_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkVideoOutputCallback_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkVideoOutputCallback_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkVideoOutputCallback_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduledFrameCompleted )( 
             IDeckLinkVideoOutputCallback_v7_1 * This,
             /* [in] */ IDeckLinkVideoFrame_v7_1 *completedFrame,
             /* [in] */ BMDOutputFrameCompletionResult result);
-
+        
         END_INTERFACE
     } IDeckLinkVideoOutputCallback_v7_1Vtbl;
 
@@ -17309,23 +15384,23 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_1;
         CONST_VTBL struct IDeckLinkVideoOutputCallback_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkVideoOutputCallback_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkVideoOutputCallback_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkVideoOutputCallback_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkVideoOutputCallback_v7_1_ScheduledFrameCompleted(This,completedFrame,result)	\
-    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) )
+    ( (This)->lpVtbl -> ScheduledFrameCompleted(This,completedFrame,result) ) 
 
 #endif /* COBJMACROS */
 
@@ -17342,47 +15417,47 @@ EXTERN_C const IID IID_IDeckLinkVideoOutputCallback_v7_1;
 #define __IDeckLinkInputCallback_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInputCallback_v7_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInputCallback_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("7F94F328-5ED4-4E9F-9729-76A86BDC99CC")
     IDeckLinkInputCallback_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived(
+        virtual HRESULT STDMETHODCALLTYPE VideoInputFrameArrived( 
             /* [in] */ IDeckLinkVideoInputFrame_v7_1 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket_v7_1 *audioPacket) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInputCallback_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInputCallback_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInputCallback_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInputCallback_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )(
+        
+        HRESULT ( STDMETHODCALLTYPE *VideoInputFrameArrived )( 
             IDeckLinkInputCallback_v7_1 * This,
             /* [in] */ IDeckLinkVideoInputFrame_v7_1 *videoFrame,
             /* [in] */ IDeckLinkAudioInputPacket_v7_1 *audioPacket);
-
+        
         END_INTERFACE
     } IDeckLinkInputCallback_v7_1Vtbl;
 
@@ -17391,23 +15466,23 @@ EXTERN_C const IID IID_IDeckLinkInputCallback_v7_1;
         CONST_VTBL struct IDeckLinkInputCallback_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInputCallback_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInputCallback_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInputCallback_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInputCallback_v7_1_VideoInputFrameArrived(This,videoFrame,audioPacket)	\
-    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) )
+    ( (This)->lpVtbl -> VideoInputFrameArrived(This,videoFrame,audioPacket) ) 
 
 #endif /* COBJMACROS */
 
@@ -17424,42 +15499,42 @@ EXTERN_C const IID IID_IDeckLinkInputCallback_v7_1;
 #define __IDeckLinkOutput_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkOutput_v7_1 */
-/* [helpstring][local][uuid][object] */
+/* [helpstring][local][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("AE5B3E9B-4E1E-4535-B6E8-480FF52F6CE5")
     IDeckLinkOutput_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_1 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoOutput( 
             BMDDisplayMode displayMode) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetVideoOutputFrameMemoryAllocator( 
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrame( 
             int width,
             int height,
             int rowBytes,
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             IDeckLinkVideoFrame_v7_1 **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrameFromBuffer(
+        
+        virtual HRESULT STDMETHODCALLTYPE CreateVideoFrameFromBuffer( 
             void *buffer,
             int width,
             int height,
@@ -17467,107 +15542,107 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             IDeckLinkVideoFrame_v7_1 **outFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE DisplayVideoFrameSync( 
             IDeckLinkVideoFrame_v7_1 *theFrame) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleVideoFrame( 
             IDeckLinkVideoFrame_v7_1 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetScheduledFrameCompletionCallback( 
             /* [in] */ IDeckLinkVideoOutputCallback_v7_1 *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioOutput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioOutput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync(
+        
+        virtual HRESULT STDMETHODCALLTYPE WriteAudioSamplesSync( 
             void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE BeginAudioPreroll( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE EndAudioPreroll( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ScheduleAudioSamples( 
             void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE FlushBufferedAudioSamples( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetAudioCallback( 
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StartScheduledPlayback( 
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback(
+        
+        virtual HRESULT STDMETHODCALLTYPE StopScheduledPlayback( 
             BMDTimeValue stopPlaybackAtTime,
             BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetHardwareReferenceClock( 
             BMDTimeScale desiredTimeScale,
             BMDTimeValue *elapsedTimeSinceSchedulerBegan) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkOutput_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkOutput_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkOutput_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkOutput_v7_1 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkOutput_v7_1 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_1 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoOutput )( 
             IDeckLinkOutput_v7_1 * This,
             BMDDisplayMode displayMode);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoOutput )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetVideoOutputFrameMemoryAllocator )( 
             IDeckLinkOutput_v7_1 * This,
             /* [in] */ IDeckLinkMemoryAllocator *theAllocator);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrame )( 
             IDeckLinkOutput_v7_1 * This,
             int width,
             int height,
@@ -17575,8 +15650,8 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             IDeckLinkVideoFrame_v7_1 **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrameFromBuffer )(
+        
+        HRESULT ( STDMETHODCALLTYPE *CreateVideoFrameFromBuffer )( 
             IDeckLinkOutput_v7_1 * This,
             void *buffer,
             int width,
@@ -17585,79 +15660,79 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
             BMDPixelFormat pixelFormat,
             BMDFrameFlags flags,
             IDeckLinkVideoFrame_v7_1 **outFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisplayVideoFrameSync )( 
             IDeckLinkOutput_v7_1 * This,
             IDeckLinkVideoFrame_v7_1 *theFrame);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleVideoFrame )( 
             IDeckLinkOutput_v7_1 * This,
             IDeckLinkVideoFrame_v7_1 *theFrame,
             BMDTimeValue displayTime,
             BMDTimeValue displayDuration,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetScheduledFrameCompletionCallback )( 
             IDeckLinkOutput_v7_1 * This,
             /* [in] */ IDeckLinkVideoOutputCallback_v7_1 *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioOutput )( 
             IDeckLinkOutput_v7_1 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioOutput )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )(
+        
+        HRESULT ( STDMETHODCALLTYPE *WriteAudioSamplesSync )( 
             IDeckLinkOutput_v7_1 * This,
             void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *BeginAudioPreroll )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EndAudioPreroll )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ScheduleAudioSamples )( 
             IDeckLinkOutput_v7_1 * This,
             void *buffer,
             unsigned int sampleFrameCount,
             BMDTimeValue streamTime,
             BMDTimeScale timeScale,
             /* [out] */ unsigned int *sampleFramesWritten);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkOutput_v7_1 * This,
             /* [out] */ unsigned int *bufferedSampleCount);
-
-        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *FlushBufferedAudioSamples )( 
             IDeckLinkOutput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetAudioCallback )( 
             IDeckLinkOutput_v7_1 * This,
             /* [in] */ IDeckLinkAudioOutputCallback *theCallback);
-
-        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartScheduledPlayback )( 
             IDeckLinkOutput_v7_1 * This,
             BMDTimeValue playbackStartTime,
             BMDTimeScale timeScale,
             double playbackSpeed);
-
-        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopScheduledPlayback )( 
             IDeckLinkOutput_v7_1 * This,
             BMDTimeValue stopPlaybackAtTime,
             BMDTimeValue *actualStopTime,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetHardwareReferenceClock )( 
             IDeckLinkOutput_v7_1 * This,
             BMDTimeScale desiredTimeScale,
             BMDTimeValue *elapsedTimeSinceSchedulerBegan);
-
+        
         END_INTERFACE
     } IDeckLinkOutput_v7_1Vtbl;
 
@@ -17666,86 +15741,86 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
         CONST_VTBL struct IDeckLinkOutput_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkOutput_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkOutput_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkOutput_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkOutput_v7_1_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkOutput_v7_1_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkOutput_v7_1_EnableVideoOutput(This,displayMode)	\
-    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode) )
+    ( (This)->lpVtbl -> EnableVideoOutput(This,displayMode) ) 
 
 #define IDeckLinkOutput_v7_1_DisableVideoOutput(This)	\
-    ( (This)->lpVtbl -> DisableVideoOutput(This) )
+    ( (This)->lpVtbl -> DisableVideoOutput(This) ) 
 
 #define IDeckLinkOutput_v7_1_SetVideoOutputFrameMemoryAllocator(This,theAllocator)	\
-    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) )
+    ( (This)->lpVtbl -> SetVideoOutputFrameMemoryAllocator(This,theAllocator) ) 
 
 #define IDeckLinkOutput_v7_1_CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrame(This,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_v7_1_CreateVideoFrameFromBuffer(This,buffer,width,height,rowBytes,pixelFormat,flags,outFrame)	\
-    ( (This)->lpVtbl -> CreateVideoFrameFromBuffer(This,buffer,width,height,rowBytes,pixelFormat,flags,outFrame) )
+    ( (This)->lpVtbl -> CreateVideoFrameFromBuffer(This,buffer,width,height,rowBytes,pixelFormat,flags,outFrame) ) 
 
 #define IDeckLinkOutput_v7_1_DisplayVideoFrameSync(This,theFrame)	\
-    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) )
+    ( (This)->lpVtbl -> DisplayVideoFrameSync(This,theFrame) ) 
 
 #define IDeckLinkOutput_v7_1_ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale)	\
-    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) )
+    ( (This)->lpVtbl -> ScheduleVideoFrame(This,theFrame,displayTime,displayDuration,timeScale) ) 
 
 #define IDeckLinkOutput_v7_1_SetScheduledFrameCompletionCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetScheduledFrameCompletionCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_1_EnableAudioOutput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioOutput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkOutput_v7_1_DisableAudioOutput(This)	\
-    ( (This)->lpVtbl -> DisableAudioOutput(This) )
+    ( (This)->lpVtbl -> DisableAudioOutput(This) ) 
 
 #define IDeckLinkOutput_v7_1_WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) )
+    ( (This)->lpVtbl -> WriteAudioSamplesSync(This,buffer,sampleFrameCount,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_1_BeginAudioPreroll(This)	\
-    ( (This)->lpVtbl -> BeginAudioPreroll(This) )
+    ( (This)->lpVtbl -> BeginAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_1_EndAudioPreroll(This)	\
-    ( (This)->lpVtbl -> EndAudioPreroll(This) )
+    ( (This)->lpVtbl -> EndAudioPreroll(This) ) 
 
 #define IDeckLinkOutput_v7_1_ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten)	\
-    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) )
+    ( (This)->lpVtbl -> ScheduleAudioSamples(This,buffer,sampleFrameCount,streamTime,timeScale,sampleFramesWritten) ) 
 
 #define IDeckLinkOutput_v7_1_GetBufferedAudioSampleFrameCount(This,bufferedSampleCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleCount) ) 
 
 #define IDeckLinkOutput_v7_1_FlushBufferedAudioSamples(This)	\
-    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) )
+    ( (This)->lpVtbl -> FlushBufferedAudioSamples(This) ) 
 
 #define IDeckLinkOutput_v7_1_SetAudioCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetAudioCallback(This,theCallback) ) 
 
 #define IDeckLinkOutput_v7_1_StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed)	\
-    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) )
+    ( (This)->lpVtbl -> StartScheduledPlayback(This,playbackStartTime,timeScale,playbackSpeed) ) 
 
 #define IDeckLinkOutput_v7_1_StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale)	\
-    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) )
+    ( (This)->lpVtbl -> StopScheduledPlayback(This,stopPlaybackAtTime,actualStopTime,timeScale) ) 
 
 #define IDeckLinkOutput_v7_1_GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan)	\
-    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan) )
+    ( (This)->lpVtbl -> GetHardwareReferenceClock(This,desiredTimeScale,elapsedTimeSinceSchedulerBegan) ) 
 
 #endif /* COBJMACROS */
 
@@ -17762,132 +15837,132 @@ EXTERN_C const IID IID_IDeckLinkOutput_v7_1;
 #define __IDeckLinkInput_v7_1_INTERFACE_DEFINED__
 
 /* interface IDeckLinkInput_v7_1 */
-/* [helpstring][uuid][object] */
+/* [helpstring][uuid][object] */ 
 
 
 EXTERN_C const IID IID_IDeckLinkInput_v7_1;
 
 #if defined(__cplusplus) && !defined(CINTERFACE)
-
+    
     MIDL_INTERFACE("2B54EDEF-5B32-429F-BA11-BB990596EACD")
     IDeckLinkInput_v7_1 : public IUnknown
     {
     public:
-        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode(
+        virtual HRESULT STDMETHODCALLTYPE DoesSupportVideoMode( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator(
+            /* [out] */ BMDDisplayModeSupport *result) = 0;
+        
+        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeIterator( 
             /* [out] */ IDeckLinkDisplayModeIterator_v7_1 **iterator) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableVideoInput( 
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableVideoInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput(
+        
+        virtual HRESULT STDMETHODCALLTYPE EnableAudioInput( 
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE DisableAudioInput( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE ReadAudioSamples(
+        
+        virtual HRESULT STDMETHODCALLTYPE ReadAudioSamples( 
             void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesRead,
             /* [out] */ BMDTimeValue *audioPacketTime,
             BMDTimeScale timeScale) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount(
+        
+        virtual HRESULT STDMETHODCALLTYPE GetBufferedAudioSampleFrameCount( 
             /* [out] */ unsigned int *bufferedSampleCount) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StartStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE StopStreams( void) = 0;
-
+        
         virtual HRESULT STDMETHODCALLTYPE PauseStreams( void) = 0;
-
-        virtual HRESULT STDMETHODCALLTYPE SetCallback(
+        
+        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
             /* [in] */ IDeckLinkInputCallback_v7_1 *theCallback) = 0;
-
+        
     };
-
-
+    
+    
 #else 	/* C style interface */
 
     typedef struct IDeckLinkInput_v7_1Vtbl
     {
         BEGIN_INTERFACE
-
-        HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
+        
+        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
             IDeckLinkInput_v7_1 * This,
             /* [in] */ REFIID riid,
-            /* [annotation][iid_is][out] */
+            /* [annotation][iid_is][out] */ 
             _COM_Outptr_  void **ppvObject);
-
-        ULONG ( STDMETHODCALLTYPE *AddRef )(
+        
+        ULONG ( STDMETHODCALLTYPE *AddRef )( 
             IDeckLinkInput_v7_1 * This);
-
-        ULONG ( STDMETHODCALLTYPE *Release )(
+        
+        ULONG ( STDMETHODCALLTYPE *Release )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DoesSupportVideoMode )( 
             IDeckLinkInput_v7_1 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
-            /* [out] */ BMDDisplayModeSupport_v10_11 *result);
-
-        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )(
+            /* [out] */ BMDDisplayModeSupport *result);
+        
+        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeIterator )( 
             IDeckLinkInput_v7_1 * This,
             /* [out] */ IDeckLinkDisplayModeIterator_v7_1 **iterator);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableVideoInput )( 
             IDeckLinkInput_v7_1 * This,
             BMDDisplayMode displayMode,
             BMDPixelFormat pixelFormat,
             BMDVideoInputFlags flags);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableVideoInput )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *EnableAudioInput )( 
             IDeckLinkInput_v7_1 * This,
             BMDAudioSampleRate sampleRate,
             BMDAudioSampleType sampleType,
             unsigned int channelCount);
-
-        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )(
+        
+        HRESULT ( STDMETHODCALLTYPE *DisableAudioInput )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *ReadAudioSamples )(
+        
+        HRESULT ( STDMETHODCALLTYPE *ReadAudioSamples )( 
             IDeckLinkInput_v7_1 * This,
             void *buffer,
             unsigned int sampleFrameCount,
             /* [out] */ unsigned int *sampleFramesRead,
             /* [out] */ BMDTimeValue *audioPacketTime,
             BMDTimeScale timeScale);
-
-        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )(
+        
+        HRESULT ( STDMETHODCALLTYPE *GetBufferedAudioSampleFrameCount )( 
             IDeckLinkInput_v7_1 * This,
             /* [out] */ unsigned int *bufferedSampleCount);
-
-        HRESULT ( STDMETHODCALLTYPE *StartStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StartStreams )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *StopStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *StopStreams )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *PauseStreams )(
+        
+        HRESULT ( STDMETHODCALLTYPE *PauseStreams )( 
             IDeckLinkInput_v7_1 * This);
-
-        HRESULT ( STDMETHODCALLTYPE *SetCallback )(
+        
+        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
             IDeckLinkInput_v7_1 * This,
             /* [in] */ IDeckLinkInputCallback_v7_1 *theCallback);
-
+        
         END_INTERFACE
     } IDeckLinkInput_v7_1Vtbl;
 
@@ -17896,56 +15971,56 @@ EXTERN_C const IID IID_IDeckLinkInput_v7_1;
         CONST_VTBL struct IDeckLinkInput_v7_1Vtbl *lpVtbl;
     };
 
-
+    
 
 #ifdef COBJMACROS
 
 
 #define IDeckLinkInput_v7_1_QueryInterface(This,riid,ppvObject)	\
-    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
+    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
 
 #define IDeckLinkInput_v7_1_AddRef(This)	\
-    ( (This)->lpVtbl -> AddRef(This) )
+    ( (This)->lpVtbl -> AddRef(This) ) 
 
 #define IDeckLinkInput_v7_1_Release(This)	\
-    ( (This)->lpVtbl -> Release(This) )
+    ( (This)->lpVtbl -> Release(This) ) 
 
 
 #define IDeckLinkInput_v7_1_DoesSupportVideoMode(This,displayMode,pixelFormat,result)	\
-    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) )
+    ( (This)->lpVtbl -> DoesSupportVideoMode(This,displayMode,pixelFormat,result) ) 
 
 #define IDeckLinkInput_v7_1_GetDisplayModeIterator(This,iterator)	\
-    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) )
+    ( (This)->lpVtbl -> GetDisplayModeIterator(This,iterator) ) 
 
 #define IDeckLinkInput_v7_1_EnableVideoInput(This,displayMode,pixelFormat,flags)	\
-    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) )
+    ( (This)->lpVtbl -> EnableVideoInput(This,displayMode,pixelFormat,flags) ) 
 
 #define IDeckLinkInput_v7_1_DisableVideoInput(This)	\
-    ( (This)->lpVtbl -> DisableVideoInput(This) )
+    ( (This)->lpVtbl -> DisableVideoInput(This) ) 
 
 #define IDeckLinkInput_v7_1_EnableAudioInput(This,sampleRate,sampleType,channelCount)	\
-    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) )
+    ( (This)->lpVtbl -> EnableAudioInput(This,sampleRate,sampleType,channelCount) ) 
 
 #define IDeckLinkInput_v7_1_DisableAudioInput(This)	\
-    ( (This)->lpVtbl -> DisableAudioInput(This) )
+    ( (This)->lpVtbl -> DisableAudioInput(This) ) 
 
 #define IDeckLinkInput_v7_1_ReadAudioSamples(This,buffer,sampleFrameCount,sampleFramesRead,audioPacketTime,timeScale)	\
-    ( (This)->lpVtbl -> ReadAudioSamples(This,buffer,sampleFrameCount,sampleFramesRead,audioPacketTime,timeScale) )
+    ( (This)->lpVtbl -> ReadAudioSamples(This,buffer,sampleFrameCount,sampleFramesRead,audioPacketTime,timeScale) ) 
 
 #define IDeckLinkInput_v7_1_GetBufferedAudioSampleFrameCount(This,bufferedSampleCount)	\
-    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleCount) )
+    ( (This)->lpVtbl -> GetBufferedAudioSampleFrameCount(This,bufferedSampleCount) ) 
 
 #define IDeckLinkInput_v7_1_StartStreams(This)	\
-    ( (This)->lpVtbl -> StartStreams(This) )
+    ( (This)->lpVtbl -> StartStreams(This) ) 
 
 #define IDeckLinkInput_v7_1_StopStreams(This)	\
-    ( (This)->lpVtbl -> StopStreams(This) )
+    ( (This)->lpVtbl -> StopStreams(This) ) 
 
 #define IDeckLinkInput_v7_1_PauseStreams(This)	\
-    ( (This)->lpVtbl -> PauseStreams(This) )
+    ( (This)->lpVtbl -> PauseStreams(This) ) 
 
 #define IDeckLinkInput_v7_1_SetCallback(This,theCallback)	\
-    ( (This)->lpVtbl -> SetCallback(This,theCallback) )
+    ( (This)->lpVtbl -> SetCallback(This,theCallback) ) 
 
 #endif /* COBJMACROS */
 
diff --git a/sys/decklink/win/DeckLinkAPI_i.c b/sys/decklink/win/DeckLinkAPI_i.c
index f2348545d..65da7aab4 100644
--- a/sys/decklink/win/DeckLinkAPI_i.c
+++ b/sys/decklink/win/DeckLinkAPI_i.c
@@ -1,4 +1,6 @@
 /* *INDENT-OFF* */
+
+
 
 /* this ALWAYS GENERATED file contains the IIDs and CLSIDs */
 
@@ -6,13 +8,13 @@
 
 
  /* File created by MIDL compiler version 8.01.0622 */
-/* at Tue Jan 19 12:14:07 2038
+/* at Fri Feb 28 12:18:07 2020
  */
 /* Compiler settings for ..\..\Blackmagic\DeckLink_SDK_10.11.4\Win\include\DeckLinkAPI.idl:
-    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622
+    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
     protocol : dce , ms_ext, c_ext, robust
-    error checks: allocation ref bounds_check enum stub_data
-    VC __declspec() decoration level:
+    error checks: allocation ref bounds_check enum stub_data 
+    VC __declspec() decoration level: 
          __declspec(uuid()), __declspec(selectany), __declspec(novtable)
          DECLSPEC_UUID(), MIDL_INTERFACE()
 */
@@ -22,9 +24,10 @@
 #pragma warning( disable: 4049 )  /* more than 64k source lines */
 #endif
 
+
 #ifdef __cplusplus
 extern "C"{
-#endif
+#endif 
 
 
 #include <rpc.h>
@@ -83,7 +86,7 @@ MIDL_DEFINE_GUID(IID, IID_IDeckLinkDisplayMode,0x3EB2C1AB,0x0A3D,0x4523,0xA3,0xA
 MIDL_DEFINE_GUID(IID, IID_IDeckLink,0xC418FBDD,0x0587,0x48ED,0x8F,0xE5,0x64,0x0F,0x0A,0x14,0xAF,0x91);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkConfiguration,0x912F634B,0x2D4E,0x40A4,0x8A,0xAB,0x8D,0x80,0xB7,0x3F,0x12,0x89);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkConfiguration,0xEF90380B,0x4AE5,0x4346,0x90,0x77,0xE2,0x88,0xE1,0x49,0xF1,0x29);
 
 
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkEncoderConfiguration,0x138050E5,0xC60A,0x4552,0xBF,0x3F,0x0F,0x35,0x80,0x49,0x32,0x7E);
@@ -155,16 +158,16 @@ MIDL_DEFINE_GUID(IID, IID_IDeckLinkIterator,0x50FB36CD,0x3063,0x4B73,0xBD,0xBB,0
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkAPIInformation,0x7BEA3C68,0x730D,0x4322,0xAF,0x34,0x8A,0x71,0x52,0xB5,0x32,0xA4);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkOutput,0x065A0F6C,0xC508,0x4D0D,0xB9,0x19,0xF5,0xEB,0x0E,0xBF,0xC9,0x6B);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkOutput,0xCC5C8A6E,0x3F2F,0x4B3A,0x87,0xEA,0xFD,0x78,0xAF,0x30,0x05,0x64);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkInput,0x2A88CF76,0xF494,0x4216,0xA7,0xEF,0xDC,0x74,0xEE,0xB8,0x38,0x82);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkInput,0xAF22762B,0xDFAC,0x4846,0xAA,0x79,0xFA,0x88,0x83,0x56,0x09,0x95);
 
 
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkHDMIInputEDID,0xABBBACBC,0x45BC,0x4665,0x9D,0x92,0xAC,0xE6,0xE5,0xA9,0x79,0x02);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkEncoderInput,0xF222551D,0x13DF,0x4FD8,0xB5,0x87,0x9D,0x4F,0x19,0xEC,0x12,0xC9);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkEncoderInput,0x270587DA,0x6B7D,0x42E7,0xA1,0xF0,0x6D,0x85,0x3F,0x58,0x11,0x85);
 
 
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkVideoFrame,0x3F716FE0,0xF023,0x4111,0xBE,0x5D,0xEF,0x44,0x14,0xC0,0x5B,0x17);
@@ -221,22 +224,10 @@ MIDL_DEFINE_GUID(IID, IID_IDeckLinkDX9ScreenPreviewHelper,0x2094B522,0xD1A1,0x40
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkNotificationCallback,0xb002a1ec,0x070d,0x4288,0x82,0x89,0xbd,0x5d,0x36,0xe5,0xff,0x0d);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkNotification,0xb85df4c8,0xbdf5,0x47c1,0x80,0x64,0x28,0x16,0x2e,0xbd,0xd4,0xeb);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkProfileAttributes,0x17D4BF8E,0x4911,0x473A,0x80,0xA0,0x73,0x1C,0xF6,0xFF,0x34,0x5B);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkProfileIterator,0x29E5A8C0,0x8BE4,0x46EB,0x93,0xAC,0x31,0xDA,0xAB,0x5B,0x7B,0xF2);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkNotification,0x0a1fb207,0xe215,0x441b,0x9b,0x19,0x6f,0xa1,0x57,0x59,0x46,0xc5);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkProfile,0x16093466,0x674A,0x432B,0x9D,0xA0,0x1A,0xC2,0xC5,0xA8,0x24,0x1C);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkProfileCallback,0xA4F9341E,0x97AA,0x4E04,0x89,0x35,0x15,0xF8,0x09,0x89,0x8C,0xEA);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkProfileManager,0x30D41429,0x3998,0x4B6D,0x84,0xF8,0x78,0xC9,0x4A,0x79,0x7C,0x6E);
+MIDL_DEFINE_GUID(IID, IID_IDeckLinkAttributes,0xABC11843,0xD966,0x44CB,0x96,0xE2,0xA1,0xCB,0x5D,0x31,0x35,0xC4);
 
 
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkStatus,0x5F558200,0x4028,0x49BC,0xBE,0xAC,0xDB,0x3F,0xA4,0xA9,0x6E,0x46);
@@ -254,7 +245,7 @@ MIDL_DEFINE_GUID(IID, IID_IDeckLinkDeviceNotificationCallback,0x4997053B,0x0ADF,
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkDiscovery,0xCDBF631C,0xBC76,0x45FA,0xB4,0x4D,0xC5,0x50,0x59,0xBC,0x61,0x01);
 
 
-MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkIterator,0xBA6C6F44,0x6DA5,0x4DCE,0x94,0xAA,0xEE,0x2D,0x13,0x72,0xA6,0x76);
+MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkIterator,0x87D2693F,0x8D4A,0x45C7,0xB4,0x3F,0x10,0xAC,0xBA,0x25,0xE6,0x8F);
 
 
 MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkAPIInformation,0x263CA19F,0xED09,0x482E,0x9F,0x9D,0x84,0x00,0x57,0x83,0xA2,0x37);
@@ -269,36 +260,12 @@ MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkDX9ScreenPreviewHelper,0xCC010023,0xE01D,
 MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkVideoConversion,0x7DBBBB11,0x5B7B,0x467D,0xAE,0xA4,0xCE,0xA4,0x68,0xFD,0x36,0x8C);
 
 
-MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkDiscovery,0x22FBFC33,0x8D07,0x495C,0xA5,0xBF,0xDA,0xB5,0xEA,0x9B,0x82,0xDB);
+MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkDiscovery,0x652615D4,0x26CD,0x4514,0xB1,0x61,0x2F,0xD5,0x07,0x2E,0xD0,0x08);
 
 
 MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkVideoFrameAncillaryPackets,0xF891AD29,0xD0C2,0x46E9,0xA9,0x26,0x4E,0x2D,0x0D,0xD8,0xCF,0xAD);
 
 
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkConfiguration_v10_11,0xEF90380B,0x4AE5,0x4346,0x90,0x77,0xE2,0x88,0xE1,0x49,0xF1,0x29);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkAttributes_v10_11,0xABC11843,0xD966,0x44CB,0x96,0xE2,0xA1,0xCB,0x5D,0x31,0x35,0xC4);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkNotification_v10_11,0x0A1FB207,0xE215,0x441B,0x9B,0x19,0x6F,0xA1,0x57,0x59,0x46,0xC5);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkOutput_v10_11,0xCC5C8A6E,0x3F2F,0x4B3A,0x87,0xEA,0xFD,0x78,0xAF,0x30,0x05,0x64);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkInput_v10_11,0xAF22762B,0xDFAC,0x4846,0xAA,0x79,0xFA,0x88,0x83,0x56,0x09,0x95);
-
-
-MIDL_DEFINE_GUID(IID, IID_IDeckLinkEncoderInput_v10_11,0x270587DA,0x6B7D,0x42E7,0xA1,0xF0,0x6D,0x85,0x3F,0x58,0x11,0x85);
-
-
-MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkIterator_v10_11,0x87D2693F,0x8D4A,0x45C7,0xB4,0x3F,0x10,0xAC,0xBA,0x25,0xE6,0x8F);
-
-
-MIDL_DEFINE_GUID(CLSID, CLSID_CDeckLinkDiscovery_v10_11,0x652615D4,0x26CD,0x4514,0xB1,0x61,0x2F,0xD5,0x07,0x2E,0xD0,0x08);
-
-
 MIDL_DEFINE_GUID(IID, IID_IDeckLinkConfiguration_v10_9,0xCB71734A,0xFE37,0x4E8D,0x8E,0x13,0x80,0x21,0x33,0xA1,0xC3,0xF2);
 
 
@@ -437,4 +404,6 @@ MIDL_DEFINE_GUID(IID, IID_IDeckLinkInput_v7_1,0x2B54EDEF,0x5B32,0x429F,0xBA,0x11
 #endif
 
 
+
+
 /* *INDENT-ON* */
-- 
2.20.1.windows.1

